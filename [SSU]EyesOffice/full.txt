namespace _SSU_EyesOffice
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Data;
    using System.Drawing;
    using System.Linq;
    using System.Text;
    using System.Threading.Tasks;
    using System.Windows.Forms;
    using _SSU_EyesOffice.Logic;
    using System.IO;
    using System.Windows.Forms.DataVisualization.Charting;
    using Word = Microsoft.Office.Interop.Word;

    public partial class FormMain : Form
    {
        private List<Patient> patients;

        private Grabber grabber = new Grabber();

        private int currentFrame = 0;

        private Record currentRecord = null;

        private bool isNoVideo = false;

        public FormMain()
        {
            InitializeComponent();
            UpdatePatientsList();

            chart1.ChartAreas[0].CursorX.Position = 0;
            chart1.ChartAreas[0].CursorX.LineColor = Color.Green;
            chart1.ChartAreas[0].CursorX.LineWidth = 2;
            chart1.ChartAreas[0].AxisX.Title = "№ кадра";
            chart1.ChartAreas[0].AxisY.Title = "X, мм";
            chart1.ChartAreas[0].AxisX.IntervalAutoMode = IntervalAutoMode.VariableCount;
            chart1.ChartAreas[0].AxisY.IntervalAutoMode = IntervalAutoMode.VariableCount;
            chart1.ChartAreas[0].AxisX.MajorGrid.LineColor = Color.Gray;
            chart1.ChartAreas[0].AxisY.MajorGrid.LineColor = Color.Gray;

            chart2.ChartAreas[0].CursorX.Position = 0;
            chart2.ChartAreas[0].CursorX.LineColor = Color.Green;
            chart2.ChartAreas[0].CursorX.LineWidth = 2;
            chart2.ChartAreas[0].AxisX.Title = "№ кадра";
            chart2.ChartAreas[0].AxisY.Title = "Y, мм";
            chart2.ChartAreas[0].AxisX.MajorGrid.LineColor = Color.Gray;
            chart2.ChartAreas[0].AxisY.MajorGrid.LineColor = Color.Gray;

            chart2.ChartAreas[0].AxisX.IntervalAutoMode = IntervalAutoMode.VariableCount;
            chart2.ChartAreas[0].AxisY.IntervalAutoMode = IntervalAutoMode.VariableCount;

            File.Delete($"{Directory.GetCurrentDirectory()}//temp.jpeg");
            FormMain_Resize(null, null);
        }

        private void UpdatePatientsList()
        {
            this.EnabledPatientButtons(false);
            this.ShowPatientRecords(false);
            this.btnAnalize.Enabled = this.btnDeleteRecord.Enabled = btnChangeVideo.Enabled = false;

            patients = new List<Patient>();
            patients = Patient.SelectAllFromDB();

            this.listBoxPatients.Items.Clear();

            foreach (var item in patients)
            {
                this.listBoxPatients.Items.Add($"{item.SecondName} {item.Name}");
            }

            if (listBoxPatients.Items.Count > 0)
            {
                listBoxPatients.SelectedIndex = 0;
            }
        }

        private void btnAddPatient_Click(object sender, EventArgs e)
        {
            var formAddPatinet = new Forms.FormAddPatient();
            formAddPatinet.Show();
            formAddPatinet.FormClosed += FormAddPatinet_FormClosed;
        }

        private void FormAddPatinet_FormClosed(object sender, FormClosedEventArgs e)
        {
            this.UpdatePatientsList();
        }

        private void btnEditPatient_Click(object sender, EventArgs e)
        {
            if (listBoxPatients.SelectedIndex < 0)
            {
                return;
            }

            var formEditPatinet = new Forms.FormEditPatient(this.patients[listBoxPatients.SelectedIndex].Id);
            formEditPatinet.FormClosed += FormEditPatinet_FormClosed;
        }

        private void FormEditPatinet_FormClosed(object sender, FormClosedEventArgs e)
        {
            this.UpdatePatientsList();
        }

        private void listBoxPatients_SelectedIndexChanged(object sender, EventArgs e)
        {
            this.ShowPatientRecords(false);
            this.btnAnalize.Enabled = this.btnDeleteRecord.Enabled = btnChangeVideo.Enabled = false;
            if (listBoxPatients.SelectedIndex < 0)
            {
                return;
            }

            var patient = this.patients[listBoxPatients.SelectedIndex];
            lblCurrentPatientName.Text = patient.Name;
            lblCurrentPatientSecondName.Text = patient.SecondName;
            lblCurrentPatientBirthDate.Text = patient.BirthDate.ToShortDateString();
            lblCurrentPatientSex.Text = patient.IsFemale ? "женский" : "мужской";
            lblCurrentPatientComments.Text = patient.Comments;

            this.EnabledRecordButtons(true);
            this.EnabledPatientButtons(true);

            try
            {
                this.patients[listBoxPatients.SelectedIndex].Records = Record.SelectAllFromDB(this.patients[listBoxPatients.SelectedIndex].Id);
            }
            catch (Exception ex)
            {
                Logging.Log(ex, $"listBoxPatients_SelectedIndexChanged(object sender, EventArgs e)  Record.SelectAllFromDB()");
                MessageBox.Show("Ошибка запроса к базе данных записей пациента", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                this.ShowPatientRecords(false);
                return;
            }

            this.dataGrid.Rows.Clear();

            foreach (var item in this.patients[listBoxPatients.SelectedIndex].Records)
            {
                this.dataGrid.Rows.Add(new string[] { item.Id.ToString(), item.Path, item.Date.ToString() });
            }

            this.ShowPatientRecords(true);

            dataGrid_SelectionChanged(null, null);
        }

        private void btnDeletePatient_Click(object sender, EventArgs e)
        {
            if (listBoxPatients.SelectedIndex < 0)
            {
                return;
            }

            var patient = patients[listBoxPatients.SelectedIndex];
            if (MessageBox.Show($"Вы уверены, что хотите удалить пациента: [{patient.Id}] {patient.Name} {patient.SecondName}? Все записи с ним также будут удалены", "Вы уверены?", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                try
                {
                    patients[listBoxPatients.SelectedIndex].Delete();
                }
                catch (Exception ex)
                {
                    Logging.Log(ex, $"btnDeletePatient_Click(object sender, EventArgs e); patients[{listBoxPatients.SelectedIndex}].Delete();");
                    MessageBox.Show("Ошибка при удалении", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                MessageBox.Show("Пациент удален", "Удалено", MessageBoxButtons.OK, MessageBoxIcon.Information);

                listBoxPatients.Items.Remove(listBoxPatients.SelectedItem);
                this.UpdatePatientsList();
            }

        }

        private void btnFromVideo_Click(object sender, EventArgs e)
        {
            if (listBoxPatients.SelectedIndex < 0)
            {
                return;
            }

            OpenFileDialog ofd = new OpenFileDialog();
            if (ofd.ShowDialog() == DialogResult.OK)
            {
                try
                {
                    Record.AddToDB(
                        this.patients[listBoxPatients.SelectedIndex].Id,
                        ofd.FileName,
                        DateTime.Now);
                    listBoxPatients_SelectedIndexChanged(null, null);
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Ошибка при добавлении видео", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    Logging.Log(ex, $"btnFromVideo_Click(object sender, EventArgs e);  Record.AddToDB();");
                }
            }
        }

        private void dataGrid_SelectionChanged(object sender, EventArgs e)
        {
            this.ShowRecordDetail(false);
            currentFrame = 0;

            isNoVideo = false;

            if (dataGrid.CurrentRow == null
                || dataGrid.CurrentRow.Index < 0
                || patients[listBoxPatients.SelectedIndex].Records.Count == 0
                || dataGrid.CurrentRow.Index >= patients[listBoxPatients.SelectedIndex].Records.Count
                || listBoxPatients.SelectedIndex < 0)
            {
                btnAnalize.Enabled = btnChangeVideo.Enabled = btnDeleteRecord.Enabled = false;
                return;
            }

            this.btnAnalize.Enabled = btnChangeVideo.Enabled = this.btnDeleteRecord.Enabled = true;

            this.currentRecord = patients[listBoxPatients.SelectedIndex].Records[dataGrid.CurrentRow.Index];


            if (!File.Exists($"data//{currentRecord.Id}.dat"))
            {
                return;
            }

            try
            {
                currentRecord.Open();
            }
            catch (Exception ex)
            {
                MessageBox.Show("Некорректный файл с данными о детектировании", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                Logging.Log(ex, $"dataGrid_SelectionChanged(object sender, EventArgs e), currentRecord.Open() recordID: {currentRecord?.Id}");
                return;
            }

            if (currentRecord.Length <= 0)
            {
                MessageBox.Show("Видео ещё не было анализировано", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            try
            {
                grabber.ReleaseCapture();
                grabber.SetCapture(currentRecord.Path);
            }
            catch (Exception ex)
            {
                //Logging.Log(ex, $"dataGridSelection_change setCapture for file: {currentRecord?.Path}");
                isNoVideo = true;
                grabber.ReleaseCapture();
                // return;
            }

            lblID.Text = currentRecord.Id.ToString();
            lblPath.Text = string.IsNullOrWhiteSpace(currentRecord.Comments) ? (isNoVideo ? "Видео файл не найден или неверный формат" : currentRecord.Path) : currentRecord.Comments;
            lblDate.Text = currentRecord.Date.ToString("dd.MM.yyyy");

            ShowFrame(0);

            RedrawGraph(currentRecord);
            ShowRecordDetail(true);
        }

        private void RedrawGraph(Record record)
        {
            chart1.Series[0].Points.Clear();
            chart1.Series[1].Points.Clear();

            chart2.Series[0].Points.Clear();
            chart2.Series[1].Points.Clear();

            chart2.Width = record.Length;
            chart1.Width = record.Length;

            var minLeft = record.CenterLeftX();
            var minRight = record.CenterRightX();

            var minLeftY = record.CenterLeftY();
            var minRightY = record.CenterRightY();
            int i = 0;
            foreach(var item in record.data)
            {
                chart1.Series[0].Points.AddXY(i, item.left.X - minLeft);
                chart1.Series[1].Points.AddXY(i, item.right.X - minRight);

                chart2.Series[0].Points.AddXY(i, item.left.Y - minLeftY);
                chart2.Series[1].Points.AddXY(i, item.right.Y - minRightY);
                i++;
            }
        }

        private void ShowFrame(int frame)
        {
            if (isNoVideo)
            {
                pbxColorImage.Visible = false;
                return;
            }

            if (frame < 0 || frame >= currentRecord.Length)
            {
                MessageBox.Show("Выход за границы разпознанных данных", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            try
            {
                grabber.SetFramePos(frame);
                grabber.GrabImage();
            }
            catch (Exception ex)
            {
                MessageBox.Show("Выход за границы видео файла", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            var left = currentRecord.GetLeft(frame);
            var right = currentRecord.GetRight(frame);

            var colorBit = new Bitmap(grabber.Image.Bitmap);
            var g = Graphics.FromImage(colorBit);
            g.DrawLine(Pens.Red, new Point(0, (int)left.Y), new Point(colorBit.Width, (int)left.Y));
            g.DrawLine(Pens.Red, new Point((int)left.X, 0), new Point((int)left.X, colorBit.Height));
            g.DrawLine(Pens.Blue, new Point(0, (int)right.Y), new Point(colorBit.Width, (int)right.Y));
            g.DrawLine(Pens.Blue, new Point((int)right.X, 0), new Point((int)right.X, colorBit.Height));

            pbxColorImage.Image = colorBit;

            g.Dispose();

            chart1.ChartAreas[0].CursorX.SetCursorPosition(frame);
            chart2.ChartAreas[0].CursorX.SetCursorPosition(frame);
            statusFrame.Text = frame.ToString();
            statusLeft.Text = $"x={Math.Round((currentRecord[currentFrame].left.X - currentRecord.CenterLeftX()), 2).ToString()}  y={Math.Round((currentRecord[currentFrame].left.Y - currentRecord.CenterLeftY()), 2).ToString()}";
            statusRight.Text = $"x={Math.Round((currentRecord[currentFrame].right.X - currentRecord.CenterRightX()), 2).ToString()}  y={Math.Round((currentRecord[currentFrame].right.Y - currentRecord.CenterRightY()), 2).ToString()}";
            statusTime.Text = ((float)currentRecord[currentFrame].msecs / (float)1000).ToString() + " s";

            pbxColorImage.Visible = true;
        }

        private void Form_FormClosed(object sender, FormClosedEventArgs e)
        {
            this.Visible = true;
            if (listBoxPatients.SelectedIndex < 0)
            {
                return;
            }

            try
            {
                this.patients[listBoxPatients.SelectedIndex].Records = Record.SelectAllFromDB(this.patients[listBoxPatients.SelectedIndex].Id);
                this.listBoxPatients_SelectedIndexChanged(null, null);
            }
            catch
            {
                MessageBox.Show("Произошла ошибка, обновите список записей", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void btnFromCamera_Click(object sender, EventArgs e)
        {
            pnlCameraIndex.Visible = true;
        }

        private void btnCameraDetect_Click(object sender, EventArgs e)
        {
            if (this.listBoxPatients.SelectedIndex < 0)
            {
                return;
            }

            int cameraIndex;

            if (!int.TryParse(txtCameraIndex.Text, out cameraIndex) || cameraIndex < 0)
            {
                MessageBox.Show("Введите число больше нуля", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            try
            {
                Forms.FormDetect form = new Forms.FormDetect(null, cameraIndex, this.patients[this.listBoxPatients.SelectedIndex].Id);
                form.FormClosed += Form_FormClosed;
                if (form.Visible)
                {
                    this.Visible = false;
                }
            }
            catch (Exception ex)
            {
                this.Visible = true;
            }
        }

        private void btnNext_Click(object sender, EventArgs e)
        {
            btnPrev.Enabled = true;
            if (currentFrame + 1 < grabber.Length - 1)
            {
                ShowFrame(++currentFrame);
            }
            else
            {
                btnNext.Enabled = false;
            }
        }

        private void btnPrev_Click(object sender, EventArgs e)
        {
            btnNext.Enabled = true;
            if (currentFrame - 1 >= 0)
            {
                ShowFrame(--currentFrame);
            }
            else
            {
                btnPrev.Enabled = false;
            }
        }

        private void chart1_MouseDown(object sender, MouseEventArgs e)
        {
            chart1.ChartAreas[0].CursorX.SetCursorPixelPosition(new Point(e.X, e.Y), true);
            chart2.ChartAreas[0].CursorX.SetCursorPixelPosition(new Point(e.X, e.Y), true);
            var x = chart1.ChartAreas[0].CursorX.Position;
            if ((int)x >= grabber.Length - 1 || x < 0)
            {
                MessageBox.Show("Выход за границы файла", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            currentFrame = (int)x;
            ShowFrame(currentFrame);
        }

        private void pbxColorImage_MouseClick(object sender, MouseEventArgs e)
        {
            if (currentRecord == null)
            {
                return;
            }

            if (e.Button == MouseButtons.Right)
            {
                currentRecord.SetLeft(currentFrame, ((PointF)(e.Location)).Scale(currentRecord.CalibFactor));
                chart1.Series[0].Points.Remove(chart1.Series[0].Points[currentFrame]);
                chart1.Series[0].Points.InsertXY(currentFrame, currentFrame, ((PointF)e.Location).Scale(currentRecord.CalibFactor).X - currentRecord.CenterLeftX());

                chart2.Series[0].Points.Remove(chart2.Series[0].Points[currentFrame]);
                chart2.Series[0].Points.InsertXY(currentFrame, currentFrame, ((PointF)e.Location).Scale(currentRecord.CalibFactor).Y - currentRecord.CenterLeftY());
            }
            else if (e.Button == MouseButtons.Left)
            {
                currentRecord.SetRight(currentFrame, ((PointF)e.Location).Scale(currentRecord.CalibFactor));
                chart1.Series[1].Points.Remove(chart1.Series[1].Points[currentFrame]);
                chart1.Series[1].Points.InsertXY(currentFrame, currentFrame, ((PointF)e.Location).Scale(currentRecord.CalibFactor).X - currentRecord.CenterRightX());

                chart2.Series[1].Points.Remove(chart2.Series[1].Points[currentFrame]);
                chart2.Series[1].Points.InsertXY(currentFrame, currentFrame, ((PointF)e.Location).Scale(currentRecord.CalibFactor).Y - currentRecord.CenterRightY());
            }

            this.ShowFrame(currentFrame);

            try
            {
                currentRecord.Save();
            }
            catch (Exception ex)
            {
                Logging.Log(ex, $"pbxColorImage_MouseClick(object sender, MouseEventArgs e) recordID: {currentRecord?.Id}");
                MessageBox.Show("Не могу записать значения в файл", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        private void btnCalc_Click(object sender, EventArgs e)
        {
            if (currentRecord == null)
            {
                return;
            }

            double vybrosy;
            if (!double.TryParse(txtVibrosy.Text, out vybrosy) || vybrosy <= 0)
            {
                MessageBox.Show("Введите корректное значение фактора интерполяции", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            int cnt = currentRecord.Interpolate(vybrosy);

            try
            {
                currentRecord.Save();
                MessageBox.Show($"Было изменено значений: {cnt}", "Выполнено", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            catch (Exception ex)
            {
                Logging.Log(ex, $"btnCalc_Click(object sender, EventArgs e) recordID: {currentRecord?.Id}");
                MessageBox.Show("Не могу записать значения в файл", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }

            this.ShowFrame(0);
            this.RedrawGraph(currentRecord);
        }

        private void btnAnalize_Click(object sender, EventArgs e)
        {
            if (listBoxPatients.SelectedIndex < 0 || dataGrid.CurrentCell.RowIndex < 0)
            {
                return;
            }

            var record = patients[listBoxPatients.SelectedIndex].Records[dataGrid.CurrentCell.RowIndex];

            try
            {
                Forms.FormDetect form = new Forms.FormDetect(record);
                form.FormClosed += Form_FormClosed;
                if (form.Visible)
                {
                    this.Visible = false;
                }
            }
            catch (Exception ex)
            {
                this.Visible = true;
            }
        }

        private void btnDeleteRecord_Click(object sender, EventArgs e)
        {
            if (MessageBox.Show("Вы уверены, что хотите удалить данную запись?", "Вы уверены?", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                try
                {
                    currentRecord.Delete();
                }
                catch (Exception ex)
                {
                    Logging.Log(ex, $"btnDeleteRecord_Click(object sender, EventArgs e) recordID: {currentRecord?.Id}");
                    MessageBox.Show("Ошибка при удалении", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                MessageBox.Show("Запись удалена", "Удалено", MessageBoxButtons.OK, MessageBoxIcon.Information);

                patients[listBoxPatients.SelectedIndex].Records.Remove(patients[listBoxPatients.SelectedIndex].Records[dataGrid.CurrentRow.Index]);

                dataGrid.Rows.Remove(dataGrid.SelectedRows[0]);

                if (dataGrid.RowCount > 0)
                {
                    dataGrid.CurrentCell = dataGrid.Rows[0].Cells[0];
                    dataGrid.Rows[0].Selected = true;
                    this.dataGrid_SelectionChanged(null, null);
                }
                else
                {
                    this.listBoxPatients_SelectedIndexChanged(null, null);
                }

            }
        }

        private void FormMain_FormClosing(object sender, FormClosingEventArgs e)
        {
            this.grabber.ReleaseCapture();
        }

        #region append funcs

        private void ShowMainForm(object sender, FormClosedEventArgs e)
        {
            this.Visible = true;
        }

        private void HideMainForm(object sender, EventArgs e)
        {
            this.Visible = false;
        }

        private void EnabledVideoProcessButtons(bool enabled)
        {
            this.btnCalc.Enabled = this.btnNext.Enabled = btnPrev.Enabled = this.btnSave.Enabled = this.btnReport.Visible = this.btnRedrawGraph.Enabled = btnXYShow.Enabled = btnSmooth.Enabled = btnBackUp.Enabled = txtVibrosy.Enabled = enabled;
        }

        private void EnabledRecordButtons(bool enabled)
        {
            //this.btnAnalize.Enabled = this.btnDeleteRecord.Enabled = enabled;
            if (!enabled)
            {
                this.EnabledVideoProcessButtons(false);
            }
        }

        private void EnabledPatientButtons(bool enabled)
        {
            this.btnDeletePatient.Enabled = this.btnEditPatient.Enabled = enabled;
            if (!enabled)
            {
                this.EnabledRecordButtons(false);
            }
        }

        private void ShowPatientRecords(bool visible)
        {
            if (!visible)
            {
                this.ShowRecordDetail(false);
            }

            this.EnabledRecordButtons(visible);
            this.pnlMain.Visible = visible;
        }

        private void ShowRecordDetail(bool visible)
        {
            if (visible)
            {
                this.ShowPatientRecords(true);
            }

            this.EnabledVideoProcessButtons(visible);
            this.splitContainer1.Panel2.Visible = visible;
        }


        private void FormMain_KeyDown(object sender, KeyEventArgs e)
        {
            e.Handled = true;
            if (!splitContainer1.Panel2.Visible || currentRecord == null || currentRecord.Length <= 2)
            {
                return;
            }

            if (e.KeyCode == Keys.Left)
            {
                if (currentFrame <= 0)
                {
                    return;
                }

                btnNext.Enabled = true;
                ShowFrame(--currentFrame);
            }
            else
            {
                if (e.KeyCode == Keys.Right)
                {
                    if (currentFrame + 1 >= currentRecord.Length)
                    {
                        return;
                    }

                    btnPrev.Enabled = true;
                    ShowFrame(++currentFrame);
                }
            }
        }

        #endregion

        private void btnBack_Click(object sender, EventArgs e)
        {
            pnlCameraIndex.Visible = false;
        }

        private void btnSave_Click(object sender, EventArgs e)
        {
            if (currentRecord != null)
            {
                SaveFileDialog sfd = new SaveFileDialog();
                if (sfd.ShowDialog() == DialogResult.OK)
                {
                    try
                    {
                        currentRecord.Save(sfd.FileName);
                        MessageBox.Show("Данные экспортированы в текстовый файл", "Выполнено", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    }
                    catch (Exception ex)
                    {
                        Logging.Log(ex, $"btnSave_Click(object sender, EventArgs e) currentRecord.Save({sfd.FileName})");
                        MessageBox.Show("Ошибка при сохранении", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }

            }
        }

        private void btnRedrawGraph_Click(object sender, EventArgs e)
        {
            if (currentRecord == null)
            {
                return;
            }

            this.RedrawGraph(currentRecord);
        }

        private void btnSmooth_Click(object sender, EventArgs e)
        {
            if (currentRecord == null)
            {
                return;
            }

            int cnt = currentRecord.Interpolate();

            try
            {
                currentRecord.Save();
                MessageBox.Show($"Сглаживание выполнено", "Выполнено", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            catch (Exception ex)
            {
                Logging.Log(ex, $"btnSmooth_Click(object sender, EventArgs e) recordID: {currentRecord?.Id}");
                MessageBox.Show("Не могу записать значения в файл", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }

            this.ShowFrame(0);
            this.RedrawGraph(currentRecord);
        }

        private void btnBackUp_Click(object sender, EventArgs e)
        {
            if (currentRecord.IsBackupEnabled && MessageBox.Show("Вы действительно хотите установить значения, которые были перед последней интерполяцией?", "Вы уверены?", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                currentRecord.BackUp();
                try
                {
                    currentRecord.Save();
                    MessageBox.Show("Восстановлены значения перед последней интерполяцией");
                }
                catch (Exception ex)
                {
                    Logging.Log(ex, $"btnBackUp_Click(object sender, EventArgs e) recordID: {currentRecord?.Id}");
                    MessageBox.Show("Не могу записать значения в файл", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                }

                this.ShowFrame(0);
                this.RedrawGraph(currentRecord);
            }
        }

        private void btnXYShow_Click(object sender, EventArgs e)
        {
            Forms.PlotXY plot = new Forms.PlotXY(currentRecord);
            plot.Show();
        }

        private void FormMain_Resize(object sender, EventArgs e)
        {
            splitContainer1.Location = new Point(0, 0);
            splitContainer1.Width = pnlCenterDockFill.Width;
            if (pnlCenterDockFill.VerticalScroll.Visible)
            {
                splitContainer1.Width -= 20;
            }

            splitContainer1.Height = pnlMain.Height - statusStrip1.Height;
        }

        private void btnChangeVideo_Click(object sender, EventArgs e)
        {
            OpenFileDialog ofd = new OpenFileDialog();
            if (ofd.ShowDialog() == DialogResult.OK)
            {
                currentRecord.Path = ofd.FileName;
                currentRecord.UpdateDB();
                dataGrid_SelectionChanged(null, null);
            }
        }

        private void ReplaceWordStub(string stubToReplace, string text, Word.Document wordDocumetn)
        {
            var range = wordDocumetn.Content;
            range.Find.ClearFormatting();
            range.Find.Execute(FindText: stubToReplace, ReplaceWith: text);
        }

        private void btnReport_Click(object sender, EventArgs e)
        {
            SaveFileDialog sfd = new SaveFileDialog();
            sfd.Filter = "Docx files (*.docx)|*.docx";
            sfd.FilterIndex = 1;

            if (sfd.ShowDialog() != DialogResult.OK)
            {
                return;
            }

            var wordApp = new Word.Application();

            try
            {
                wordApp.Visible = false;

                var wordDocument = wordApp.Documents.Open($"{Directory.GetCurrentDirectory()}//data//temp.docx");

                var patient = patients[listBoxPatients.SelectedIndex];

                var leftPeaks = currentRecord.PeaksLeft();
                var rightPeaks = currentRecord.PeaksRight();
                var maxL = currentRecord.GetMaxPeakToPeak(leftPeaks);
                var maxR = currentRecord.GetMaxPeakToPeak(rightPeaks);
                var minL = currentRecord.GetMinPeakToPeak(leftPeaks);
                var minR = currentRecord.GetMinPeakToPeak(rightPeaks);

                this.ReplaceWordStub("{SecondName}", patient.SecondName, wordDocument);
                this.ReplaceWordStub("{Name}", patient.Name, wordDocument);
                this.ReplaceWordStub("{BirthDay}", patient.BirthDate.ToString("dd.MM.yyyy"), wordDocument);
                this.ReplaceWordStub("{Sex}", patient.IsFemale ? "женский" : "мужской", wordDocument);
                this.ReplaceWordStub("{Comments}", patient.Comments, wordDocument);
                this.ReplaceWordStub("{Date}", $"[{currentRecord.Id}] {currentRecord.Date.ToString("dd.MM.yyyy")}", wordDocument);
                this.ReplaceWordStub("{Path}", currentRecord.Path, wordDocument);
                this.ReplaceWordStub("{VideoComments}", currentRecord.Comments, wordDocument);
                this.ReplaceWordStub("{MaxAmpl}", $"Левый: {Math.Round(maxL, 2)} мм; Правый: {Math.Round(maxR, 2)} мм", wordDocument);
                this.ReplaceWordStub("{MinAmpl}", $"Левый: {Math.Round(minL, 2)} мм; Правый: {Math.Round(minR, 2)} мм", wordDocument);
                this.ReplaceWordStub("{MeanAmpl}", $"Левый: {Math.Round(currentRecord.GetMeanAmplitude(leftPeaks),2)} мм \n Правый: {Math.Round(currentRecord.GetMeanAmplitude(rightPeaks),2)} мм", wordDocument);
                this.ReplaceWordStub("{Freq}", $"{Math.Round(currentRecord.GetFreq(), 3)} Гц", wordDocument);

                wordDocument.SaveAs2(sfd.FileName);

                var cellRange = wordDocument.Tables[2].Cell(1, 1).Range;
                this.SaveChartToFile(chart1, $"{Directory.GetCurrentDirectory()}//temp.jpeg", currentRecord.data, x => x.X, currentRecord.CenterLeftX(), currentRecord.CenterRightX(), 900);
                var bit = Bitmap.FromFile($"{Directory.GetCurrentDirectory()}//temp.jpeg");
                bit.RotateFlip(RotateFlipType.Rotate270FlipNone);
                bit.Save($"{Directory.GetCurrentDirectory()}//temp.jpeg");
                bit.Dispose();
                cellRange.InlineShapes.AddPicture($"{Directory.GetCurrentDirectory()}//temp.jpeg", Type.Missing, Type.Missing, Type.Missing);
                File.Delete($"{Directory.GetCurrentDirectory()}//temp.jpeg");

                cellRange = wordDocument.Tables[2].Cell(1, 2).Range;
                this.SaveChartToFile(chart2, $"{Directory.GetCurrentDirectory()}//temp.jpeg", currentRecord.data, x => x.Y, currentRecord.CenterLeftY(), currentRecord.CenterRightY(), 900);
                bit = Bitmap.FromFile($"{Directory.GetCurrentDirectory()}//temp.jpeg");
                bit.RotateFlip(RotateFlipType.Rotate270FlipNone);
                bit.Save($"{Directory.GetCurrentDirectory()}//temp.jpeg");
                bit.Dispose();
                cellRange.InlineShapes.AddPicture($"{Directory.GetCurrentDirectory()}//temp.jpeg", Type.Missing, Type.Missing, Type.Missing);
                File.Delete($"{Directory.GetCurrentDirectory()}//temp.jpeg");

                cellRange = wordDocument.Tables[3].Cell(1, 1).Range;
                Forms.PlotXY.SavePlotXYToFile(currentRecord, $"{Directory.GetCurrentDirectory()}//temp.jpeg", 600, 600);
                cellRange.InlineShapes.AddPicture($"{Directory.GetCurrentDirectory()}//temp.jpeg", Type.Missing, Type.Missing, Type.Missing);
                File.Delete($"{Directory.GetCurrentDirectory()}//temp.jpeg");

                wordApp.Visible = true;
            }
            catch (Exception ex)
            {
                Logging.Log(ex, "btnReport_Click(object sender, EventArgs e)");
                MessageBox.Show("Ошибка при создании отчета", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                wordApp.Quit();
            }
            finally
            {
            }
        }

        private void SaveChartToFile(Chart chart, string file, List<DataStruct> record, Func<PointF, float> predicate, float centerLeft, float centerRight, int width = 0)
        {
            var oldWidth = chart.Width;
            if (width > 0 && oldWidth > width)
            {
               chart.Width = width;
            }

            chart.Series[0].Points.Clear();
            chart.Series[1].Points.Clear();


            foreach (var item in record)
            {
                chart.Series[0].Points.AddXY(Math.Round(item.msecs / 1000.0, 3), predicate(item.left) - centerLeft);
                chart.Series[1].Points.AddXY(Math.Round(item.msecs / 1000.0, 3), predicate(item.right) - centerRight);
            }

            chart.ChartAreas[0].AxisX.Title = "Время, c";
            chart.SaveImage(file, ChartImageFormat.Jpeg);

            chart.Series[0].Points.Clear();
            chart.Series[1].Points.Clear();

            chart.Width = oldWidth;

            int i = 0;
            foreach (var item in record)
            {
                chart.Series[0].Points.AddXY(i, predicate(item.left) - centerLeft);
                chart.Series[1].Points.AddXY(i++, predicate(item.right) - centerRight);
            }

            chart.ChartAreas[0].AxisX.Title = "№ кадра";
        }

        private void btnChartXSave_Click(object sender, EventArgs e)
        {
            SaveFileDialog sfd = new SaveFileDialog();
            sfd.Filter = "Png files (*.jpeg)|*.jpeg";
            sfd.FilterIndex = 1;
            if (sfd.ShowDialog() == DialogResult.OK)
            {
                this.SaveChartToFile(chart1, sfd.FileName, currentRecord.data, x => x.X, currentRecord.CenterLeftX(), currentRecord.CenterRightX());
            }
        }

        private void btnChartYSave_Click(object sender, EventArgs e)
        {
            SaveFileDialog sfd = new SaveFileDialog();
            sfd.Filter = "Png files (*.jpeg)|*.jpeg";
            sfd.FilterIndex = 1;
            if (sfd.ShowDialog() == DialogResult.OK)
            {
                this.SaveChartToFile(chart1, sfd.FileName, currentRecord.data, x => x.Y, currentRecord.CenterLeftY(), currentRecord.CenterRightY());
            }
        }
    }
}
namespace _SSU_EyesOffice.Forms
{
    using System;
    using System.Windows.Forms;

    public partial class FormAddPatient : Form
    {
        public FormAddPatient()
        {
            InitializeComponent();
            txtSecondName.Select();
        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            if (string.IsNullOrWhiteSpace(txtSecondName.Text))
            {
                MessageBox.Show("Введите фамилию", "Ошибка ввода", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            try
            {
                Logic.Patient.AddToDB(txtSecondName.Text, txtName.Text, radioButtonWoman.Checked, monthCalendar.SelectionRange.Start, txtComment.Text);

                MessageBox.Show("Пользователь успешно создан", "Создание пользователя", MessageBoxButtons.OK, MessageBoxIcon.Information);

                this.Close();
            }
            catch(Exception ex)
            {
                Logic.Logging.Log(ex, $" btnAdd_Click(object sender, EventArgs e) Logic.Patient.AddToDB({txtSecondName.Text}, {txtName.Text}, {radioButtonWoman.Checked}, {monthCalendar.SelectionRange.Start}, {txtComment.Text})");
                MessageBox.Show("Произошла ошибка при записи в БД", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }
    }
}
namespace _SSU_EyesOffice.Forms
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Data;
    using System.Drawing;
    using System.Linq;
    using System.Text;
    using System.Threading.Tasks;
    using System.Windows.Forms;
    using _SSU_EyesOffice.Logic;
    using Emgu.CV.Structure;
    using Emgu.CV;

    enum Algorithm
    {
        Binarization,
        Gradient,
        BinarizationExpand
    };

    enum Action
    {
        None,
        RegionLeft,
        RegionRight,
        Calibration
    };

    public partial class FormDetect : Form
    {
        private int currentStep = 0;

        private Algorithm algorithm;

        string[] stepTitles = { "Алгоритм распознования", "Область глаз и калибровка", "Преобразование изображения", "Детектирование" };

        private Action action = Action.None;
        bool isMouseDown = false;
        Grabber grabber = new Grabber();
        Record record;

        List<DataStruct> recordData = new List<DataStruct>();

        Rectangle roiLeft, roiRight;
        Point calibPt1, calibPt2;
        int xStart, yStart;
        private double calibFactor = 0.0;
        int movieLength = 0;
        bool isNowDetect = false;
        bool end = false;
        float centerLeft = 0, centerRight = 0, centerLeftY=0, centerRightY=0; //для смещения одного графика отн. другого
        int cameraIndex = -1;
        int timeInterval;
        DateTime startTime;
        int patientId = -1;
        string filePath = "";
        private IntPtr writerVideo;
        private float maxX, minX = 0;

        public FormDetect(Record record = null, int cameraIndex = -1, int patientId = -1)
        {
            this.record = record;
            InitializeComponent();

            this.Show();
            this.UpdateStep();
            
            if (record != null)
            {
                try
                {

                    grabber.SetCapture(record.Path);
                }
                catch (Exception ex)
                {
                    this.Close();
                    Logging.Log(ex, $"FormDetect(); Couldn't set capture for file {record?.Path}");
                    MessageBox.Show("Неверный тип файла или файл не найден", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            if (cameraIndex >= 0)
            {
                if (patientId <= 0)
                {
                    Logging.Log(null, $"FormDetect(); Incorrect patient id FormDetect.Init");
                    MessageBox.Show("Неверный идентификатор пациента", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }

                this.patientId = patientId;
                this.cameraIndex = cameraIndex;

                try
                {
                    grabber.SetCapture("", cameraIndex);
                }
                catch (Exception ex)
                {
                    this.Close();
                    Logging.Log(ex, $"FormDetect(); Couldn't set capture for camera {cameraIndex}");
                    MessageBox.Show("Не могу произвести захват с веб-камеры", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            chart1.ChartAreas[0].AxisX.Title = "Время, с";
            chart1.ChartAreas[0].AxisY.Title = "X, мм";
            chart2.ChartAreas[0].AxisX.Title = "X, мм";
            chart2.ChartAreas[0].AxisY.Title = "Y, мм";

            pbxBinB.Visible = pbxBinG.Visible = pbxBinR.Visible = pbxBinH.Visible = pbxBinS.Visible = pbxBinV.Visible = false;
        }

        #region funcs
        private void UpdateStep()
        {
            isNowDetect = false;
            pnlStep1.Visible = pnlStep2.Visible = pnlStep3.Visible = pnlStep3Expand
                .Visible = pnlStep3Gradient.Visible = pnlStep4.Visible = false;
            btnBack.Visible = btnNext.Visible = true;
            timer1.Stop();
            switch (currentStep)
            {
                case 0:
                    {
                        pnlStep1.Visible = true;
                        btnNext.Visible = false;
                        btnBack.Visible = false;
                        pnlStep1.Dock = DockStyle.Fill;
                    }

                    break;
                case 1:
                    {
                        pnlStep2.Visible = true;
                        pnlStep2.Dock = DockStyle.Fill;
                        timer1.Start();
                    }

                    break;
                case 2:
                    {
                        if (algorithm == Algorithm.Gradient)
                        {
                            pnlStep3Gradient.Visible = true;
                            pnlStep3Gradient.Dock = DockStyle.Fill;

                        }
                        else if (algorithm == Algorithm.BinarizationExpand)
                        {
                            pnlStep3Expand.Visible = true;
                            pnlStep3Expand.Dock = DockStyle.Fill;
                        }
                        else if (algorithm == Algorithm.Binarization)
                        {
                            pnlStep3.Visible = true;
                            pnlStep3.Dock = DockStyle.Fill;
                        }

                        timer1.Start();
                    }
                    break;
                case 3:
                    {
                        pnlStep4.Visible = true;
                        btnNext.Visible = false;
                        btnPause.Visible = false;
                        pnlStep4.Dock = DockStyle.Fill;
                        centerLeft = centerRight = 0;
                        CvInvoke.cvReleaseVideoWriter(ref this.writerVideo);
                        centerLeft = centerLeftY = centerRight = centerRightY = 0;
                        maxX = minX = 0;
                        calibFactor = double.Parse(txtCalib.Text) / Math.Sqrt(Math.Pow(calibPt1.X - calibPt2.X, 2) + Math.Pow(calibPt2.Y - calibPt1.Y, 2));

                        if (cameraIndex >= 0)
                        {
                            txtTime.Visible = true;
                            lblminutestitle.Visible = true;
                        }

                        groupMeanMedian.Visible = (algorithm == Algorithm.Binarization || algorithm == Algorithm.BinarizationExpand);

                        chart1.Series[0].Points.Clear();
                        chart1.Series[1].Points.Clear();
                        movieLength = grabber.Length;
                        btnStartDetect.Text = "Начать";
                    }

                    break;
            }

            this.lblLevelIndex.Text = (currentStep + 1).ToString() + ". ";
            this.lblLevel.Text = stepTitles[currentStep];
        }

        private void btnNext_Click(object sender, EventArgs e)
        {
            if (this.CheckStepCorrect())
            {
                this.currentStep++;
                this.UpdateStep();
            }
        }

        private void btnBack_Click(object sender, EventArgs e)
        {
            if (currentStep == 3)
            {
                if (MessageBox.Show("Вы уверены, что хотите прервать детектирование?", "Вы уверены?", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No)
                {
                    return;
                }
            }

            this.currentStep--;
            this.UpdateStep();
        }

        private bool CheckStepCorrect()
        {
            switch (currentStep)
            {
                case 1:
                    {
                        if (roiLeft.Width <= 0 || roiLeft.Height <= 0)
                        {
                            MessageBox.Show("Выделите область для левого глаза", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            return false;
                        }

                        if (roiRight.Width <= 0 || roiRight.Height <= 0)
                        {
                            MessageBox.Show("Выделите область для правого глаза", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            return false;
                        }

                        if (calibPt1 == calibPt2)
                        {
                            MessageBox.Show("Проведите калибровочный отрезок", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            return false;
                        }

                        double d;
                        if (!double.TryParse(txtCalib.Text, out d) || d <= 0)
                        {
                            MessageBox.Show("Неверно введено калибровочное значение", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            return false;
                        }
                    }

                    break;
                case 2:
                    {
                        if (algorithm == Algorithm.Binarization && tbStep3.Value <= 0)
                        {
                            MessageBox.Show("Выберите порог бинаризации", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            return false;
                        }
                        else if (algorithm == Algorithm.BinarizationExpand)
                        {
                            if (!chboxB.Checked && !chboxG.Checked && !chboxH.Checked && !chboxR.Checked && !chboxS.Checked && !chboxV.Checked)
                            {
                                MessageBox.Show("Выберите хотя бы одну из компонент", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                return false;
                            }

                        }
                        else if (algorithm == Algorithm.Gradient)
                        {

                        }
                    }

                    break;
            }

            return true;
        }

        private void FormDetect_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (currentStep == 3 && !end)
            {
                if (MessageBox.Show("Прогресс будет утерян, вы действительно хотите закрыть форму?", "Вы уверены?", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No)
                {
                    e.Cancel = true;
                    return;
                }
            }

            CvInvoke.cvReleaseVideoWriter(ref this.writerVideo);
            grabber.ReleaseCapture();
        }
        #endregion

        #region step1
        private void btn_1_Binarization_Click(object sender, EventArgs e)
        {
            this.algorithm = Algorithm.Binarization;
            this.currentStep++;
            this.UpdateStep();
        }

        private void btn_1_Gradient_Click(object sender, EventArgs e)
        {
            this.algorithm = Algorithm.Gradient;
            this.currentStep++;
            this.UpdateStep();
        }
        #endregion

        #region step2
        private void btnLeft_Click(object sender, EventArgs e)
        {
            lblStep2Status.Text = "Выделите область левого глаза";
            btnLeft.Checked = true;
            btnRight.Checked = false;
            btnCalib.Checked = false;
            this.action = Action.RegionLeft;
        }

        private void btnRight_Click(object sender, EventArgs e)
        {
            lblStep2Status.Text = "Выделите область правого глаза";
            this.action = Action.RegionRight;
            btnLeft.Checked = false;
            btnRight.Checked = true;
            btnCalib.Checked = false;
        }

        private void btnCalib_Click(object sender, EventArgs e)
        {
            lblStep2Status.Text = "Проведите калибровочный отрезок";
            this.action = Action.Calibration;
            btnLeft.Checked = false;
            btnRight.Checked = false;
            btnCalib.Checked = true;
        }

        private void pbxStep2_MouseUp(object sender, MouseEventArgs e)
        {
            this.isMouseDown = false;
        }

        private void pbxStep2_MouseMove(object sender, MouseEventArgs e)
        {
            if (!isMouseDown)
            {
                return;
            }

            if (action == Action.RegionLeft)
            {
                roiLeft.X = e.X > xStart ? xStart : e.X;
                roiLeft.Y = e.Y > yStart ? yStart : e.Y;
                roiLeft.Width = Math.Abs(e.X - xStart);
                roiLeft.Height = Math.Abs(e.Y - yStart);
            }
            else if (action == Action.RegionRight)
            {
                roiRight.X = e.X > xStart ? xStart : e.X;
                roiRight.Y = e.Y > yStart ? yStart : e.Y;
                roiRight.Width = Math.Abs(e.X - xStart);
                roiRight.Height = Math.Abs(e.Y - yStart);
            }
            else if (action == Action.Calibration)
            {
                calibPt2 = e.Location;
            }

            if (!timer1.Enabled)
            {
                //var imgClone = grabber.Image.Clone();
                //bitStep2?.Dispose();
                var bitStep2 = new Bitmap(grabber.Image.Bitmap);
                Graphics g = Graphics.FromImage(bitStep2);
                g.DrawRectangle(Pens.Red, roiLeft);
                g.DrawRectangle(Pens.Blue, roiRight);
                g.DrawLine(Pens.Azure, calibPt1, calibPt2);

                pbxStep2.Image = bitStep2;
                g.Dispose();
                //imgClone.Dispose();
            }
        }

        private void pbxStep2_MouseDown(object sender, MouseEventArgs e)
        {
            this.isMouseDown = true;
            switch (action)
            {
                case Action.RegionLeft:
                    {
                        xStart = e.X;
                        yStart = e.Y;
                    }

                    break;
                case Action.RegionRight:
                    {
                        xStart = e.X;
                        yStart = e.Y;
                    }

                    break;
                case Action.Calibration:
                    {
                        calibPt1 = e.Location;
                    }

                    break;
                default:
                    break;
            }
        }

        private void btnStartPauseDetect_Click(object sender, EventArgs e)
        {
            isNowDetect = !isNowDetect;
        }

        private void btnStartPause_Click(object sender, EventArgs e)
        {
            timer1.Enabled = !timer1.Enabled;
        }

        private void tbReduce_Scroll_1(object sender, EventArgs e)
        {
            lblTbReduce.Text = tbReduce.Value.ToString();
        }
        #endregion step2

        #region step 3
        private void btnAdvanced_Click(object sender, EventArgs e)
        {
            pnlStep3.Visible = false;
            pnlStep3Expand.Visible = true;
            pnlStep3Expand.Dock = DockStyle.Fill;
            algorithm = Algorithm.BinarizationExpand;
        }

        private void btnHideExpand_Click(object sender, EventArgs e)
        {
            pnlStep3.Visible = true;
            pnlStep3Expand.Visible = false;
            algorithm = Algorithm.Binarization;
        }

        private void tbStep3_Scroll(object sender, EventArgs e)
        {
            lblTrackBarStep3.Text = tbStep3.Value.ToString();
        }

        private void chbxHideImages_CheckedChanged(object sender, EventArgs e)
        {
            pbxDetectBin.Visible = pbxDetectColor.Visible = !chbxHideImages.Checked;
        }

        private void btnPause_Click(object sender, EventArgs e)
        {
            isNowDetect = !isNowDetect;
            btnPause.Text = isNowDetect ? "Пауза" : "Продолжить";
            timer1.Enabled = isNowDetect;
        }

        private void ChooseImageBinarization()
        {
            var color = grabber.Image.Reduce(tbReduce.Value);
            var gray = GrayBin.ToGray(color);

            if (chbxSmooth.Checked)
            {
                GrayBin.Smooth(gray);
            }

            if (chbxNormilize.Checked)
            {
                GrayBin.Normalize(gray);
            }

            var bin = GrayBin.Binarize(gray, tbStep3.Value);

            pbxStep3Gray.Image = new Bitmap(gray.Bitmap);
            GrayBin.InvertInRegions(bin, roiLeft.Reduce(tbReduce.Value), roiRight.Reduce(tbReduce.Value));
            pbxStep3Bin.Image = new Bitmap(bin.Bitmap);

            gray.Dispose();
            bin.Dispose();
            color.Dispose();
        }

        private void ChooseImageBinarizationExpand()
        {
            var components = new List<Image<Gray, byte>>();
            int reduce = tbReduce.Value;
            var small = grabber.Image.Reduce(reduce);
            var hsv = GrayBin.ToHsv(small);
            var rgb = GrayBin.ToRgbChanels(small);

            if (pbxBinR.Visible)
            {
                if (chbxSmoothExpand.Checked)
                {
                    GrayBin.Smooth(rgb[0]);
                }

                if (chbxNormilizeExpand.Checked)
                {
                    GrayBin.Normalize(rgb[0]);
                }

                components.Add(GrayBin.Binarize(rgb[0], tbRMax.Value, tbRMin.Value));
                var bin = components.Last().Clone();
                GrayBin.InvertInRegions(bin, roiLeft.Reduce(reduce), roiRight.Reduce(reduce));
                pbxBinR.Image = new Bitmap(bin.Bitmap);
                bin.Dispose();
            }

            if (pbxBinG.Visible)
            {
                if (chbxSmoothExpand.Checked)
                {
                    GrayBin.Smooth(rgb[1]);
                }

                if (chbxNormilizeExpand.Checked)
                {
                    GrayBin.Normalize(rgb[1]);
                }

                components.Add(GrayBin.Binarize(rgb[1], tbGMax.Value, tbGMin.Value));
                var bin = components.Last().Clone();
                GrayBin.InvertInRegions(bin, roiLeft.Reduce(reduce), roiRight.Reduce(reduce));
                pbxBinG.Image = new Bitmap(bin.Bitmap);
                bin.Dispose();
            }

            if (pbxBinB.Visible)
            {
                if (chbxSmoothExpand.Checked)
                {
                    GrayBin.Smooth(rgb[2]);
                }

                if (chbxNormilizeExpand.Checked)
                {
                    GrayBin.Normalize(rgb[2]);
                }

                components.Add(GrayBin.Binarize(rgb[2], tbBMax.Value, tbBMin.Value));
                var bin = components.Last().Clone();
                GrayBin.InvertInRegions(bin, roiLeft.Reduce(reduce), roiRight.Reduce(reduce));
                pbxBinB.Image = new Bitmap(bin.Bitmap);
                bin.Dispose();
            }

            if (pbxBinH.Visible)
            {
                if (chbxSmoothExpand.Checked)
                {
                    GrayBin.Smooth(hsv[0]);
                }

                if (chbxNormilizeExpand.Checked)
                {
                    GrayBin.Normalize(hsv[0]);
                }

                components.Add(GrayBin.Binarize(hsv[0], tbHMax.Value, tbHMin.Value));
                var bin = components.Last().Clone();
                GrayBin.InvertInRegions(bin, roiLeft.Reduce(reduce), roiRight.Reduce(reduce));
                pbxBinH.Image = new Bitmap(bin.Bitmap);
                bin.Dispose();
            }

            if (pbxBinS.Visible)
            {
                if (chbxSmoothExpand.Checked)
                {
                    GrayBin.Smooth(hsv[1]);
                }

                if (chbxNormilizeExpand.Checked)
                {
                    GrayBin.Normalize(hsv[1]);
                }

                components.Add(GrayBin.Binarize(hsv[1], tbSMax.Value, tbSMin.Value));
                var bin = components.Last().Clone();
                GrayBin.InvertInRegions(bin, roiLeft.Reduce(reduce), roiRight.Reduce(reduce));
                pbxBinS.Image = new Bitmap(bin.Bitmap);
                bin.Dispose();
            }

            if (pbxBinV.Visible)
            {
                if (chbxSmoothExpand.Checked)
                {
                    GrayBin.Smooth(hsv[2]);
                }

                if (chbxNormilizeExpand.Checked)
                {
                    GrayBin.Normalize(hsv[2]);
                }

                components.Add(GrayBin.Binarize(hsv[2], tbVMax.Value, tbVMin.Value));
                var bin = components.Last().Clone();
                GrayBin.InvertInRegions(bin, roiLeft.Reduce(reduce), roiRight.Reduce(reduce));
                pbxBinV.Image = new Bitmap(bin.Bitmap);
                bin.Dispose();
            }

            pbxGrayH.Image = hsv[0].Bitmap;
            pbxGrayS.Image = hsv[1].Bitmap;
            pbxGrayV.Image = hsv[2].Bitmap;
            pbxGrayR.Image = rgb[0].Bitmap;
            pbxGrayG.Image = rgb[1].Bitmap;
            pbxGrayB.Image = rgb[2].Bitmap;

            if (components.Count > 0)
            {
                var result = GrayBin.And(components);

                if (result != null)
                {
                    GrayBin.InvertInRegions(result, roiLeft.Reduce(reduce), roiRight.Reduce(reduce));
                    pbxResult.Image = new Bitmap(result.Bitmap);
                    result.Dispose();
                }
            }

            hsv.Dispose();
            foreach (var item in rgb)
            {
                item.Dispose();
            }

            foreach (var item in components)
            {
                item.Dispose();
            }

            small.Dispose();
        }

        private void ChooseImageGradient()
        {
            int reduce = tbReduce.Value;
            var small = grabber.Image.Reduce(reduce);
            var gray = GrayBin.ToGray(small);
            var hsv = GrayBin.ToHsv(small);
            var rgb = GrayBin.ToRgbChanels(small);
            if (chbxSmoothGradient.Checked)
            {
                GrayBin.Smooth(hsv[0]);
                GrayBin.Smooth(hsv[1]);
                GrayBin.Smooth(hsv[2]);

                GrayBin.Smooth(rgb[0]);
                GrayBin.Smooth(rgb[1]);
                GrayBin.Smooth(rgb[2]);
                GrayBin.Smooth(gray);
            }

            if (chbxNormalizeGradient.Checked)
            {
                GrayBin.Normalize(hsv[0]);
                GrayBin.Normalize(hsv[1]);
                GrayBin.Normalize(hsv[2]);

                GrayBin.Normalize(rgb[0]);
                GrayBin.Normalize(rgb[1]);
                GrayBin.Normalize(rgb[2]);
                GrayBin.Normalize(gray);
            }

            pbxGradientH.Image = hsv[0].Bitmap;
            pbxGradientS.Image = hsv[1].Bitmap;
            pbxGradientV.Image = hsv[2].Bitmap;
            pbxGradientR.Image = rgb[0].Bitmap;
            pbxGradientG.Image = rgb[1].Bitmap;
            pbxGradientB.Image = rgb[2].Bitmap;
            pbxGradientGray.Image = gray.Bitmap;

            hsv.Dispose();
            foreach (var item in rgb)
            {
                item.Dispose();
            }

            gray.Dispose();
            small.Dispose();
        }

        private void ChooseImage()
        {
            if (algorithm == Algorithm.Binarization)
            {
                ChooseImageBinarization();
            }
            else if (algorithm == Algorithm.BinarizationExpand)
            {
                ChooseImageBinarizationExpand();
            }
            else if (algorithm == Algorithm.Gradient)
            {
                ChooseImageGradient();
            }
        }

        private void chboxR_CheckedChanged(object sender, EventArgs e)
        {
            pbxBinR.Visible = chboxR.Checked;
        }
        private void chboxH_CheckedChanged(object sender, EventArgs e)
        {
            pbxBinH.Visible = chboxH.Checked;
        }
        private void chboxS_CheckedChanged(object sender, EventArgs e)
        {
            pbxBinS.Visible = chboxS.Checked;
        }
        private void chboxG_CheckedChanged(object sender, EventArgs e)
        {
            pbxBinG.Visible = chboxG.Checked;
        }
        private void chboxV_CheckedChanged(object sender, EventArgs e)
        {
            pbxBinV.Visible = chboxV.Checked;
        }
        private void chboxB_CheckedChanged(object sender, EventArgs e)
        {
            pbxBinB.Visible = chboxB.Checked;
        }

        private void chbxGraphics_CheckedChanged(object sender, EventArgs e)
        {
            chart1.Visible = chart2.Visible = chbxGraphics.Checked;
        }

        private void FormDetect_Load(object sender, EventArgs e)
        {

        }
        #endregion

        #region step4
        private void btnStartDetect_Click(object sender, EventArgs e)
        {
            if (MessageBox.Show("Начать детектирование?", "Вы уверены?", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (cameraIndex >= 0)
                {
                    if (!int.TryParse(txtTime.Text, out timeInterval) || timeInterval <= 0)
                    {
                        MessageBox.Show("Задайте время в минутах", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                        return;
                    }

                    SaveFileDialog sfd = new SaveFileDialog();
                    sfd.Filter = "Avi files (*.avi)|*.avi";
                    sfd.FilterIndex = 1;
                    if (sfd.ShowDialog() == DialogResult.OK)
                    {
                        filePath = sfd.FileName;
                        writerVideo = CvInvoke.cvCreateVideoWriter(filePath, CvInvoke.CV_FOURCC('X', 'V', 'I', 'D'), 25, new Size(grabber.Image.Width, grabber.Image.Height), true);
                    }
                    else
                    {
                        return;
                    }

                    timeInterval = timeInterval * 60000;

                    startTime = DateTime.Now;
                }

                grabber.SetFramePos(0);
                timer1.Enabled = true;
                isNowDetect = true;
                btnStartDetect.Text = "Сначала";
                btnPause.Visible = true;
                btnPause.Text = "Пауза";
            }
        }

        private Image<Gray, Byte> GetImageForExpandBinarization(Image<Bgr, Byte> img)
        {
            var components = new List<Image<Gray, byte>>();

            var hsv = GrayBin.ToHsv(img);

            var rgb = GrayBin.ToRgbChanels(img);

            if (chboxR.Checked)
            {
                if (chbxSmoothExpand.Checked)
                {
                    GrayBin.Smooth(rgb[0]);
                }

                if (chbxNormilizeExpand.Checked)
                {
                    GrayBin.Normalize(rgb[0]);
                }

                components.Add(GrayBin.Binarize(rgb[0], tbRMax.Value, tbRMin.Value));
            }

            if (chboxG.Checked)
            {
                if (chbxSmoothExpand.Checked)
                {
                    GrayBin.Smooth(rgb[1]);
                }

                if (chbxNormilizeExpand.Checked)
                {
                    GrayBin.Normalize(rgb[1]);
                }

                components.Add(GrayBin.Binarize(rgb[1], tbGMax.Value, tbGMin.Value));
            }

            if (chboxB.Checked)
            {
                if (chbxSmoothExpand.Checked)
                {
                    GrayBin.Smooth(rgb[2]);
                }

                if (chbxNormilizeExpand.Checked)
                {
                    GrayBin.Normalize(rgb[2]);
                }

                components.Add(GrayBin.Binarize(rgb[2], tbBMax.Value, tbBMin.Value));
            }

            if (chboxH.Checked)
            {
                if (chbxSmoothExpand.Checked)
                {
                    GrayBin.Smooth(hsv[0]);
                }

                if (chbxNormilizeExpand.Checked)
                {
                    GrayBin.Normalize(hsv[0]);
                }

                components.Add(GrayBin.Binarize(hsv[0], tbHMax.Value, tbHMin.Value));
            }

            if (chboxS.Checked)
            {
                if (chbxSmoothExpand.Checked)
                {
                    GrayBin.Smooth(hsv[1]);
                }

                if (chbxNormilizeExpand.Checked)
                {
                    GrayBin.Normalize(hsv[1]);
                }

                components.Add(GrayBin.Binarize(hsv[1], tbSMax.Value, tbSMin.Value));
            }

            if (chboxV.Checked)
            {
                if (chbxSmoothExpand.Checked)
                {
                    GrayBin.Smooth(hsv[2]);
                }

                if (chbxNormilizeExpand.Checked)
                {
                    GrayBin.Normalize(hsv[2]);
                }

                components.Add(GrayBin.Binarize(hsv[2], tbVMax.Value, tbVMin.Value));
            }

            pbxGrayH.Image = hsv[0].Bitmap;
            pbxGrayS.Image = hsv[1].Bitmap;
            pbxGrayV.Image = hsv[2].Bitmap;
            pbxGrayR.Image = rgb[0].Bitmap;
            pbxGrayG.Image = rgb[1].Bitmap;
            pbxGrayB.Image = rgb[2].Bitmap;

            var result = GrayBin.And(components);

            hsv.Dispose();
            foreach (var item in rgb)
            {
                item.Dispose();
            }

            foreach (var item in components)
            {
                item.Dispose();
            }

            return result;
        }

        private Image<Gray, Byte> DetectGradient(Image<Bgr, Byte> color, out PointF ptLeft, out PointF ptRight)
        {
            Image<Gray, Byte> detectImage = null;
            if (radioGray.Checked)
            {
                detectImage = GrayBin.ToGray(color);
            }
            else if (radioR.Checked)
            {
                var rgb = GrayBin.ToRgbChanels(color);
                detectImage = rgb[0].Clone();
                foreach (var item in rgb)
                {
                    item.Dispose();
                }
            }
            else if (radioG.Checked)
            {
                var rgb = GrayBin.ToRgbChanels(color);
                detectImage = rgb[1].Clone();
                foreach (var item in rgb)
                {
                    item.Dispose();
                }
            }
            else if (radioB.Checked)
            {
                var rgb = GrayBin.ToRgbChanels(color);
                detectImage = rgb[2].Clone();
                foreach (var item in rgb)
                {
                    item.Dispose();
                }
            }
            else if (radioH.Checked)
            {
                var hsv = GrayBin.ToHsv(color);
                detectImage = hsv[0].Clone();
                hsv.Dispose();
            }
            else if (radioS.Checked)
            {
                var hsv = GrayBin.ToHsv(color);
                detectImage = hsv[1].Clone();
                hsv.Dispose();
            }
            else if (radioV.Checked)
            {
                var hsv = GrayBin.ToHsv(color);
                detectImage = hsv[2].Clone();
                hsv.Dispose();
            }

            CvInvoke.cvSetImageROI(detectImage, roiLeft.Reduce(tbReduce.Value));
            ptLeft = Detect.EyeCenter(detectImage);
            CvInvoke.cvResetImageROI(detectImage);
            ptLeft.X += roiLeft.Reduce(tbReduce.Value).X;
            ptLeft.Y += roiLeft.Reduce(tbReduce.Value).Y;

            ptRight = Point.Empty;

            return detectImage;
        }

        private void EndDetect()
        {
            timer1.Enabled = false;
            btnStartDetect.Visible = false;
            btnPause.Visible = false;
            end = true;
            if (record == null)
            {
                try
                {
                    //----Create Record here----
                    Record.AddToDB(this.patientId, filePath, DateTime.Now, txtComments.Text, 0, this.calibFactor);
                    record = new Record(DataBase.Instance.LastId("Records"), patientId, filePath, DateTime.Now, txtComments.Text, 0, this.calibFactor);
                    //--------------------------
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Ошибка при сохранении в БД", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    Logging.Log(ex, $"EndDetect() Record.AddToDB({this.patientId}, {filePath}, {DateTime.Now}, {txtComments.Text}, {0}, {this.calibFactor})");
                    this.Close();
                    return;
                }
            }

            record.SetData(recordData);

            try
            {
                record.CalibFactor = this.calibFactor;
                record.Comments = this.txtComments.Text;
                record.UpdateDB();
                record.Save();
            }
            catch (Exception ex)
            {
                MessageBox.Show("Произошла ошибка при сохранении данных", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                Logging.Log(ex, $"EndDetect() record.Save(); {record?.Id}");
                this.Close();
                return;
            }

            MessageBox.Show("Детектирование успешно завершено!", "Выполнено", MessageBoxButtons.OK, MessageBoxIcon.Information);

            this.Close();
            return;
        }
        
        private void DetectEyes()
        {
            if (isNowDetect)
            {
                int time = cameraIndex >= 0 ? (int)(DateTime.Now - startTime).TotalMilliseconds : grabber.GetTimePos();

                if (cameraIndex >= 0)
                {
                    if ((DateTime.Now - startTime).TotalMilliseconds >= timeInterval)
                    {
                        EndDetect();
                        return;
                    }
                }
                else if (grabber.GetFramePos() >= grabber.Length - 1)
                {
                    EndDetect();
                    return;
                }

                Image<Bgr, Byte> color = null;

                var roiLeftReduce = roiLeft.Reduce(tbReduce.Value);
                var roiRightReduce = roiRight.Reduce(tbReduce.Value);

                if (tbReduce.Value > 1)
                {
                    color = grabber.Image.Clone().Reduce(tbReduce.Value);
                }
                else
                {
                    color = grabber.Image.Clone();
                }

                PointF ptLeft = PointF.Empty, ptRight = PointF.Empty;
                Image<Gray, Byte> detectImage = null;

                if (algorithm == Algorithm.Binarization)
                {
                    detectImage = GrayBin.ToGray(color);
                    if (chbxSmooth.Checked)
                    {
                        GrayBin.Smooth(detectImage);
                    }

                    if (chbxNormilize.Checked)
                    {
                        GrayBin.Normalize(detectImage);
                    }

                    GrayBin.BinarizeImmediate(detectImage, tbStep3.Value);


                }
                else if (algorithm == Algorithm.BinarizationExpand)
                {
                    detectImage = this.GetImageForExpandBinarization(color);
                }
                else if (algorithm == Algorithm.Gradient)
                {
                    detectImage = this.DetectGradient(color, out ptLeft, out ptRight);
                }

                if (algorithm == Algorithm.Binarization || algorithm == Algorithm.BinarizationExpand)
                {
                    if (radioMean.Checked)
                    {
                        ptLeft = Detect.DetectMean(detectImage, roiLeftReduce);
                        ptRight = Detect.DetectMean(detectImage, roiRightReduce);
                    }
                    else
                    {
                        ptLeft = Detect.DetectMedian(detectImage, roiLeftReduce);
                        ptRight = Detect.DetectMedian(detectImage, roiRightReduce);
                    }
                }

                double scaleFactor = (double)tbReduce.Value * calibFactor;

                var ptLeftScale = ptLeft.Scale(scaleFactor);
                var ptRightScale = ptRight.Scale(scaleFactor);
                recordData.Add(new DataStruct(ptLeftScale, ptRightScale, time));

                if (pbxDetectBin.Visible && pbxDetectColor.Visible)
                {
                    if (algorithm == Algorithm.Binarization || algorithm == Algorithm.BinarizationExpand)
                    {
                        GrayBin.InvertInRegions(detectImage, roiLeftReduce, roiRightReduce);
                    }

                    Bitmap colorBit = new Bitmap(color.Bitmap);
                    Bitmap detectBit =new Bitmap(detectImage.Bitmap);

                    var g = Graphics.FromImage(colorBit);
                    g.DrawLine(Pens.Red, new Point(0, (int)ptLeft.Y), new Point(colorBit.Width, (int)ptLeft.Y));
                    g.DrawLine(Pens.Red, new Point((int)ptLeft.X, 0), new Point((int)ptLeft.X, colorBit.Height));
                    g.DrawLine(Pens.Blue, new Point(0, (int)ptRight.Y), new Point(colorBit.Width, (int)ptRight.Y));
                    g.DrawLine(Pens.Blue, new Point((int)ptRight.X, 0), new Point((int)ptRight.X, colorBit.Height));
                    g.DrawRectangle(Pens.Azure, roiLeftReduce);
                    g.DrawRectangle(Pens.Azure, roiRightReduce);

                    pbxDetectColor.Image = colorBit;
                    pbxDetectBin.Image = detectBit;

                    //colorBit.Dispose();
                    //detectBit.Dispose();
                    g.Dispose();
              }

                #region graph
                if (chart1.Visible && chart2.Visible && ptLeft.X > 0 && ptRight.X > 0 && time > 10000)
                {
                    Record.Interpolate(recordData, 10);

                    if (centerLeft == 0 || centerRight == 0)
                    {
                        centerLeft = Record.CenterLeftX(recordData);
                        centerRight = Record.CenterRightX(recordData);
                    }

                    if (minX == 0 || maxX == 0)
                    {
                        minX = recordData[0].left.X - centerLeft;
                        maxX = recordData[0].left.X - centerLeft;
                        foreach (var item in recordData)
                        {
                            if (minX > item.left.X - centerLeft)
                            {
                                minX = item.left.X - centerLeft;
                            }

                            if (maxX < item.left.X - centerLeft)
                            {
                                maxX = item.left.X - centerLeft;
                            }

                            if (minX > item.right.X - centerRight)
                            {
                                minX = item.right.X - centerRight;
                            }

                            if (maxX < item.right.X - centerRight)
                            {
                                maxX = item.right.X - centerRight;
                            }
                        }
                    }

                    if (centerLeftY == 0 || centerRightY == 0)
                    {
                        centerLeftY = Record.CenterLeftY(recordData);
                        centerRightY = Record.CenterRightY(recordData);

                        double minY = 100000000;
                        for (int i = 0; i < recordData.Count; i++)
                        {
                            if ((recordData[i].left.Y - centerLeftY) < minY && recordData[i].left.Y > 0)
                            {
                                minY = recordData[i].left.Y - centerLeftY;
                            }

                            if ((recordData[i].right.Y - centerRightY) < minY && recordData[i].right.Y > 0)
                            {
                                minY = recordData[i].right.Y - centerRightY;
                            }
                        }

                        chart2.ChartAreas[0].AxisY.Minimum = Math.Round(minY, 2);
                    }

                    if ((ptLeftScale.X - centerLeft) >= minX * 1.2 && (ptRightScale.X - centerRight) >= minX * 1.2 && (ptLeftScale.X - centerLeft) <= maxX * 1.2 && (ptRightScale.X - centerRight) <= maxX * 1.2)
                    {
                        chart1.Series[0].Points.AddXY(Math.Round(time / 1000.0, 2), ptLeftScale.X - centerLeft);
                        chart1.Series[1].Points.AddXY(Math.Round(time / 1000.0, 2), ptRightScale.X - centerRight);

                        chart2.Series[0].Points.AddXY(Math.Round(ptLeftScale.X - centerLeft, 2), Math.Round(ptLeftScale.Y - centerLeftY, 2));
                        chart2.Series[1].Points.AddXY(Math.Round(ptRightScale.X - centerRight, 2), Math.Round(ptRightScale.Y - centerRightY, 2));

                        if (chart1.Width < time / 200)
                        {
                            chart1.Width += 1000;
                        }
                    }
                }

                #endregion

                if (cameraIndex >= 0)
                {
                    try
                    {
                        CvInvoke.cvWriteFrame(this.writerVideo, this.grabber.Image);
                    }
                    catch
                    {
                        if (MessageBox.Show("Ошибка при сохранении очередного кадра в видеофайл. Детектирование прервано. Хотите сохранить выполненную часть?", "Ошибка", MessageBoxButtons.YesNo, MessageBoxIcon.Error) == DialogResult.Yes)
                        {
                            this.EndDetect();
                        }
                        else
                        {
                            this.Close();
                        }
                    }

                    try { progressBar1.Value = (int)(((double)time / timeInterval) * 100); } catch { }
                }
                else
                {
                    progressBar1.Value = (int)((1.0 - ((double)(movieLength - grabber.GetFramePos()) / (double)movieLength)) * 100);
                }

                
                color.Dispose();
                detectImage.Dispose();
            }
        }
        #endregion

        //Bitmap bitStep2;
        private void timer1_Tick(object sender, EventArgs e)
        {
            try
            {
                grabber.GrabImage();
            }
            catch(Exception ex)
            {
                if (isNowDetect)
                {
                     if (MessageBox.Show("Ошибка при получении изображения из источника захвата. Детектирование прервано. Хотите сохранить выполненную часть?", "Ошибка", MessageBoxButtons.YesNo, MessageBoxIcon.Error) == DialogResult.Yes)
                     {
                         this.EndDetect();
                     }
                     else
                     {
                         this.Close();
                     }

                    return;
                }
                else
                {
                    if (cameraIndex < 0)
                    {
                        grabber.SetFramePos(0);
                        grabber.GrabImage();
                    }
                }
            }

            switch (currentStep)
            {
                case 1:
                    {
                        //bitStep2?.Dispose();
                        var bitStep2 = new Bitmap(grabber.Image.Bitmap);
                        Graphics g = Graphics.FromImage(bitStep2);
                        g.DrawRectangle(Pens.Red, roiLeft);
                        g.DrawRectangle(Pens.Blue, roiRight);
                        g.DrawLine(Pens.Azure, calibPt1, calibPt2);
                        pbxStep2.Image = bitStep2;
                        g.Dispose();
                    }

                    break;
                case 2:
                    {
                        ChooseImage();
                    }

                    break;

                case 3:
                    {
                        this.DetectEyes();
                    }
                    break;
            }
        }
        
        #region notUsed
        private void pnlStep5_Paint(object sender, PaintEventArgs e) { }
        #endregion
    }
}
namespace _SSU_EyesOffice.Forms
{
    using System;
    using System.Windows.Forms;
    using _SSU_EyesOffice.Logic;

    public partial class FormEditPatient : Form
    {
        private int patientID;
        public FormEditPatient(int patientID)
        {
            InitializeComponent();
            
            this.patientID = patientID;

            var patient = Patient.SelectByID(patientID);
            if (patient != null)
            {
                this.txtName.Text = patient.Name;
                this.txtSecondName.Text = patient.SecondName;
                this.radioButtonWoman.Checked = patient.IsFemale;
                this.radioButtonMan.Checked = !patient.IsFemale;
                this.txtComment.Text = patient.Comments;
                this.monthCalendar.SetDate(patient.BirthDate);

                this.Show();
            }
            else
            {
                MessageBox.Show("Данного пациента не существует", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                this.Close();
            }

            txtSecondName.Select();
        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            try
            {
                if (string.IsNullOrWhiteSpace(this.txtSecondName.Text))
                {
                    MessageBox.Show("Введите фамилию", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return;
                }

                Patient.UpdateToDB(
                    this.patientID,
                    this.txtSecondName.Text,
                    this.txtName.Text,
                    this.radioButtonWoman.Checked,
                    this.monthCalendar.SelectionStart,
                    this.txtComment.Text);
                MessageBox.Show("Изменения сохранены", "Выполнено", MessageBoxButtons.OK, MessageBoxIcon.Information);
                this.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show("Ошибка при обращении к базе данных", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                Logging.Log(ex, $"void btnAdd_Click(object sender, EventArgs e); Patient.UpdateToDB({this.patientID}, {this.txtSecondName.Text}, {this.txtName.Text}, {this.radioButtonWoman.Checked}, {this.monthCalendar.SelectionStart}, {this.txtComment.Text});");
            }
        }
    }
}
using _SSU_EyesOffice.Logic;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Windows.Forms.DataVisualization.Charting;

namespace _SSU_EyesOffice.Forms
{
    public partial class PlotXY : Form
    {
        public static void SavePlotXYToFile(Record record, string file, int width, int height)
        {
            Chart chart = new Chart();
            
            chart.Width = width;
            chart.Height = height;
            chart.Series.Add(new Series());
            chart.Series.Add(new Series());
            chart.ChartAreas.Add(new ChartArea());

            chart.Series[0].ChartType = SeriesChartType.Line;
            chart.Series[1].ChartType = SeriesChartType.Line;
            chart.Series[0].Color = Color.Red;
            chart.Series[1].Color = Color.Blue;

            var centerLeftY = record.CenterLeftY();
            var centerRightY = record.CenterRightY();

            double minY = 100000000;
            foreach(var item in record.data)
            {
                if ((item.left.Y - centerLeftY) < minY && item.left.Y > 0)
                {
                    minY = item.left.Y - centerLeftY;
                }

                if ((item.right.Y - centerRightY) < minY && item.right.Y > 0)
                {
                    minY = item.right.Y - centerRightY;
                }
            }

            chart.ChartAreas[0].AxisY.Minimum = Math.Round(minY, 2);

            var centerLeftX = record.CenterLeftX();
            var centerRightX = record.CenterRightX();

            chart.ChartAreas[0].AxisX.Title = "X, мм";
            chart.ChartAreas[0].AxisY.Title = "Y, мм";
            
            foreach(var item in record.data)
            {
                chart.Series[0].Points.AddXY(Math.Round(item.left.X - centerLeftX, 2), Math.Round(item.left.Y - centerLeftY, 2));
                chart.Series[1].Points.AddXY(Math.Round(item.right.X - centerRightX, 2), Math.Round(item.right.Y - centerRightY, 2));
            }

            chart.SaveImage(file, ChartImageFormat.Png);
        }

        public PlotXY(Record record)
        {
            InitializeComponent();

            var centerLeftY = record.CenterLeftY();
            var centerRightY = record.CenterRightY();

            double minY = 100000000;
            for (int i = 0; i < record.Length; i++)
            {
                if ((record[i].left.Y - centerLeftY) < minY && record[i].left.Y > 0)
                {
                    minY = record[i].left.Y - centerLeftY;
                }

                if ((record[i].right.Y - centerRightY) < minY && record[i].right.Y > 0)
                {
                    minY = record[i].right.Y - centerRightY;
                }
            }
            
            chart1.ChartAreas[0].AxisY.Minimum = Math.Round(minY, 2);

            var centerLeftX = record.CenterLeftX();
            var centerRightX = record.CenterRightX();

            chart1.ChartAreas[0].AxisX.Title = "X, мм";
            chart1.ChartAreas[0].AxisY.Title = "Y, мм";

            for (int i =0; i < record.Length; i++)
            {
                chart1.Series[0].Points.AddXY(Math.Round(record[i].left.X - centerLeftX, 2), Math.Round(record[i].left.Y - centerLeftY, 2));
                chart1.Series[1].Points.AddXY(Math.Round(record[i].right.X - centerRightX, 2), Math.Round(record[i].right.Y - centerRightY, 2));
            }
        }

        private void PlotXY_Load(object sender, EventArgs e)
        {

        }

        private void button1_Click(object sender, EventArgs e)
        {
            SaveFileDialog sfd = new SaveFileDialog();
            sfd.Filter = "Png files (*.png)|*.png";
            sfd.FilterIndex = 1;
            if (sfd.ShowDialog() == DialogResult.OK)
            {
                this.chart1.SaveImage(sfd.FileName, System.Windows.Forms.DataVisualization.Charting.ChartImageFormat.Png);
            }
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Data;
using System.Data.OleDb;

namespace _SSU_EyesOffice.Logic
{
    public class DataBase
    {
        public OleDbConnection conn;

        private static DataBase instance;

        /// <summary>
        /// 
        /// </summary>
        /// <param name="location">Path to database file</param>
        private DataBase(string location = "db.mdb")
        {
            this.Location = location;
            // Подключаемся к базе данных SQL Server
            this.conn = new OleDbConnection($"Provider=Microsoft.ACE.OLEDB.12.0;Data Source={this.Location}");
        }

        /// <summary>
        /// Use single tone techniques
        /// </summary>
        public static DataBase Instance
        {
            get
            {
                if (instance == null)
                {
                    instance = new DataBase();
                }

                return instance;
            }
        }

        public bool CheckConnection()
        {
            try
            {
                this.Connect();
            }
            catch (Exception ex)
            {
                System.Windows.Forms.MessageBox.Show(ex.Message);
                return false;
            }

            //this.Disconect();
            return true;
        }

        public string Location { get; set; }


        public void Connect()
        {
                     
            try
            {
                this.conn.Open();
            }
            catch(Exception ex)
            {
                throw;
                //throw Global.NewExc("Не могу подключиться к базе данных (Connect)", this);
            }
        }

        public void Disconnect()
        {
            this.conn.Close();
        }

        public int LastId(string table)
        {
            this.Connect();
            int lastId = -1;
            OleDbCommand cmd = new OleDbCommand($"Select TOP 1 ID from {table} ORDER BY ID DESC", this.conn);
            try
            {
                lastId = (int)cmd.ExecuteScalar();
            }
            catch (Exception ex)
            {
                throw new Exception("Ошибка при получении идентификатора (LastId)");
            }
            finally
            {
                this.Disconnect();
            }

            return lastId;
        }
    }
}
using Emgu.CV;
using Emgu.CV.Structure;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
namespace _SSU_EyesOffice.Logic
{
    public class Detect
    {
        public static PointF DetectMean(Image<Gray, Byte> img, Rectangle roi)
        {
            int totalX = 0;
            int totalY = 0;
            int cnt = 0;
            for (int y = roi.Y; y < roi.Y + roi.Height; y++)
            {
                for (int x = roi.X; x < roi.X + roi.Width; x++)
                {
                    if(img.Data[y, x, 0] > 0)
                    {
                        totalX += x;
                        totalY += y;
                        cnt++; 
                    }
                }
            }

            if (cnt <= 0)
            {
                return PointF.Empty;
            }

            return new PointF(totalX / cnt, totalY / cnt);
        }

        public static PointF DetectMedian(Image<Gray, Byte> img, Rectangle roi)
        {
            var totalX = new List<int>();
            var totalY = new List<int>();
            for (int y = roi.Y; y < roi.Y + roi.Height; y++)
            {
                for (int x = roi.X; x < roi.X + roi.Width; x++)
                {
                    if (img.Data[y, x, 0] > 0)
                    {
                        totalX.Add(x);
                        totalY.Add(y);
                    }
                }
            }

            if (totalX.Count <= 0 || totalY.Count <= 0)
            {
                return PointF.Empty;
            }

            totalX.Sort();
            totalY.Sort();

            return new PointF(totalX[totalX.Count / 2], totalY[totalY.Count / 2]);
        }

        public static PointF EyeCenter(Image<Gray, Byte> imgBytes)
        {
            double max = 0;
            var maxPoint = System.Drawing.Point.Empty;

            for (int y = 2; y < imgBytes.Height - 3; y++)
            {
                for (int x = 2; x < imgBytes.Width - 3; x++)
                {
                    var cur = CenterFunc(imgBytes, y, x);
                    if (cur > max)
                    {
                        max = cur;
                        maxPoint.X = x;
                        maxPoint.Y = y;
                    }
                }
            }

            return maxPoint;
        }

        private static double CenterFunc(Image<Gray, Byte> img, int i0, int j0)
        {
            double res = 0;

            double w = 255 - img.Data[i0, j0, 0];

            for (int i = 0; i < i0 - 1; i++)
            {
                for (int j = 0; j < j0 - 1; j++)
                {
                    //if (i == i0 || j == j0)
                    //{
                    //    continue;
                    //}

                    var gradient = new Vector(
                        img.Data[i + 1, j, 0] - img.Data[i, j, 0],
                        img.Data[i, j + 1, 0] - img.Data[i, j, 0]
                        );

                    var length = Math.Sqrt(Math.Pow(i - i0, 2) + Math.Pow(j - j0, 2));

                    var f = new Vector(
                       (i - i0) / length,
                       (j - j0) / length
                       );

                    res += (w / Math.Sqrt(1.0 + (Math.Pow(i - i0, 2) / Math.Pow(j - j0, 2)))) * Vector.Multiply(gradient, f);
                }
            }

            return res;
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _SSU_EyesOffice.Logic
{
    using System.IO;
    using Emgu.CV;
    using Emgu.CV.Structure;

    /// <summary>
    /// Базовый класс для источника изображения
    /// в нашем случае источником является видеофайл
    /// </summary>
    public class Grabber
    {
        /// <summary>самое-самое оригинальное изображение</summary>
        private Image<Bgr, Byte> image;

        /// <summary>устройство захвата</summary>
        private IntPtr capture;

        public int Width
        {
            get
            {
                return (int)CvInvoke.cvGetCaptureProperty(capture, Emgu.CV.CvEnum.CAP_PROP.CV_CAP_PROP_FRAME_WIDTH);
            }
        }

        public int Height
        {
            get
            {
                return (int)CvInvoke.cvGetCaptureProperty(capture, Emgu.CV.CvEnum.CAP_PROP.CV_CAP_PROP_FRAME_HEIGHT);
            }
        }

        public double Fps
        {
            get
            {
                return CvInvoke.cvGetCaptureProperty(capture, Emgu.CV.CvEnum.CAP_PROP.CV_CAP_PROP_FPS);
            }
        }

        /// <summary>Длина видео-файла</summary>
        public int Length
        {
            get
            {
                return (int)CvInvoke.cvGetCaptureProperty(this.capture, Emgu.CV.CvEnum.CAP_PROP.CV_CAP_PROP_FRAME_COUNT);
            }
        }

        public int WebCamIndex
        {
            get;
            private set;
        }

        /// <summary>Оригинальное изображение</summary>
        public Image<Bgr, Byte> Image
        {
            get
            {
                return this.image;
            }
        }

        /// <summary>
        /// Возвращает текущую позицию в видеопотоке
        /// </summary>
        /// <returns></returns>
        public int GetFramePos()
        {
            return (int)CvInvoke.cvGetCaptureProperty(this.capture, Emgu.CV.CvEnum.CAP_PROP.CV_CAP_PROP_POS_FRAMES);
        }

        /// <summary>
        /// Возвращает текущую позицию в видеопотоке
        /// </summary>
        /// <returns></returns>
        public int GetTimePos()
        {
            return (int)CvInvoke.cvGetCaptureProperty(this.capture, Emgu.CV.CvEnum.CAP_PROP.CV_CAP_PROP_POS_MSEC);
        }

        /// <summary>
        /// Задаем устройство, откуда будем захватывать изображения
        /// если указан индекс для веб-камеры videoFilePath игнорируется
        /// </summary>
        /// <param name="videoFilePath">путь к файлу</param>
        /// /// <param name="webCamIndex">индекс веб-камеры</param>
        public bool SetCapture(string videoFilePath, int webCamIndex = -1)
        {
            this.WebCamIndex = webCamIndex;
            this.capture = IntPtr.Zero;
            if (webCamIndex < 0)
            {
                if (!File.Exists(videoFilePath))
                {
                    throw new FileNotFoundException($"Couldn't create capture: file {videoFilePath} was not found");
                }
                else
                {
                    this.capture = CvInvoke.cvCreateFileCapture(videoFilePath);
                }
            }
            else
            {
                this.capture = CvInvoke.cvCreateCameraCapture(webCamIndex);
            }


            if (this.capture != IntPtr.Zero)
            {
                this.image = new Image<Bgr, byte>(
                    (int)CvInvoke.cvGetCaptureProperty(this.capture, Emgu.CV.CvEnum.CAP_PROP.CV_CAP_PROP_FRAME_WIDTH),
                    (int)CvInvoke.cvGetCaptureProperty(this.capture, Emgu.CV.CvEnum.CAP_PROP.CV_CAP_PROP_FRAME_HEIGHT));

                this.GrabImage();
                int pos1 = (int)CvInvoke.cvGetCaptureProperty(this.capture, Emgu.CV.CvEnum.CAP_PROP.CV_CAP_PROP_POS_FRAMES);
                this.GrabImage();
                int pos2 = (int)CvInvoke.cvGetCaptureProperty(this.capture, Emgu.CV.CvEnum.CAP_PROP.CV_CAP_PROP_POS_FRAMES);
                if (webCamIndex < 0 && (pos2 - pos1 != 1 || (int)CvInvoke.cvGetCaptureProperty(this.capture, Emgu.CV.CvEnum.CAP_PROP.CV_CAP_PROP_POS_FRAMES) < 0))
                {
                    throw new FileLoadException($"Not supported file");
                }

            }
            else
            {
                throw new Exception($"Couldn't create capture. Not supported file or stream");
            }

            this.SetFramePos(0);

            return true;
        }

        /// <summary>
        /// Захватываем очередное изображение с нашего устройства захвата
        /// throw NullReferenceException if couldn't grab
        /// </summary>
        public void GrabImage()
        {
            try
            {
                this.image.Ptr = CvInvoke.cvQueryFrame(this.capture);
                if (this.image.Ptr == IntPtr.Zero)
                {
                    throw new NullReferenceException();
                }
            }
            catch
            {
                throw new NullReferenceException();
            }
        }

        /// <summary>
        /// Задаем позицию в виде с которой будем захватывать в следующий раз
        /// </summary>
        /// <param name="pos">индекс кадра</param>
        public void SetFramePos(int position)
        {
            if (this.WebCamIndex >= 0)
            {
                return;
            }

            if (position < 0 || this.Length < position)
            {
                throw new System.ArgumentOutOfRangeException();
            }

            double positiontoset = position;
            double pos = positiontoset - 12;
            if (pos < 0) pos = 0;
            CvInvoke.cvSetCaptureProperty(this.capture, Emgu.CV.CvEnum.CAP_PROP.CV_CAP_PROP_POS_FRAMES, pos);
            if (positiontoset == 0)
            {
                return;
            }
            while (pos < position)
            {
                GrabImage();
                pos = CvInvoke.cvGetCaptureProperty(this.capture, Emgu.CV.CvEnum.CAP_PROP.CV_CAP_PROP_POS_FRAMES);
                if (pos == position)
                    break;
            }
        }

        /// <summary>
        /// Задаем позицию и захватываем с неё изображение
        /// </summary>
        /// <param name="pos">индекс кадра</param>
        public void GrabImageByPos(int pos)
        {
            if (this.WebCamIndex >= 0)
            {
                return;
            }

            this.SetFramePos(pos);
            this.GrabImage();
        }

        public void ReleaseCapture()
        {
            this.Release();
            try
            {
                CvInvoke.cvReleaseCapture(ref this.capture);
            }
            catch { }
        }

        public void Release()
        {
            if (this.image != null)
            {
                this.Image.Ptr = IntPtr.Zero;
            }
        }
    }
}
using Emgu.CV;
using Emgu.CV.Structure;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _SSU_EyesOffice.Logic
{
    public class GrayBin
    {
        public static Image<Gray, Byte> ToGray(Image<Bgr, Byte> imgColor)
        {
            Image<Gray, Byte> grayImg = new Image<Gray, byte>(imgColor.Width, imgColor.Height);

            CvInvoke.cvCvtColor(imgColor.Ptr, grayImg.Ptr, Emgu.CV.CvEnum.COLOR_CONVERSION.CV_BGR2GRAY);

            return grayImg;
        }

        public static Image<Gray, Byte> Binarize(Image<Gray, Byte> imgGray, int maxLevel, int minLevel = 0)
        {
            Image<Gray, Byte> binImg = new Image<Gray, byte>(imgGray.Width, imgGray.Height);
            CvInvoke.cvInRangeS(imgGray, new MCvScalar(minLevel), new MCvScalar(maxLevel), binImg);
            return binImg;
        }

        public static void BinarizeImmediate(Image<Gray, Byte> imgGray, int maxLevel, int minLevel = 0)
        {
            CvInvoke.cvInRangeS(imgGray, new MCvScalar(minLevel), new MCvScalar(maxLevel), imgGray);
        }

        public static void InvertInRegions(Image<Gray, Byte> imgBin, Rectangle roiLeft, Rectangle roiRight)
        {
            for (int y = 0; y < imgBin.Height; y++)
            {
                for (int x = 0; x < imgBin.Width; x++)
                {
                    if (roiLeft.Contains(x, y) || roiRight.Contains(x, y))
                    {
                        imgBin.Data[y, x, 0] = imgBin.Data[y, x, 0] > 0 ? (byte)0 : (byte)255;
                    }
                    else
                    {
                        imgBin.Data[y, x, 0] = 0;
                    }
                }
            }
        }

        public static Image<Hsv, byte> ToHsv(Image<Bgr, Byte> imgColor)
        {
            var hsv_and = new Image<Hsv, byte>(imgColor.Size);
            CvInvoke.cvCvtColor(imgColor, hsv_and, Emgu.CV.CvEnum.COLOR_CONVERSION.CV_BGR2HSV);

            return hsv_and;
        }

        public static Image<Gray, Byte>[] ToRgbChanels(Image<Bgr, Byte> imgColor)
        {
            Image<Gray, byte>[] chanels = imgColor.Split();
            //chanels[0] = chanels[0].InRange(Rmin, Rmax);
            //chanels[1] = chanels[1].InRange(Gmin, Gmax);
            //chanels[2] = chanels[2].InRange(Bmin, Bmax);
            //result = chanels[0].And(chanels[1]);
            //result = result.And(chanels[2]);
            //result = result.Dilate(dialate);
            return chanels;
        }

        public static Image<Gray, Byte> And(List<Image<Gray, Byte>> images)
        {
            if (images.Count <= 0)
            {
                return null;
            }

            Image<Gray, Byte> result = images[0].Clone();
            foreach (var item in images.Skip(1))
            {
                result = result.And(item);
            }

            return result;
        }

        public static void Smooth(Image<Gray, Byte> img, int level = 5)
        {
            CvInvoke.cvSmooth(img, img, Emgu.CV.CvEnum.SMOOTH_TYPE.CV_GAUSSIAN, level, 0, 0, 0);
        }

        public static void Normalize(Image<Gray, Byte> img, int levelMin = 0, int levelMax=255)
        {
            CvInvoke.cvNormalize(img, img, levelMin, levelMax, Emgu.CV.CvEnum.NORM_TYPE.CV_MINMAX, IntPtr.Zero);
        }

        
    }
}
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _SSU_EyesOffice.Logic
{
    public static class Logging
    {
        public static void Log(Exception ex, string message = "")
        {
            File.AppendAllText("logger.log", $"[{DateTime.Now}]: {message}{Environment.NewLine}###{Environment.NewLine}{ex.Message}{Environment.NewLine}###{Environment.NewLine}{ex.ToString()}{Environment.NewLine}{Environment.NewLine}############################################################################{Environment.NewLine}--------------{Environment.NewLine}############################################################################{Environment.NewLine}{Environment.NewLine}");
        }
    }
}
using System;
using System.Collections.Generic;
using System.Data.OleDb;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _SSU_EyesOffice.Logic
{
    public class Patient
    {
        private string secondName;

        public Patient(int Id, string secondName, string name, DateTime birthDay, bool isFemale, string comments)
        {
            this.Id = Id;
            this.SecondName = secondName;
            this.Name = name;
            this.BirthDate = birthDay;
            this.IsFemale = isFemale;
            this.Comments = comments;
        }

        public int Id { get; set; }

        public string Name { get; set; }

        public string SecondName {
            get
            {
                return this.secondName;
            }

            set
            {
                if (string.IsNullOrWhiteSpace(value))
                {
                    throw new ArgumentNullException();
                }

                this.secondName = value;
            }
        }

        public DateTime BirthDate { get; set; }

        public bool IsFemale  { get; set; }

        public string Comments { get; set; }

        public List<Record> Records {get; set;}

        public void Delete()
        {
            foreach (var item in this.Records)
            {
                item.Delete();
            }

            try
            {
                DataBase.Instance.Connect();
                OleDbCommand cmd = new OleDbCommand(
                   @"DELETE FROM Patients WHERE ID = @Id", DataBase.Instance.conn);
                cmd.Parameters.AddWithValue("@Id", this.Id);

                if (cmd.ExecuteNonQuery() <= 0)
                {
                    throw new Exception("Record.DeletePatient null query");
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                DataBase.Instance.Disconnect();
            }
        }

        public static List<Patient> SelectAllFromDB()
        {
            OleDbCommand cmd = new OleDbCommand(@"
                SELECT ID, c_second_name, c_name, c_is_female, c_birth_date, c_comments FROM patients
                ORDER BY ID DESC", 
                DataBase.Instance.conn);

            var patients = new List<Patient>();
            try
            { 
                DataBase.Instance.Connect();
                using (var reader = cmd.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        patients.Add(new Patient(
                            (int) reader["ID"],
                            reader["c_second_name"].ToString(),
                            reader["c_name"].ToString(),
                            (DateTime)reader["c_birth_date"],
                            (bool)reader["c_is_female"],
                            reader["c_comments"].ToString()));
                    }
                }

                DataBase.Instance.Disconnect();
            }
            catch (Exception ex)
            {
                Logging.Log(ex, "Couldn't open connection Patient.SelectAllFromDB");
            }

            return patients;
        }

        public static Patient SelectByID(int id)
        {
            OleDbCommand cmd = new OleDbCommand(@"
                SELECT ID, c_second_name, c_name, c_is_female, c_birth_date, c_comments FROM patients WHERE ID = @ID",
                DataBase.Instance.conn);
            cmd.Parameters.AddWithValue("@ID", id);

            try
            {
                DataBase.Instance.Connect();
                using (var reader = cmd.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        var patient = new Patient(
                            (int)reader["ID"],
                            reader["c_second_name"].ToString(),
                            reader["c_name"].ToString(),
                            (DateTime)reader["c_birth_date"],
                            (bool)reader["c_is_female"],
                            reader["c_comments"].ToString());
                        DataBase.Instance.Disconnect();
                        return patient;
                    }
                }

            }
            catch (Exception ex)
            {
                Logging.Log(ex, "Couldn't open connection Patient.SelectAllFromDB");
            }
            finally
            {
                DataBase.Instance.Disconnect();
            }

            return null;
        }

        public static void UpdateToDB(int Id, string secondName, string name, bool isFemale, DateTime birthDay, string comments)
        {
            if (string.IsNullOrWhiteSpace(secondName))
            {
                throw new ArgumentException();
            }

            try
            {
                DataBase.Instance.Connect();
                OleDbCommand cmd = new OleDbCommand(
                    @"UPDATE patients SET 
                    c_second_name = @SecondName,
                    c_name = @Name,
                    c_is_female = @IsFemale,
                    c_birth_date = @birthDay,
                    c_comments = @comments WHERE ID = @Id", DataBase.Instance.conn);
                cmd.Parameters.AddWithValue("@SecondName", secondName);
                cmd.Parameters.AddWithValue("@Name", name);
                cmd.Parameters.AddWithValue("@IsFemale", isFemale);
                cmd.Parameters.AddWithValue("@birthDay", birthDay);
                cmd.Parameters.AddWithValue("@comments", comments);
                cmd.Parameters.AddWithValue("@Id", Id);

                if (cmd.ExecuteNonQuery() <= 0)
                {
                    throw new Exception("Patient.UpdateToDB");
                }
            }
            catch
            {
                throw;
            }
            finally
            {
                DataBase.Instance.Disconnect();
            }
        }

        public static void AddToDB(string secondName, string name, bool isFemale, DateTime birthDay, string comments)
        {
            if (string.IsNullOrWhiteSpace(secondName))
            {
                throw new ArgumentException();
            }

            try
            {
                DataBase.Instance.Connect();
                OleDbCommand cmd = new OleDbCommand(
                    @"INSERT INTO patients(c_second_name, c_name, c_is_female, c_birth_date, c_comments) 
                    VALUES(@SecondName, @Name, @IsFemale, @birthDay, @comments)", DataBase.Instance.conn);
                cmd.Parameters.AddWithValue("@SecondName", secondName);
                cmd.Parameters.AddWithValue("@Name", name);
                cmd.Parameters.AddWithValue("@IsFemale", isFemale);
                cmd.Parameters.AddWithValue("@birthDay", birthDay);
                cmd.Parameters.AddWithValue("@comments", comments);

                if (cmd.ExecuteNonQuery() <= 0)
                {
                    throw new Exception("Patient.AddToDB null query");
                }
            }
            catch
            {
                throw;
            }
            finally
            {
                DataBase.Instance.Disconnect();
            }
        }
    }
}
using System;
using System.Collections.Generic;
using System.Data.OleDb;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _SSU_EyesOffice.Logic
{
    public struct DataStruct
    {
        public  PointF left;
        public  PointF right;
        public  int msecs;

        public DataStruct(PointF left, PointF right, int msecs)
        {
            this.left = left;
            this.right = right;
            this.msecs = msecs;
        }
    }

    public class Record
    {
        public static List<Record> SelectAllFromDB(int patientId)
        {
            OleDbCommand cmd = new OleDbCommand(@"
                SELECT ID, patient_id, path, video_date, comments, reduce_factor, calib_factor FROM Records WHERE patient_id = @PatientId
                ORDER BY ID DESC",
                DataBase.Instance.conn);
            cmd.Parameters.AddWithValue("@PatientId", patientId);
            var records = new List<Record>();
            try
            {
                DataBase.Instance.Connect();
                using (var reader = cmd.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        records.Add(new Record(
                            (int)reader["ID"],
                            (int)reader["patient_id"],
                            reader["path"].ToString(),
                            (DateTime)reader["video_date"],
                            reader["comments"].ToString(),
                            (int)reader["reduce_factor"],
                            (double)reader["calib_factor"]));
                    }
                }
            }
            catch (Exception ex)
            {
                Logging.Log(ex, "Couldn't open connection Patient.SelectAllFromDB");
            }
            finally
            {
                DataBase.Instance.Disconnect();
            }

            return records;
        }

        public static void AddToDB(int patientId, string path, DateTime date, string comments = "0", int reduceFactor = 0, double calibFactor = 0)
        {
            try
            {
                DataBase.Instance.Connect();
                OleDbCommand cmd = new OleDbCommand(
                    @"INSERT INTO Records(patient_id, path, video_date, reduce_factor, calib_factor, comments) 
                    VALUES(@PatientId, @Path, @DateT,@ReduceFactor, @CalibFactor, @Comments)", DataBase.Instance.conn);
                cmd.Parameters.AddWithValue("@PatientId", patientId);
                cmd.Parameters.AddWithValue("@Path", path);
                cmd.Parameters.AddWithValue("@DateT", date.ToString("dd.MM.yyyy hh:mm:ss"));
                cmd.Parameters.AddWithValue("@ReduceFactor", reduceFactor);
                cmd.Parameters.AddWithValue("@CalibFactor", calibFactor);
                cmd.Parameters.AddWithValue("@Comments", comments);

                if (cmd.ExecuteNonQuery() <= 0)
                {
                    throw new Exception("Record.AddToDB null query");
                }
            }
            catch (Exception ex)
            {
                throw;
            }
            finally
            {
                DataBase.Instance.Disconnect();
            }
        }

        public List<DataStruct> data { get; set; } = new List<DataStruct>();
        private List<DataStruct> backUp = null;

        public Record(int id, int patient_id, string path, DateTime date, string comments = "", int reduce_factor = 0, double calib_factor = 0)
        {
            this.Id = id;
            this.PatientId = patient_id;
            this.Path = path;
            this.Date = date;
            this.ReduceFactor = reduce_factor;
            this.CalibFactor = calib_factor;
            this.Comments = comments;
        }

        public DataStruct this[int frameNumber]
        {
            get
            {
                if (frameNumber < 0 || frameNumber >= this.data.Count)
                {
                    throw new IndexOutOfRangeException();
                }

                return this.data[frameNumber];
            }

            set
            {
                if (frameNumber < 0 || frameNumber >= this.data.Count)
                {
                    throw new IndexOutOfRangeException();
                }

                this.data[frameNumber] = value;
            }
        }

        public int Length
        {
            get
            {
                return this.data.Count;
            }
        }

        public void Delete()
        {
            try
            {
                DataBase.Instance.Connect();
                OleDbCommand cmd = new OleDbCommand(
                   @"DELETE FROM Records WHERE ID = @Id", DataBase.Instance.conn);
                cmd.Parameters.AddWithValue("@Id", this.Id);

                if (cmd.ExecuteNonQuery() <= 0)
                {
                    throw new Exception("Record.DeleteRecord null query");
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                DataBase.Instance.Disconnect();
            }

            try
            {
                File.Delete($"data//{this.Id}.dat");
            }
            catch
            {

            }
        }

        public int Id { get; private set; }

        public int PatientId { get; private set; }

        public string Path { get; set; }

        public DateTime Date { get; private set; }

        public int ReduceFactor { get; private set; }

        public double CalibFactor { get; set; }

        public string Comments { get; set; }

        public void SetData(List<DataStruct> dat)
        {
            this.data = dat;
        }

        public PointF GetLeft(int frame)
        {
            try
            {
                return new PointF((float)(this.data[frame].left.X / this.CalibFactor), (float)(this.data[frame].left.Y / this.CalibFactor));
            }
            catch
            {
                return PointF.Empty;
            }
        }

        public static float CenterLeftX(List<DataStruct> data)
        {
            if (data.Count <= 0)
            {
                return 0;
            }

            var min = data[0].left.X;
            foreach (var item in data.Skip(1))
            {
                if (min > item.left.X && item.left.X > 0)
                {
                    min = item.left.X;
                }
            }


            var max = data[0].left.X;
            foreach (var item in data.Skip(1))
            {
                if (max < item.left.X)
                {
                    max = item.left.X;
                }
            }

            return (max + min) / 2.0F;
        }

        public float CenterLeftX()
        {
            return Record.CenterLeftX(this.data);
        }

        public static float CenterRightX(List<DataStruct> data)
        {
            if (data.Count <= 0)
            {
                return 0;
            }

            var min = data[0].right.X;
            foreach (var item in data.Skip(1))
            {
                if (min > item.right.X && item.right.X > 0)
                {
                    min = item.right.X;
                }
            }

            var max = data[0].right.X;
            foreach (var item in data.Skip(1))
            {
                if (max < item.right.X)
                {
                    max = item.right.X;
                }
            }

            return (max + min) / 2.0F;
        }

        public float CenterRightX()
        {
            return Record.CenterRightX(this.data);
        }

        public static float CenterLeftY(List<DataStruct> data)
        {
            if (data.Count <= 0)
            {
                return 0;
            }

            var min = data[0].left.Y;
            foreach (var item in data.Skip(1))
            {
                if (min > item.left.Y && item.left.Y > 0)
                {
                    min = item.left.Y;
                }
            }


            var max = data[0].left.Y;
            foreach (var item in data.Skip(1))
            {
                if (max < item.left.Y)
                {
                    max = item.left.Y;
                }
            }

            return (max + min) / 2.0F;
        }

        public float CenterLeftY()
        {
            return Record.CenterLeftY(this.data);
        }

        public static float CenterRightY(List<DataStruct> data)
        {
            if (data.Count <= 0)
            {
                return 0;
            }

            var min = data[0].right.Y;
            foreach (var item in data.Skip(1))
            {
                if (min > item.right.Y && item.right.Y > 0)
                {
                    min = item.right.Y;
                }
            }

            var max = data[0].right.Y;
            foreach (var item in data.Skip(1))
            {
                if (max < item.right.Y)
                {
                    max = item.right.Y;
                }
            }

            return (max + min) / 2.0F;
        }

        public float CenterRightY()
        {
            return Record.CenterRightY(this.data);
        }

        public PointF GetRight(int frame)
        {
            try
            {
                return new PointF((float)(this.data[frame].right.X / this.CalibFactor), (float)(this.data[frame].right.Y / this.CalibFactor));
            }
            catch
            {
                return PointF.Empty;
            }
        }

        public void SetLeft(int frame, PointF left)
        {
            var tmp = this.data[frame];
            tmp.left = left;
            this.data[frame] = tmp;
        }

        public void SetRight(int frame, PointF right)
        {
            var tmp = this.data[frame];
            tmp.right = right;
            this.data[frame] = tmp;
        }

        public void UpdateDB()
        {
            try
            {
                DataBase.Instance.Connect();
                OleDbCommand cmd = new OleDbCommand(
                    @"UPDATE Records SET 
                        patient_id = @PatientId,
                        path = @Path, 
                        video_date = @DateT, 
                        reduce_factor = @ReduceFactor, 
                        calib_factor = @CalibFactor, 
                        comments = @Comments
                    WHERE ID = @Id", DataBase.Instance.conn);

                cmd.Parameters.AddWithValue("@PatientId", this.PatientId);
                cmd.Parameters.AddWithValue("@Path", this.Path);
                cmd.Parameters.AddWithValue("@DateT", this.Date.ToString("dd.MM.yyyy hh:mm:ss"));
                cmd.Parameters.AddWithValue("@ReduceFactor", this.ReduceFactor);
                cmd.Parameters.AddWithValue("@CalibFactor", this.CalibFactor);
                cmd.Parameters.AddWithValue("@Comments", this.Comments);
                cmd.Parameters.AddWithValue("@Id", this.Id);

                if (cmd.ExecuteNonQuery() <= 0)
                {
                    throw new Exception("Record.UpdateDB bad query");
                }
            }
            catch (Exception ex)
            {
                throw;
            }
            finally
            {
                DataBase.Instance.Disconnect();
            }
        }

        public void Save(String fileName = "")
        {
            if (!Directory.Exists("data"))
            {
                Directory.CreateDirectory("data");
            }

            using (StreamWriter sw = new StreamWriter(string.IsNullOrEmpty(fileName) ? $"data//{this.Id}.dat" : fileName))
            {
                foreach (var item in this.data)
                {
                    sw.WriteLine($"{item.msecs}\t{item.left.X}\t{item.left.Y}\t{item.right.X}\t{item.right.Y}");
                }
            }
        }

        public void Open()
        {
            this.data.Clear();
            using (StreamReader sr = new StreamReader($"data//{this.Id}.dat"))
            {
                while (!sr.EndOfStream)
                {
                    var line = sr.ReadLine().Split('\t');
                    this.data.Add(new DataStruct(
                        new PointF(float.Parse(line[1]), float.Parse(line[2])),
                        new PointF(float.Parse(line[3]), float.Parse(line[4])),
                        int.Parse(line[0])
                        ));
                }
            }
        }

        public void BackUp()
        {
            if (backUp == null)
            {
                throw new NullReferenceException();
            }

            data.Clear();
            foreach (var item in this.backUp)
            {
                data.Add(item);
            }

            backUp = null;
        }

        public bool IsBackupEnabled {
            get
            {
                return backUp != null;
            }
        }

        public static int Interpolate(List<DataStruct> list, double vibrosFactor)
        {
            int cnt = 0;

            float[] dxArr = new float[list.Count - 1];

            for (int i = 0; i < list.Count - 1; i++)
            {
                dxArr[i] = Math.Abs(list[i + 1].left.X - list[i].left.X);
            }

            var mediane_dx = dxArr.Mediane(); // медиана изменения значений между соседними точками

            for (int i = 0; i < list.Count - 1; i++)
            {
                PointF backL = PointF.Empty;
                PointF backR = PointF.Empty;
                bool isVibros = (Math.Abs(list[i + 1].left.X - list[i].left.X) > mediane_dx * vibrosFactor) || (Math.Abs(list[i + 1].right.X - list[i].right.X) > mediane_dx * vibrosFactor);

                if (list[i].left.X == 0 || list[i].right.X == 0 || isVibros)
                {
                    if (i > 0)
                    {
                        backL = list[i - 1].left;
                        backR = list[i - 1].right;
                    }

                    for (int j = i + 1; j < list.Count - 1; j++)
                    {
                        bool isVibros2 = (Math.Abs(list[j + 1].left.X - list[j].left.X) > mediane_dx * vibrosFactor) || (Math.Abs(list[j + 1].right.X - list[j].right.X) > mediane_dx * vibrosFactor);

                        if (list[j].left.X != 0 && list[j].right.X != 0 && (vibrosFactor == 1 || !isVibros2))
                        {
                            for (int k = i; k < j; k++)
                            {
                                cnt++;
                                PointF L, R;
                                if (backL.X == 0)
                                {
                                    L = list[j].left;
                                }
                                else
                                {
                                    L = new PointF((float)(backL.X + list[j].left.X) / 2, (float)(backL.Y + list[j].left.Y) / 2);
                                }

                                if (backR.X == 0)
                                {
                                    R = list[j].right;
                                }
                                else
                                {
                                    R = new PointF((float)(backR.X + list[j].right.X) / 2, (float)(backR.Y + list[j].right.Y) / 2);
                                }

                                list[k] = new DataStruct(L, R, list[k].msecs);
                            }

                            break;
                        }
                    }
                }
            }

            return cnt;
        }

        public int Interpolate(double vibrosFactor = 1)
        {
            backUp = new List<DataStruct>();
            backUp.Clear();
            foreach (var item in this.data)
            {
                backUp.Add(item);
            }

            return Record.Interpolate(this.data, vibrosFactor);
        }

        public float GetFreq()
        {
            int cnt = 0;
            var centerX = this.CenterLeftX();
            for (int i = 1; i < this.data.Count; i++)
            {
                if ((this.data[i - 1].left.X - centerX) * (this.data[i].left.X - centerX) < 0)
                {
                    cnt++;
                }
            }

            return (float)cnt / (float)(2 * (this.data[this.data.Count - 1].msecs / 1000));
        }

        public float GetMaxAmplitudeLeft()
        {
            float min = 0;
            foreach (var item in data)
            {
                if ((min > item.left.X || min == 0))
                {
                    min = item.left.X;
                }
            }

            float max = 0;
            foreach (var item in data)
            {
                if ((max < item.left.X || max == 0))
                {
                    max = item.left.X;
                }
            }

            return max - min;
        }

        public float GetMaxAmplitudeRight()
        {
            float min = 0;
            foreach (var item in data)
            {
                if ((min > item.right.X || min == 0))
                {
                    min = item.right.X;
                }
            }

            float max = 0;
            foreach (var item in data)
            {
                if ((max < item.right.X || max == 0))
                {
                    max = item.right.X;
                }
            }

            return max - min;
        }

        public float GetMaxPeakToPeak(List<float> peaks)
        {
            float min = -1000000;
            float max = -1000000;
            foreach (var item in peaks)
            {
               
                if (min < Math.Abs(item) && item < 0)
                {
                    min = Math.Abs(item);
                }

                if (max < Math.Abs(item) && item > 0)
                {
                    max = Math.Abs(item);
                }
            }

            return max + min;
        }

        public float GetMinPeakToPeak(List<float> peaks)
        {
            float min = 1000000;
            float max = 1000000;
            foreach (var item in peaks)
            {

                if (min > Math.Abs(item) && item < 0)
                {
                    min = Math.Abs(item);
                }

                if (max > Math.Abs(item) && item > 0)
                {
                    max = Math.Abs(item);
                }
            }

            return max + min;
        }

        public float GetMeanAmplitude(List<float> peaks)
        {
           var peakMax = new List<float>();
           var peakMin = new List<float>();

            foreach (var item in peaks)
            {
                if (item > 0)
                {
                    peakMax.Add(item); 
                }

                if (item < 0)
                {
                    peakMin.Add(item);
                }
            }

            if (peakMax.Count > peakMin.Count)
            {
                peakMax.RemoveRange(0, peakMax.Count - peakMin.Count);
            }
            else if (peakMax.Count < peakMin.Count)
            {
                peakMin.RemoveRange(0, peakMin.Count - peakMax.Count);
            }

            return (Math.Abs(peakMin.Sum()) + Math.Abs(peakMax.Sum())) / peakMin.Count;
            
        }

        public List<float> PeaksLeft()
        {
            var arr = new List<float>();
            float max = 0;
            var center = CenterLeftX();
            for (int i = 1; i < data.Count - 1; i++)
            {
                if ((data[i - 1].left.X - center) * (data[i].left.X - center) < 0)
                {
                    arr.Add(max - center);
                    max = 0;
                }
                else
                {
                    if (data[i].left.X - center > 0)
                    { // find max
                        if ((max == 0) || max < data[i].left.X)
                        {
                            max = data[i].left.X;
                        }
                    }
                    else
                    {// min
                        if ((max == 0) || max > data[i].left.X)
                        {
                            max = data[i].left.X;
                        }
                    }

                }
            }

            arr.RemoveAt(0);
            arr.RemoveAt(arr.Count - 1);

            return arr;
        }

        public List<float> PeaksRight()
        {
            var arr = new List<float>();
            float max = 0;
            var center = CenterRightX();
            for (int i = 1; i < data.Count - 1; i++)
            {
                if ((data[i - 1].right.X - center) * (data[i].right.X - center) < 0)
                {
                    arr.Add(max - center);
                    max = 0;
                }
                else
                {
                    if (data[i].right .X - center > 0)
                    { // find max
                        if ((max == 0) || max < data[i].right.X)
                        {
                            max = data[i].right.X;
                        }
                    }
                    else
                    {// min
                        if ((max == 0) || max > data[i].right.X)
                        {
                            max = data[i].right.X;
                        }
                    }

                }
            }

            arr.RemoveAt(0);
            arr.RemoveAt(arr.Count - 1);

            return arr;
        }

    }
}
using Emgu.CV;
using Emgu.CV.Structure;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _SSU_EyesOffice
{
    public static class Helper
    {
        public static Rectangle Reduce(this Rectangle rect, double factor)
        {
            return new Rectangle((int)(rect.X / factor), (int)(rect.Y / factor), (int)(rect.Width / factor), (int)(rect.Height / factor));
        }

        public static Image<Bgr, Byte> Reduce(this Image<Bgr, Byte> img, double reduceFactor)
        {
            var imageSmall = new Image<Bgr, byte>(new Size((int)(img.Width / reduceFactor), (int)(img.Height / reduceFactor)));
            CvInvoke.cvResize(img.Ptr, imageSmall.Ptr, Emgu.CV.CvEnum.INTER.CV_INTER_LINEAR);
            return imageSmall;
        }

        public static PointF Scale(this PointF pt, double factor)
        {
            return new PointF((float)(pt.X * factor), (float)(pt.Y * factor));
        }

        public static float Mediane(this float[] arr)
        {
            var list = arr.ToList();
            list.Sort();
            return list[list.Count / 2];
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace _SSU_EyesOffice
{
    static class Program
    {
        /// <summary>
        /// The main entry point for the application.
        /// </summary>
        [STAThread]
        static void Main()
        {
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new FormMain());
        }
    }
}
namespace _SSU_EyesOffice
{
    partial class FormMain
    {
        /// <summary>
        /// Required designer variable.
        /// </summary>
        private System.ComponentModel.IContainer components = null;

        /// <summary>
        /// Clean up any resources being used.
        /// </summary>
        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region Windows Form Designer generated code

        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FormMain));
            System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea1 = new System.Windows.Forms.DataVisualization.Charting.ChartArea();
            System.Windows.Forms.DataVisualization.Charting.Series series1 = new System.Windows.Forms.DataVisualization.Charting.Series();
            System.Windows.Forms.DataVisualization.Charting.Series series2 = new System.Windows.Forms.DataVisualization.Charting.Series();
            System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea2 = new System.Windows.Forms.DataVisualization.Charting.ChartArea();
            System.Windows.Forms.DataVisualization.Charting.Series series3 = new System.Windows.Forms.DataVisualization.Charting.Series();
            System.Windows.Forms.DataVisualization.Charting.Series series4 = new System.Windows.Forms.DataVisualization.Charting.Series();
            this.pnlTop = new System.Windows.Forms.Panel();
            this.lblLogo = new System.Windows.Forms.Label();
            this.pnlCenter = new System.Windows.Forms.Panel();
            this.pnlCameraIndex = new System.Windows.Forms.Panel();
            this.btnBack = new System.Windows.Forms.Button();
            this.label1 = new System.Windows.Forms.Label();
            this.txtCameraIndex = new System.Windows.Forms.TextBox();
            this.btnCameraDetect = new System.Windows.Forms.Button();
            this.pnlMain = new System.Windows.Forms.Panel();
            this.pnlCenterDockFill = new System.Windows.Forms.Panel();
            this.splitContainer1 = new System.Windows.Forms.SplitContainer();
            this.pnlVideoInfo = new System.Windows.Forms.Panel();
            this.lblDate = new System.Windows.Forms.Label();
            this.lblPath = new System.Windows.Forms.Label();
            this.lblID = new System.Windows.Forms.Label();
            this.dataGrid = new System.Windows.Forms.DataGridView();
            this.ID = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.Path = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.Date = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.splitContainer2 = new System.Windows.Forms.SplitContainer();
            this.btnChartYSave = new System.Windows.Forms.Button();
            this.btnChartXSave = new System.Windows.Forms.Button();
            this.chart2 = new System.Windows.Forms.DataVisualization.Charting.Chart();
            this.chart1 = new System.Windows.Forms.DataVisualization.Charting.Chart();
            this.pbxColorImage = new System.Windows.Forms.PictureBox();
            this.pnlRight = new System.Windows.Forms.Panel();
            this.toolStripRight = new System.Windows.Forms.ToolStrip();
            this.btnFromCamera = new System.Windows.Forms.ToolStripButton();
            this.btnFromVideo = new System.Windows.Forms.ToolStripButton();
            this.toolStripSeparator6 = new System.Windows.Forms.ToolStripSeparator();
            this.btnAnalize = new System.Windows.Forms.ToolStripButton();
            this.btnChangeVideo = new System.Windows.Forms.ToolStripButton();
            this.btnDeleteRecord = new System.Windows.Forms.ToolStripButton();
            this.toolStripSeparator3 = new System.Windows.Forms.ToolStripSeparator();
            this.btnNext = new System.Windows.Forms.ToolStripButton();
            this.btnRedrawGraph = new System.Windows.Forms.ToolStripButton();
            this.btnPrev = new System.Windows.Forms.ToolStripButton();
            this.toolStripSeparator4 = new System.Windows.Forms.ToolStripSeparator();
            this.txtVibrosy = new System.Windows.Forms.ToolStripTextBox();
            this.btnCalc = new System.Windows.Forms.ToolStripButton();
            this.btnSmooth = new System.Windows.Forms.ToolStripButton();
            this.btnBackUp = new System.Windows.Forms.ToolStripButton();
            this.toolStripSeparator5 = new System.Windows.Forms.ToolStripSeparator();
            this.btnSave = new System.Windows.Forms.ToolStripButton();
            this.btnXYShow = new System.Windows.Forms.ToolStripButton();
            this.btnReport = new System.Windows.Forms.ToolStripButton();
            this.pnlLeft = new System.Windows.Forms.Panel();
            this.panel1 = new System.Windows.Forms.Panel();
            this.lblCurrentPatientComments = new System.Windows.Forms.TextBox();
            this.lblCurrentPatientSex = new System.Windows.Forms.Label();
            this.lblCurrentPatientBirthDate = new System.Windows.Forms.Label();
            this.lblCurrentPatientSecondName = new System.Windows.Forms.Label();
            this.lblCurrentPatientName = new System.Windows.Forms.Label();
            this.listBoxPatients = new System.Windows.Forms.ListBox();
            this.toolStripPatient = new System.Windows.Forms.ToolStrip();
            this.btnAddPatient = new System.Windows.Forms.ToolStripButton();
            this.toolStripSeparator1 = new System.Windows.Forms.ToolStripSeparator();
            this.btnEditPatient = new System.Windows.Forms.ToolStripButton();
            this.toolStripSeparator2 = new System.Windows.Forms.ToolStripSeparator();
            this.btnDeletePatient = new System.Windows.Forms.ToolStripButton();
            this.statusStrip1 = new System.Windows.Forms.StatusStrip();
            this.toolStripStatusLabel1 = new System.Windows.Forms.ToolStripStatusLabel();
            this.statusFrame = new System.Windows.Forms.ToolStripStatusLabel();
            this.toolStripStatusLabel2 = new System.Windows.Forms.ToolStripStatusLabel();
            this.statusTime = new System.Windows.Forms.ToolStripStatusLabel();
            this.toolStripStatusLabel3 = new System.Windows.Forms.ToolStripStatusLabel();
            this.statusLeft = new System.Windows.Forms.ToolStripStatusLabel();
            this.toolStripStatusLabel4 = new System.Windows.Forms.ToolStripStatusLabel();
            this.statusRight = new System.Windows.Forms.ToolStripStatusLabel();
            this.pnlTop.SuspendLayout();
            this.pnlCenter.SuspendLayout();
            this.pnlCameraIndex.SuspendLayout();
            this.pnlMain.SuspendLayout();
            this.pnlCenterDockFill.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.splitContainer1)).BeginInit();
            this.splitContainer1.Panel1.SuspendLayout();
            this.splitContainer1.Panel2.SuspendLayout();
            this.splitContainer1.SuspendLayout();
            this.pnlVideoInfo.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.dataGrid)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.splitContainer2)).BeginInit();
            this.splitContainer2.Panel1.SuspendLayout();
            this.splitContainer2.Panel2.SuspendLayout();
            this.splitContainer2.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.chart2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxColorImage)).BeginInit();
            this.pnlRight.SuspendLayout();
            this.toolStripRight.SuspendLayout();
            this.pnlLeft.SuspendLayout();
            this.panel1.SuspendLayout();
            this.toolStripPatient.SuspendLayout();
            this.statusStrip1.SuspendLayout();
            this.SuspendLayout();
            // 
            // pnlTop
            // 
            this.pnlTop.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(168)))), ((int)(((byte)(208)))), ((int)(((byte)(141)))));
            this.pnlTop.Controls.Add(this.lblLogo);
            this.pnlTop.Dock = System.Windows.Forms.DockStyle.Top;
            this.pnlTop.Location = new System.Drawing.Point(0, 0);
            this.pnlTop.Margin = new System.Windows.Forms.Padding(0);
            this.pnlTop.Name = "pnlTop";
            this.pnlTop.Padding = new System.Windows.Forms.Padding(0, 8, 15, 0);
            this.pnlTop.Size = new System.Drawing.Size(1181, 34);
            this.pnlTop.TabIndex = 0;
            // 
            // lblLogo
            // 
            this.lblLogo.AutoSize = true;
            this.lblLogo.Dock = System.Windows.Forms.DockStyle.Right;
            this.lblLogo.Font = new System.Drawing.Font("Microsoft Sans Serif", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(204)));
            this.lblLogo.ForeColor = System.Drawing.Color.White;
            this.lblLogo.Location = new System.Drawing.Point(1040, 8);
            this.lblLogo.Margin = new System.Windows.Forms.Padding(0);
            this.lblLogo.Name = "lblLogo";
            this.lblLogo.Size = new System.Drawing.Size(126, 20);
            this.lblLogo.TabIndex = 0;
            this.lblLogo.Text = "EyesOffice 2016";
            // 
            // pnlCenter
            // 
            this.pnlCenter.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(102)))), ((int)(((byte)(204)))), ((int)(((byte)(102)))));
            this.pnlCenter.Controls.Add(this.pnlCameraIndex);
            this.pnlCenter.Controls.Add(this.pnlMain);
            this.pnlCenter.Controls.Add(this.pnlLeft);
            this.pnlCenter.Dock = System.Windows.Forms.DockStyle.Fill;
            this.pnlCenter.Location = new System.Drawing.Point(0, 34);
            this.pnlCenter.Margin = new System.Windows.Forms.Padding(2, 12, 11, 2);
            this.pnlCenter.Name = "pnlCenter";
            this.pnlCenter.Padding = new System.Windows.Forms.Padding(0, 6, 5, 0);
            this.pnlCenter.Size = new System.Drawing.Size(1181, 574);
            this.pnlCenter.TabIndex = 1;
            // 
            // pnlCameraIndex
            // 
            this.pnlCameraIndex.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(102)))), ((int)(((byte)(205)))), ((int)(((byte)(102)))));
            this.pnlCameraIndex.Controls.Add(this.btnBack);
            this.pnlCameraIndex.Controls.Add(this.label1);
            this.pnlCameraIndex.Controls.Add(this.txtCameraIndex);
            this.pnlCameraIndex.Controls.Add(this.btnCameraDetect);
            this.pnlCameraIndex.Dock = System.Windows.Forms.DockStyle.Right;
            this.pnlCameraIndex.Location = new System.Drawing.Point(1082, 6);
            this.pnlCameraIndex.Margin = new System.Windows.Forms.Padding(2);
            this.pnlCameraIndex.Name = "pnlCameraIndex";
            this.pnlCameraIndex.Size = new System.Drawing.Size(94, 568);
            this.pnlCameraIndex.TabIndex = 4;
            this.pnlCameraIndex.Visible = false;
            // 
            // btnBack
            // 
            this.btnBack.Location = new System.Drawing.Point(11, 93);
            this.btnBack.Margin = new System.Windows.Forms.Padding(2);
            this.btnBack.Name = "btnBack";
            this.btnBack.Size = new System.Drawing.Size(75, 29);
            this.btnBack.TabIndex = 3;
            this.btnBack.Text = "Назад";
            this.btnBack.UseVisualStyleBackColor = true;
            this.btnBack.Click += new System.EventHandler(this.btnBack_Click);
            // 
            // label1
            // 
            this.label1.AutoSize = true;
            this.label1.ForeColor = System.Drawing.Color.White;
            this.label1.Location = new System.Drawing.Point(8, 8);
            this.label1.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(84, 13);
            this.label1.TabIndex = 2;
            this.label1.Text = "Номер камеры";
            // 
            // txtCameraIndex
            // 
            this.txtCameraIndex.Location = new System.Drawing.Point(11, 23);
            this.txtCameraIndex.Margin = new System.Windows.Forms.Padding(2);
            this.txtCameraIndex.MaxLength = 2;
            this.txtCameraIndex.Name = "txtCameraIndex";
            this.txtCameraIndex.Size = new System.Drawing.Size(75, 20);
            this.txtCameraIndex.TabIndex = 1;
            this.txtCameraIndex.Text = "0";
            // 
            // btnCameraDetect
            // 
            this.btnCameraDetect.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(102)))), ((int)(((byte)(255)))), ((int)(((byte)(102)))));
            this.btnCameraDetect.Location = new System.Drawing.Point(11, 47);
            this.btnCameraDetect.Margin = new System.Windows.Forms.Padding(2);
            this.btnCameraDetect.Name = "btnCameraDetect";
            this.btnCameraDetect.Size = new System.Drawing.Size(75, 44);
            this.btnCameraDetect.TabIndex = 0;
            this.btnCameraDetect.Text = "Запустить";
            this.btnCameraDetect.UseVisualStyleBackColor = false;
            this.btnCameraDetect.Click += new System.EventHandler(this.btnCameraDetect_Click);
            // 
            // pnlMain
            // 
            this.pnlMain.BackColor = System.Drawing.Color.White;
            this.pnlMain.Controls.Add(this.pnlCenterDockFill);
            this.pnlMain.Controls.Add(this.pnlRight);
            this.pnlMain.Dock = System.Windows.Forms.DockStyle.Fill;
            this.pnlMain.Location = new System.Drawing.Point(150, 6);
            this.pnlMain.Margin = new System.Windows.Forms.Padding(2);
            this.pnlMain.Name = "pnlMain";
            this.pnlMain.Size = new System.Drawing.Size(1026, 568);
            this.pnlMain.TabIndex = 1;
            this.pnlMain.Visible = false;
            // 
            // pnlCenterDockFill
            // 
            this.pnlCenterDockFill.AutoScroll = true;
            this.pnlCenterDockFill.Controls.Add(this.splitContainer1);
            this.pnlCenterDockFill.Dock = System.Windows.Forms.DockStyle.Fill;
            this.pnlCenterDockFill.Location = new System.Drawing.Point(0, 0);
            this.pnlCenterDockFill.Margin = new System.Windows.Forms.Padding(2);
            this.pnlCenterDockFill.Name = "pnlCenterDockFill";
            this.pnlCenterDockFill.Size = new System.Drawing.Size(980, 568);
            this.pnlCenterDockFill.TabIndex = 5;
            // 
            // splitContainer1
            // 
            this.splitContainer1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.splitContainer1.Location = new System.Drawing.Point(0, 0);
            this.splitContainer1.Name = "splitContainer1";
            this.splitContainer1.Orientation = System.Windows.Forms.Orientation.Horizontal;
            // 
            // splitContainer1.Panel1
            // 
            this.splitContainer1.Panel1.Controls.Add(this.pnlVideoInfo);
            this.splitContainer1.Panel1.Controls.Add(this.dataGrid);
            // 
            // splitContainer1.Panel2
            // 
            this.splitContainer1.Panel2.Controls.Add(this.splitContainer2);
            this.splitContainer1.Size = new System.Drawing.Size(980, 568);
            this.splitContainer1.SplitterDistance = 130;
            this.splitContainer1.TabIndex = 5;
            // 
            // pnlVideoInfo
            // 
            this.pnlVideoInfo.AutoScroll = true;
            this.pnlVideoInfo.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(102)))), ((int)(((byte)(205)))), ((int)(((byte)(102)))));
            this.pnlVideoInfo.Controls.Add(this.lblDate);
            this.pnlVideoInfo.Controls.Add(this.lblPath);
            this.pnlVideoInfo.Controls.Add(this.lblID);
            this.pnlVideoInfo.Dock = System.Windows.Forms.DockStyle.Bottom;
            this.pnlVideoInfo.Location = new System.Drawing.Point(0, 97);
            this.pnlVideoInfo.Margin = new System.Windows.Forms.Padding(2);
            this.pnlVideoInfo.Name = "pnlVideoInfo";
            this.pnlVideoInfo.Padding = new System.Windows.Forms.Padding(4);
            this.pnlVideoInfo.Size = new System.Drawing.Size(978, 31);
            this.pnlVideoInfo.TabIndex = 4;
            // 
            // lblDate
            // 
            this.lblDate.AutoSize = true;
            this.lblDate.Dock = System.Windows.Forms.DockStyle.Right;
            this.lblDate.ForeColor = System.Drawing.Color.White;
            this.lblDate.Location = new System.Drawing.Point(941, 4);
            this.lblDate.Margin = new System.Windows.Forms.Padding(8);
            this.lblDate.Name = "lblDate";
            this.lblDate.Size = new System.Drawing.Size(33, 13);
            this.lblDate.TabIndex = 2;
            this.lblDate.Text = "Дата";
            // 
            // lblPath
            // 
            this.lblPath.AutoSize = true;
            this.lblPath.ForeColor = System.Drawing.Color.White;
            this.lblPath.Location = new System.Drawing.Point(65, 4);
            this.lblPath.Margin = new System.Windows.Forms.Padding(8);
            this.lblPath.Name = "lblPath";
            this.lblPath.Size = new System.Drawing.Size(74, 13);
            this.lblPath.TabIndex = 1;
            this.lblPath.Text = "Путь к файлу";
            // 
            // lblID
            // 
            this.lblID.AutoSize = true;
            this.lblID.Dock = System.Windows.Forms.DockStyle.Left;
            this.lblID.ForeColor = System.Drawing.Color.White;
            this.lblID.Location = new System.Drawing.Point(4, 4);
            this.lblID.Margin = new System.Windows.Forms.Padding(8);
            this.lblID.Name = "lblID";
            this.lblID.Size = new System.Drawing.Size(18, 13);
            this.lblID.TabIndex = 0;
            this.lblID.Text = "ID";
            // 
            // dataGrid
            // 
            this.dataGrid.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;
            this.dataGrid.Columns.AddRange(new System.Windows.Forms.DataGridViewColumn[] {
            this.ID,
            this.Path,
            this.Date});
            this.dataGrid.Dock = System.Windows.Forms.DockStyle.Fill;
            this.dataGrid.Location = new System.Drawing.Point(0, 0);
            this.dataGrid.Margin = new System.Windows.Forms.Padding(2);
            this.dataGrid.MultiSelect = false;
            this.dataGrid.Name = "dataGrid";
            this.dataGrid.ReadOnly = true;
            this.dataGrid.RowTemplate.Height = 24;
            this.dataGrid.SelectionMode = System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect;
            this.dataGrid.Size = new System.Drawing.Size(978, 128);
            this.dataGrid.TabIndex = 3;
            this.dataGrid.SelectionChanged += new System.EventHandler(this.dataGrid_SelectionChanged);
            // 
            // ID
            // 
            this.ID.HeaderText = "ID";
            this.ID.Name = "ID";
            this.ID.ReadOnly = true;
            this.ID.Width = 50;
            // 
            // Path
            // 
            this.Path.AutoSizeMode = System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill;
            this.Path.HeaderText = "Путь к файлу";
            this.Path.Name = "Path";
            this.Path.ReadOnly = true;
            // 
            // Date
            // 
            this.Date.HeaderText = "Дата";
            this.Date.Name = "Date";
            this.Date.ReadOnly = true;
            this.Date.Width = 150;
            // 
            // splitContainer2
            // 
            this.splitContainer2.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.splitContainer2.Dock = System.Windows.Forms.DockStyle.Fill;
            this.splitContainer2.Location = new System.Drawing.Point(0, 0);
            this.splitContainer2.Name = "splitContainer2";
            this.splitContainer2.Orientation = System.Windows.Forms.Orientation.Horizontal;
            // 
            // splitContainer2.Panel1
            // 
            this.splitContainer2.Panel1.AutoScroll = true;
            this.splitContainer2.Panel1.Controls.Add(this.btnChartYSave);
            this.splitContainer2.Panel1.Controls.Add(this.btnChartXSave);
            this.splitContainer2.Panel1.Controls.Add(this.chart2);
            this.splitContainer2.Panel1.Controls.Add(this.chart1);
            // 
            // splitContainer2.Panel2
            // 
            this.splitContainer2.Panel2.AutoScroll = true;
            this.splitContainer2.Panel2.Controls.Add(this.pbxColorImage);
            this.splitContainer2.Size = new System.Drawing.Size(980, 434);
            this.splitContainer2.SplitterDistance = 160;
            this.splitContainer2.TabIndex = 0;
            // 
            // btnChartYSave
            // 
            this.btnChartYSave.Image = ((System.Drawing.Image)(resources.GetObject("btnChartYSave.Image")));
            this.btnChartYSave.Location = new System.Drawing.Point(2, 221);
            this.btnChartYSave.Name = "btnChartYSave";
            this.btnChartYSave.Size = new System.Drawing.Size(34, 30);
            this.btnChartYSave.TabIndex = 2;
            this.btnChartYSave.UseVisualStyleBackColor = true;
            this.btnChartYSave.Click += new System.EventHandler(this.btnChartYSave_Click);
            // 
            // btnChartXSave
            // 
            this.btnChartXSave.Image = ((System.Drawing.Image)(resources.GetObject("btnChartXSave.Image")));
            this.btnChartXSave.Location = new System.Drawing.Point(2, 3);
            this.btnChartXSave.Name = "btnChartXSave";
            this.btnChartXSave.Size = new System.Drawing.Size(34, 30);
            this.btnChartXSave.TabIndex = 2;
            this.btnChartXSave.UseVisualStyleBackColor = true;
            this.btnChartXSave.Click += new System.EventHandler(this.btnChartXSave_Click);
            // 
            // chart2
            // 
            chartArea1.Name = "ChartArea1";
            this.chart2.ChartAreas.Add(chartArea1);
            this.chart2.Location = new System.Drawing.Point(2, 216);
            this.chart2.Name = "chart2";
            series1.ChartArea = "ChartArea1";
            series1.ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Spline;
            series1.Color = System.Drawing.Color.Red;
            series1.Name = "Series1";
            series2.ChartArea = "ChartArea1";
            series2.ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Spline;
            series2.Color = System.Drawing.Color.Blue;
            series2.Name = "Series2";
            this.chart2.Series.Add(series1);
            this.chart2.Series.Add(series2);
            this.chart2.Size = new System.Drawing.Size(639, 243);
            this.chart2.TabIndex = 1;
            this.chart2.Text = "chart2";
            this.chart2.MouseDown += new System.Windows.Forms.MouseEventHandler(this.chart1_MouseDown);
            // 
            // chart1
            // 
            chartArea2.Name = "ChartArea1";
            this.chart1.ChartAreas.Add(chartArea2);
            this.chart1.Location = new System.Drawing.Point(2, 2);
            this.chart1.Margin = new System.Windows.Forms.Padding(2);
            this.chart1.Name = "chart1";
            series3.ChartArea = "ChartArea1";
            series3.ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Spline;
            series3.Color = System.Drawing.Color.Red;
            series3.Name = "Series1";
            series4.ChartArea = "ChartArea1";
            series4.ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Spline;
            series4.Color = System.Drawing.Color.Blue;
            series4.Name = "Series2";
            this.chart1.Series.Add(series3);
            this.chart1.Series.Add(series4);
            this.chart1.Size = new System.Drawing.Size(624, 214);
            this.chart1.TabIndex = 0;
            this.chart1.Text = "chart1";
            this.chart1.MouseDown += new System.Windows.Forms.MouseEventHandler(this.chart1_MouseDown);
            // 
            // pbxColorImage
            // 
            this.pbxColorImage.Cursor = System.Windows.Forms.Cursors.Arrow;
            this.pbxColorImage.Location = new System.Drawing.Point(19, 16);
            this.pbxColorImage.Margin = new System.Windows.Forms.Padding(2);
            this.pbxColorImage.Name = "pbxColorImage";
            this.pbxColorImage.Size = new System.Drawing.Size(100, 50);
            this.pbxColorImage.SizeMode = System.Windows.Forms.PictureBoxSizeMode.AutoSize;
            this.pbxColorImage.TabIndex = 0;
            this.pbxColorImage.TabStop = false;
            this.pbxColorImage.MouseClick += new System.Windows.Forms.MouseEventHandler(this.pbxColorImage_MouseClick);
            // 
            // pnlRight
            // 
            this.pnlRight.Controls.Add(this.toolStripRight);
            this.pnlRight.Dock = System.Windows.Forms.DockStyle.Right;
            this.pnlRight.Location = new System.Drawing.Point(980, 0);
            this.pnlRight.Margin = new System.Windows.Forms.Padding(2);
            this.pnlRight.Name = "pnlRight";
            this.pnlRight.Size = new System.Drawing.Size(46, 568);
            this.pnlRight.TabIndex = 1;
            // 
            // toolStripRight
            // 
            this.toolStripRight.Dock = System.Windows.Forms.DockStyle.Fill;
            this.toolStripRight.ImageScalingSize = new System.Drawing.Size(20, 20);
            this.toolStripRight.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.btnFromCamera,
            this.btnFromVideo,
            this.toolStripSeparator6,
            this.btnAnalize,
            this.btnChangeVideo,
            this.btnDeleteRecord,
            this.toolStripSeparator3,
            this.btnNext,
            this.btnRedrawGraph,
            this.btnPrev,
            this.toolStripSeparator4,
            this.txtVibrosy,
            this.btnCalc,
            this.btnSmooth,
            this.btnBackUp,
            this.toolStripSeparator5,
            this.btnSave,
            this.btnXYShow,
            this.btnReport});
            this.toolStripRight.LayoutStyle = System.Windows.Forms.ToolStripLayoutStyle.VerticalStackWithOverflow;
            this.toolStripRight.Location = new System.Drawing.Point(0, 0);
            this.toolStripRight.Name = "toolStripRight";
            this.toolStripRight.Size = new System.Drawing.Size(46, 568);
            this.toolStripRight.TabIndex = 0;
            this.toolStripRight.Text = "Главное меню";
            // 
            // btnFromCamera
            // 
            this.btnFromCamera.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.btnFromCamera.Image = ((System.Drawing.Image)(resources.GetObject("btnFromCamera.Image")));
            this.btnFromCamera.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnFromCamera.Name = "btnFromCamera";
            this.btnFromCamera.Size = new System.Drawing.Size(44, 24);
            this.btnFromCamera.Text = "Из видео камеры";
            this.btnFromCamera.Click += new System.EventHandler(this.btnFromCamera_Click);
            // 
            // btnFromVideo
            // 
            this.btnFromVideo.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.btnFromVideo.Image = ((System.Drawing.Image)(resources.GetObject("btnFromVideo.Image")));
            this.btnFromVideo.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnFromVideo.Name = "btnFromVideo";
            this.btnFromVideo.Size = new System.Drawing.Size(44, 24);
            this.btnFromVideo.Text = "Из видео файла";
            this.btnFromVideo.Click += new System.EventHandler(this.btnFromVideo_Click);
            // 
            // toolStripSeparator6
            // 
            this.toolStripSeparator6.Name = "toolStripSeparator6";
            this.toolStripSeparator6.Size = new System.Drawing.Size(44, 6);
            // 
            // btnAnalize
            // 
            this.btnAnalize.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.btnAnalize.Image = ((System.Drawing.Image)(resources.GetObject("btnAnalize.Image")));
            this.btnAnalize.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnAnalize.Name = "btnAnalize";
            this.btnAnalize.Size = new System.Drawing.Size(44, 24);
            this.btnAnalize.Text = "Анализировать";
            this.btnAnalize.Click += new System.EventHandler(this.btnAnalize_Click);
            // 
            // btnChangeVideo
            // 
            this.btnChangeVideo.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.btnChangeVideo.Image = ((System.Drawing.Image)(resources.GetObject("btnChangeVideo.Image")));
            this.btnChangeVideo.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnChangeVideo.Name = "btnChangeVideo";
            this.btnChangeVideo.Size = new System.Drawing.Size(44, 24);
            this.btnChangeVideo.Text = "Заменить видео файл";
            this.btnChangeVideo.Click += new System.EventHandler(this.btnChangeVideo_Click);
            // 
            // btnDeleteRecord
            // 
            this.btnDeleteRecord.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.btnDeleteRecord.Image = ((System.Drawing.Image)(resources.GetObject("btnDeleteRecord.Image")));
            this.btnDeleteRecord.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnDeleteRecord.Name = "btnDeleteRecord";
            this.btnDeleteRecord.Size = new System.Drawing.Size(44, 24);
            this.btnDeleteRecord.Text = "Удалить запись";
            this.btnDeleteRecord.Click += new System.EventHandler(this.btnDeleteRecord_Click);
            // 
            // toolStripSeparator3
            // 
            this.toolStripSeparator3.Name = "toolStripSeparator3";
            this.toolStripSeparator3.Size = new System.Drawing.Size(44, 6);
            // 
            // btnNext
            // 
            this.btnNext.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.btnNext.Image = ((System.Drawing.Image)(resources.GetObject("btnNext.Image")));
            this.btnNext.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnNext.Name = "btnNext";
            this.btnNext.Size = new System.Drawing.Size(44, 24);
            this.btnNext.Text = "Следующий кадр";
            this.btnNext.Click += new System.EventHandler(this.btnNext_Click);
            // 
            // btnRedrawGraph
            // 
            this.btnRedrawGraph.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.btnRedrawGraph.Image = ((System.Drawing.Image)(resources.GetObject("btnRedrawGraph.Image")));
            this.btnRedrawGraph.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnRedrawGraph.Name = "btnRedrawGraph";
            this.btnRedrawGraph.Size = new System.Drawing.Size(44, 24);
            this.btnRedrawGraph.Text = "Обновить график";
            this.btnRedrawGraph.Click += new System.EventHandler(this.btnRedrawGraph_Click);
            // 
            // btnPrev
            // 
            this.btnPrev.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.btnPrev.Image = ((System.Drawing.Image)(resources.GetObject("btnPrev.Image")));
            this.btnPrev.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnPrev.Name = "btnPrev";
            this.btnPrev.Size = new System.Drawing.Size(44, 24);
            this.btnPrev.Text = "Предыдущий кадр";
            this.btnPrev.Click += new System.EventHandler(this.btnPrev_Click);
            // 
            // toolStripSeparator4
            // 
            this.toolStripSeparator4.Name = "toolStripSeparator4";
            this.toolStripSeparator4.Size = new System.Drawing.Size(44, 6);
            // 
            // txtVibrosy
            // 
            this.txtVibrosy.AutoSize = false;
            this.txtVibrosy.MaxLength = 2;
            this.txtVibrosy.Name = "txtVibrosy";
            this.txtVibrosy.Size = new System.Drawing.Size(24, 23);
            this.txtVibrosy.Text = "20";
            // 
            // btnCalc
            // 
            this.btnCalc.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.btnCalc.Image = ((System.Drawing.Image)(resources.GetObject("btnCalc.Image")));
            this.btnCalc.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnCalc.Name = "btnCalc";
            this.btnCalc.Size = new System.Drawing.Size(44, 24);
            this.btnCalc.Text = "Интерполировать выбросы";
            this.btnCalc.Click += new System.EventHandler(this.btnCalc_Click);
            // 
            // btnSmooth
            // 
            this.btnSmooth.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.btnSmooth.Image = ((System.Drawing.Image)(resources.GetObject("btnSmooth.Image")));
            this.btnSmooth.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnSmooth.Name = "btnSmooth";
            this.btnSmooth.Size = new System.Drawing.Size(44, 24);
            this.btnSmooth.Text = "Сгладить кривую";
            this.btnSmooth.Click += new System.EventHandler(this.btnSmooth_Click);
            // 
            // btnBackUp
            // 
            this.btnBackUp.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.btnBackUp.Image = ((System.Drawing.Image)(resources.GetObject("btnBackUp.Image")));
            this.btnBackUp.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnBackUp.Name = "btnBackUp";
            this.btnBackUp.Size = new System.Drawing.Size(44, 24);
            this.btnBackUp.Text = "Отменить последнюю интерполяцию";
            this.btnBackUp.Click += new System.EventHandler(this.btnBackUp_Click);
            // 
            // toolStripSeparator5
            // 
            this.toolStripSeparator5.Name = "toolStripSeparator5";
            this.toolStripSeparator5.Size = new System.Drawing.Size(44, 6);
            // 
            // btnSave
            // 
            this.btnSave.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.btnSave.Image = ((System.Drawing.Image)(resources.GetObject("btnSave.Image")));
            this.btnSave.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnSave.Name = "btnSave";
            this.btnSave.Size = new System.Drawing.Size(44, 24);
            this.btnSave.Text = "Экспортировать в текстовый файл";
            this.btnSave.Click += new System.EventHandler(this.btnSave_Click);
            // 
            // btnXYShow
            // 
            this.btnXYShow.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.btnXYShow.Image = ((System.Drawing.Image)(resources.GetObject("btnXYShow.Image")));
            this.btnXYShow.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnXYShow.Name = "btnXYShow";
            this.btnXYShow.Size = new System.Drawing.Size(44, 24);
            this.btnXYShow.Text = "Показать XY график";
            this.btnXYShow.Click += new System.EventHandler(this.btnXYShow_Click);
            // 
            // btnReport
            // 
            this.btnReport.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.btnReport.Image = ((System.Drawing.Image)(resources.GetObject("btnReport.Image")));
            this.btnReport.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnReport.Name = "btnReport";
            this.btnReport.Size = new System.Drawing.Size(44, 24);
            this.btnReport.Text = "Сформировать отчет";
            this.btnReport.Click += new System.EventHandler(this.btnReport_Click);
            // 
            // pnlLeft
            // 
            this.pnlLeft.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(102)))), ((int)(((byte)(204)))), ((int)(((byte)(102)))));
            this.pnlLeft.Controls.Add(this.panel1);
            this.pnlLeft.Controls.Add(this.listBoxPatients);
            this.pnlLeft.Controls.Add(this.toolStripPatient);
            this.pnlLeft.Dock = System.Windows.Forms.DockStyle.Left;
            this.pnlLeft.Location = new System.Drawing.Point(0, 6);
            this.pnlLeft.Margin = new System.Windows.Forms.Padding(2);
            this.pnlLeft.Name = "pnlLeft";
            this.pnlLeft.Size = new System.Drawing.Size(150, 568);
            this.pnlLeft.TabIndex = 0;
            // 
            // panel1
            // 
            this.panel1.Controls.Add(this.lblCurrentPatientComments);
            this.panel1.Controls.Add(this.lblCurrentPatientSex);
            this.panel1.Controls.Add(this.lblCurrentPatientBirthDate);
            this.panel1.Controls.Add(this.lblCurrentPatientSecondName);
            this.panel1.Controls.Add(this.lblCurrentPatientName);
            this.panel1.Dock = System.Windows.Forms.DockStyle.Bottom;
            this.panel1.Location = new System.Drawing.Point(0, 372);
            this.panel1.Margin = new System.Windows.Forms.Padding(2);
            this.panel1.Name = "panel1";
            this.panel1.Size = new System.Drawing.Size(150, 196);
            this.panel1.TabIndex = 2;
            // 
            // lblCurrentPatientComments
            // 
            this.lblCurrentPatientComments.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(102)))), ((int)(((byte)(205)))), ((int)(((byte)(102)))));
            this.lblCurrentPatientComments.Enabled = false;
            this.lblCurrentPatientComments.ForeColor = System.Drawing.Color.White;
            this.lblCurrentPatientComments.Location = new System.Drawing.Point(2, 95);
            this.lblCurrentPatientComments.Margin = new System.Windows.Forms.Padding(2);
            this.lblCurrentPatientComments.Multiline = true;
            this.lblCurrentPatientComments.Name = "lblCurrentPatientComments";
            this.lblCurrentPatientComments.ScrollBars = System.Windows.Forms.ScrollBars.Horizontal;
            this.lblCurrentPatientComments.Size = new System.Drawing.Size(144, 68);
            this.lblCurrentPatientComments.TabIndex = 4;
            // 
            // lblCurrentPatientSex
            // 
            this.lblCurrentPatientSex.AutoSize = true;
            this.lblCurrentPatientSex.ForeColor = System.Drawing.Color.White;
            this.lblCurrentPatientSex.Location = new System.Drawing.Point(9, 57);
            this.lblCurrentPatientSex.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.lblCurrentPatientSex.Name = "lblCurrentPatientSex";
            this.lblCurrentPatientSex.Size = new System.Drawing.Size(27, 13);
            this.lblCurrentPatientSex.TabIndex = 5;
            this.lblCurrentPatientSex.Text = "Пол";
            // 
            // lblCurrentPatientBirthDate
            // 
            this.lblCurrentPatientBirthDate.AutoSize = true;
            this.lblCurrentPatientBirthDate.ForeColor = System.Drawing.Color.White;
            this.lblCurrentPatientBirthDate.Location = new System.Drawing.Point(9, 79);
            this.lblCurrentPatientBirthDate.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.lblCurrentPatientBirthDate.Name = "lblCurrentPatientBirthDate";
            this.lblCurrentPatientBirthDate.Size = new System.Drawing.Size(86, 13);
            this.lblCurrentPatientBirthDate.TabIndex = 1;
            this.lblCurrentPatientBirthDate.Text = "Дата рождения";
            // 
            // lblCurrentPatientSecondName
            // 
            this.lblCurrentPatientSecondName.AutoSize = true;
            this.lblCurrentPatientSecondName.ForeColor = System.Drawing.Color.White;
            this.lblCurrentPatientSecondName.Location = new System.Drawing.Point(9, 11);
            this.lblCurrentPatientSecondName.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.lblCurrentPatientSecondName.Name = "lblCurrentPatientSecondName";
            this.lblCurrentPatientSecondName.Size = new System.Drawing.Size(56, 13);
            this.lblCurrentPatientSecondName.TabIndex = 3;
            this.lblCurrentPatientSecondName.Text = "Фамилия";
            // 
            // lblCurrentPatientName
            // 
            this.lblCurrentPatientName.AutoSize = true;
            this.lblCurrentPatientName.ForeColor = System.Drawing.Color.White;
            this.lblCurrentPatientName.Location = new System.Drawing.Point(9, 32);
            this.lblCurrentPatientName.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.lblCurrentPatientName.Name = "lblCurrentPatientName";
            this.lblCurrentPatientName.Size = new System.Drawing.Size(29, 13);
            this.lblCurrentPatientName.TabIndex = 2;
            this.lblCurrentPatientName.Text = "Имя";
            // 
            // listBoxPatients
            // 
            this.listBoxPatients.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(168)))), ((int)(((byte)(208)))), ((int)(((byte)(141)))));
            this.listBoxPatients.Dock = System.Windows.Forms.DockStyle.Fill;
            this.listBoxPatients.FormattingEnabled = true;
            this.listBoxPatients.Location = new System.Drawing.Point(0, 27);
            this.listBoxPatients.Margin = new System.Windows.Forms.Padding(2);
            this.listBoxPatients.Name = "listBoxPatients";
            this.listBoxPatients.Size = new System.Drawing.Size(150, 541);
            this.listBoxPatients.TabIndex = 2;
            this.listBoxPatients.SelectedIndexChanged += new System.EventHandler(this.listBoxPatients_SelectedIndexChanged);
            // 
            // toolStripPatient
            // 
            this.toolStripPatient.ImageScalingSize = new System.Drawing.Size(20, 20);
            this.toolStripPatient.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.btnAddPatient,
            this.toolStripSeparator1,
            this.btnEditPatient,
            this.toolStripSeparator2,
            this.btnDeletePatient});
            this.toolStripPatient.Location = new System.Drawing.Point(0, 0);
            this.toolStripPatient.Name = "toolStripPatient";
            this.toolStripPatient.Size = new System.Drawing.Size(150, 27);
            this.toolStripPatient.TabIndex = 0;
            this.toolStripPatient.Text = "Меню пациентов";
            // 
            // btnAddPatient
            // 
            this.btnAddPatient.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.btnAddPatient.Image = ((System.Drawing.Image)(resources.GetObject("btnAddPatient.Image")));
            this.btnAddPatient.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnAddPatient.Name = "btnAddPatient";
            this.btnAddPatient.Padding = new System.Windows.Forms.Padding(0, 0, 10, 0);
            this.btnAddPatient.Size = new System.Drawing.Size(34, 24);
            this.btnAddPatient.Text = "Новый пациент";
            this.btnAddPatient.Click += new System.EventHandler(this.btnAddPatient_Click);
            // 
            // toolStripSeparator1
            // 
            this.toolStripSeparator1.Name = "toolStripSeparator1";
            this.toolStripSeparator1.Size = new System.Drawing.Size(6, 27);
            // 
            // btnEditPatient
            // 
            this.btnEditPatient.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.btnEditPatient.Enabled = false;
            this.btnEditPatient.Image = ((System.Drawing.Image)(resources.GetObject("btnEditPatient.Image")));
            this.btnEditPatient.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnEditPatient.Name = "btnEditPatient";
            this.btnEditPatient.Padding = new System.Windows.Forms.Padding(0, 0, 10, 0);
            this.btnEditPatient.Size = new System.Drawing.Size(34, 24);
            this.btnEditPatient.Text = "Редактировать";
            this.btnEditPatient.Click += new System.EventHandler(this.btnEditPatient_Click);
            // 
            // toolStripSeparator2
            // 
            this.toolStripSeparator2.Name = "toolStripSeparator2";
            this.toolStripSeparator2.Size = new System.Drawing.Size(6, 27);
            // 
            // btnDeletePatient
            // 
            this.btnDeletePatient.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.btnDeletePatient.Enabled = false;
            this.btnDeletePatient.Image = ((System.Drawing.Image)(resources.GetObject("btnDeletePatient.Image")));
            this.btnDeletePatient.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnDeletePatient.Name = "btnDeletePatient";
            this.btnDeletePatient.Padding = new System.Windows.Forms.Padding(0, 0, 10, 0);
            this.btnDeletePatient.Size = new System.Drawing.Size(34, 24);
            this.btnDeletePatient.Text = "Удалить пациента";
            this.btnDeletePatient.Click += new System.EventHandler(this.btnDeletePatient_Click);
            // 
            // statusStrip1
            // 
            this.statusStrip1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(102)))), ((int)(((byte)(255)))), ((int)(((byte)(102)))));
            this.statusStrip1.ImageScalingSize = new System.Drawing.Size(20, 20);
            this.statusStrip1.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.toolStripStatusLabel1,
            this.statusFrame,
            this.toolStripStatusLabel2,
            this.statusTime,
            this.toolStripStatusLabel3,
            this.statusLeft,
            this.toolStripStatusLabel4,
            this.statusRight});
            this.statusStrip1.Location = new System.Drawing.Point(0, 586);
            this.statusStrip1.Name = "statusStrip1";
            this.statusStrip1.Padding = new System.Windows.Forms.Padding(1, 0, 10, 0);
            this.statusStrip1.Size = new System.Drawing.Size(1181, 22);
            this.statusStrip1.TabIndex = 2;
            this.statusStrip1.Text = "Строка состояния";
            // 
            // toolStripStatusLabel1
            // 
            this.toolStripStatusLabel1.Name = "toolStripStatusLabel1";
            this.toolStripStatusLabel1.Size = new System.Drawing.Size(36, 17);
            this.toolStripStatusLabel1.Text = "Кадр:";
            // 
            // statusFrame
            // 
            this.statusFrame.Name = "statusFrame";
            this.statusFrame.Size = new System.Drawing.Size(13, 17);
            this.statusFrame.Text = "0";
            // 
            // toolStripStatusLabel2
            // 
            this.toolStripStatusLabel2.Name = "toolStripStatusLabel2";
            this.toolStripStatusLabel2.Size = new System.Drawing.Size(45, 17);
            this.toolStripStatusLabel2.Text = "Время:";
            // 
            // statusTime
            // 
            this.statusTime.Name = "statusTime";
            this.statusTime.Size = new System.Drawing.Size(13, 17);
            this.statusTime.Text = "0";
            // 
            // toolStripStatusLabel3
            // 
            this.toolStripStatusLabel3.BackColor = System.Drawing.Color.Red;
            this.toolStripStatusLabel3.Name = "toolStripStatusLabel3";
            this.toolStripStatusLabel3.Size = new System.Drawing.Size(13, 17);
            this.toolStripStatusLabel3.Tag = "";
            this.toolStripStatusLabel3.Text = "  ";
            // 
            // statusLeft
            // 
            this.statusLeft.Name = "statusLeft";
            this.statusLeft.Size = new System.Drawing.Size(13, 17);
            this.statusLeft.Text = "0";
            // 
            // toolStripStatusLabel4
            // 
            this.toolStripStatusLabel4.BackColor = System.Drawing.Color.Blue;
            this.toolStripStatusLabel4.Name = "toolStripStatusLabel4";
            this.toolStripStatusLabel4.Size = new System.Drawing.Size(13, 17);
            this.toolStripStatusLabel4.Text = "  ";
            // 
            // statusRight
            // 
            this.statusRight.Name = "statusRight";
            this.statusRight.Size = new System.Drawing.Size(13, 17);
            this.statusRight.Text = "0";
            // 
            // FormMain
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.ClientSize = new System.Drawing.Size(1181, 608);
            this.Controls.Add(this.statusStrip1);
            this.Controls.Add(this.pnlCenter);
            this.Controls.Add(this.pnlTop);
            this.Icon = ((System.Drawing.Icon)(resources.GetObject("$this.Icon")));
            this.KeyPreview = true;
            this.Margin = new System.Windows.Forms.Padding(2);
            this.Name = "FormMain";
            this.Text = "EyesOffice";
            this.WindowState = System.Windows.Forms.FormWindowState.Maximized;
            this.FormClosing += new System.Windows.Forms.FormClosingEventHandler(this.FormMain_FormClosing);
            this.KeyDown += new System.Windows.Forms.KeyEventHandler(this.FormMain_KeyDown);
            this.Resize += new System.EventHandler(this.FormMain_Resize);
            this.pnlTop.ResumeLayout(false);
            this.pnlTop.PerformLayout();
            this.pnlCenter.ResumeLayout(false);
            this.pnlCameraIndex.ResumeLayout(false);
            this.pnlCameraIndex.PerformLayout();
            this.pnlMain.ResumeLayout(false);
            this.pnlCenterDockFill.ResumeLayout(false);
            this.splitContainer1.Panel1.ResumeLayout(false);
            this.splitContainer1.Panel2.ResumeLayout(false);
            ((System.ComponentModel.ISupportInitialize)(this.splitContainer1)).EndInit();
            this.splitContainer1.ResumeLayout(false);
            this.pnlVideoInfo.ResumeLayout(false);
            this.pnlVideoInfo.PerformLayout();
            ((System.ComponentModel.ISupportInitialize)(this.dataGrid)).EndInit();
            this.splitContainer2.Panel1.ResumeLayout(false);
            this.splitContainer2.Panel2.ResumeLayout(false);
            this.splitContainer2.Panel2.PerformLayout();
            ((System.ComponentModel.ISupportInitialize)(this.splitContainer2)).EndInit();
            this.splitContainer2.ResumeLayout(false);
            ((System.ComponentModel.ISupportInitialize)(this.chart2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxColorImage)).EndInit();
            this.pnlRight.ResumeLayout(false);
            this.pnlRight.PerformLayout();
            this.toolStripRight.ResumeLayout(false);
            this.toolStripRight.PerformLayout();
            this.pnlLeft.ResumeLayout(false);
            this.pnlLeft.PerformLayout();
            this.panel1.ResumeLayout(false);
            this.panel1.PerformLayout();
            this.toolStripPatient.ResumeLayout(false);
            this.toolStripPatient.PerformLayout();
            this.statusStrip1.ResumeLayout(false);
            this.statusStrip1.PerformLayout();
            this.ResumeLayout(false);
            this.PerformLayout();

        }

        #endregion

        private System.Windows.Forms.Panel pnlTop;
        private System.Windows.Forms.Panel pnlCenter;
        private System.Windows.Forms.Label lblLogo;
        private System.Windows.Forms.Panel pnlMain;
        private System.Windows.Forms.Panel pnlLeft;
        private System.Windows.Forms.ToolStrip toolStripPatient;
        private System.Windows.Forms.Panel pnlRight;
        private System.Windows.Forms.ToolStrip toolStripRight;
        private System.Windows.Forms.ToolStripButton btnFromCamera;
        private System.Windows.Forms.ToolStripButton btnFromVideo;
        private System.Windows.Forms.ToolStripSeparator toolStripSeparator3;
        private System.Windows.Forms.ToolStripButton btnNext;
        private System.Windows.Forms.ToolStripButton btnPrev;
        private System.Windows.Forms.ToolStripSeparator toolStripSeparator4;
        private System.Windows.Forms.ToolStripButton btnCalc;
        private System.Windows.Forms.ToolStripButton btnSave;
        private System.Windows.Forms.ToolStripButton btnAddPatient;
        private System.Windows.Forms.ToolStripSeparator toolStripSeparator1;
        private System.Windows.Forms.ToolStripButton btnEditPatient;
        private System.Windows.Forms.ToolStripSeparator toolStripSeparator2;
        private System.Windows.Forms.ToolStripButton btnDeletePatient;
        private System.Windows.Forms.Panel panel1;
        private System.Windows.Forms.ListBox listBoxPatients;
        private System.Windows.Forms.StatusStrip statusStrip1;
        private System.Windows.Forms.TextBox lblCurrentPatientComments;
        private System.Windows.Forms.Label lblCurrentPatientSex;
        private System.Windows.Forms.Label lblCurrentPatientBirthDate;
        private System.Windows.Forms.Label lblCurrentPatientSecondName;
        private System.Windows.Forms.Label lblCurrentPatientName;
        private System.Windows.Forms.Panel pnlCameraIndex;
        private System.Windows.Forms.Label label1;
        private System.Windows.Forms.TextBox txtCameraIndex;
        private System.Windows.Forms.Button btnCameraDetect;
        private System.Windows.Forms.PictureBox pbxColorImage;
        private System.Windows.Forms.DataVisualization.Charting.Chart chart1;
        private System.Windows.Forms.ToolStripStatusLabel toolStripStatusLabel1;
        private System.Windows.Forms.ToolStripStatusLabel statusFrame;
        private System.Windows.Forms.ToolStripStatusLabel toolStripStatusLabel2;
        private System.Windows.Forms.ToolStripStatusLabel statusTime;
        private System.Windows.Forms.ToolStripStatusLabel toolStripStatusLabel3;
        private System.Windows.Forms.ToolStripStatusLabel statusLeft;
        private System.Windows.Forms.ToolStripStatusLabel toolStripStatusLabel4;
        private System.Windows.Forms.ToolStripStatusLabel statusRight;
        private System.Windows.Forms.ToolStripButton btnAnalize;
        private System.Windows.Forms.ToolStripButton btnDeleteRecord;
        private System.Windows.Forms.Button btnBack;
        private System.Windows.Forms.ToolStripButton btnRedrawGraph;
        private System.Windows.Forms.ToolStripButton btnSmooth;
        private System.Windows.Forms.ToolStripButton btnBackUp;
        private System.Windows.Forms.ToolStripSeparator toolStripSeparator5;
        private System.Windows.Forms.ToolStripTextBox txtVibrosy;
        private System.Windows.Forms.ToolStripButton btnXYShow;
        private System.Windows.Forms.Panel pnlCenterDockFill;
        private System.Windows.Forms.SplitContainer splitContainer1;
        private System.Windows.Forms.Panel pnlVideoInfo;
        private System.Windows.Forms.Label lblDate;
        private System.Windows.Forms.Label lblPath;
        private System.Windows.Forms.Label lblID;
        private System.Windows.Forms.DataGridView dataGrid;
        private System.Windows.Forms.DataGridViewTextBoxColumn ID;
        private System.Windows.Forms.DataGridViewTextBoxColumn Path;
        private System.Windows.Forms.DataGridViewTextBoxColumn Date;
        private System.Windows.Forms.SplitContainer splitContainer2;
        private System.Windows.Forms.DataVisualization.Charting.Chart chart2;
        private System.Windows.Forms.ToolStripSeparator toolStripSeparator6;
        private System.Windows.Forms.ToolStripButton btnChangeVideo;
        private System.Windows.Forms.ToolStripButton btnReport;
        private System.Windows.Forms.Button btnChartYSave;
        private System.Windows.Forms.Button btnChartXSave;
    }
}

namespace _SSU_EyesOffice.Forms
{
    partial class FormAddPatient
    {
        /// <summary>
        /// Required designer variable.
        /// </summary>
        private System.ComponentModel.IContainer components = null;

        /// <summary>
        /// Clean up any resources being used.
        /// </summary>
        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region Windows Form Designer generated code

        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FormAddPatient));
            this.lblName = new System.Windows.Forms.Label();
            this.label2 = new System.Windows.Forms.Label();
            this.label3 = new System.Windows.Forms.Label();
            this.label4 = new System.Windows.Forms.Label();
            this.label5 = new System.Windows.Forms.Label();
            this.txtName = new System.Windows.Forms.TextBox();
            this.txtSecondName = new System.Windows.Forms.TextBox();
            this.panel1 = new System.Windows.Forms.Panel();
            this.radioButtonWoman = new System.Windows.Forms.RadioButton();
            this.radioButtonMan = new System.Windows.Forms.RadioButton();
            this.txtComment = new System.Windows.Forms.TextBox();
            this.btnAdd = new System.Windows.Forms.Button();
            this.monthCalendar = new System.Windows.Forms.MonthCalendar();
            this.panel1.SuspendLayout();
            this.SuspendLayout();
            // 
            // lblName
            // 
            this.lblName.AutoSize = true;
            this.lblName.Location = new System.Drawing.Point(9, 32);
            this.lblName.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.lblName.Name = "lblName";
            this.lblName.Size = new System.Drawing.Size(56, 13);
            this.lblName.TabIndex = 0;
            this.lblName.Text = "Фамилия";
            // 
            // label2
            // 
            this.label2.AutoSize = true;
            this.label2.Location = new System.Drawing.Point(10, 59);
            this.label2.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.label2.Name = "label2";
            this.label2.Size = new System.Drawing.Size(29, 13);
            this.label2.TabIndex = 1;
            this.label2.Text = "Имя";
            // 
            // label3
            // 
            this.label3.AutoSize = true;
            this.label3.Location = new System.Drawing.Point(265, 30);
            this.label3.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.label3.Name = "label3";
            this.label3.Size = new System.Drawing.Size(88, 13);
            this.label3.TabIndex = 2;
            this.label3.Text = "День Рождения";
            // 
            // label4
            // 
            this.label4.AutoSize = true;
            this.label4.Location = new System.Drawing.Point(10, 97);
            this.label4.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.label4.Name = "label4";
            this.label4.Size = new System.Drawing.Size(27, 13);
            this.label4.TabIndex = 3;
            this.label4.Text = "Пол";
            // 
            // label5
            // 
            this.label5.AutoSize = true;
            this.label5.Location = new System.Drawing.Point(10, 123);
            this.label5.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(71, 13);
            this.label5.TabIndex = 4;
            this.label5.Text = "Комметарии";
            // 
            // txtName
            // 
            this.txtName.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(224)))), ((int)(((byte)(224)))), ((int)(((byte)(224)))));
            this.txtName.Location = new System.Drawing.Point(106, 58);
            this.txtName.Margin = new System.Windows.Forms.Padding(2);
            this.txtName.Name = "txtName";
            this.txtName.Size = new System.Drawing.Size(137, 20);
            this.txtName.TabIndex = 5;
            // 
            // txtSecondName
            // 
            this.txtSecondName.Location = new System.Drawing.Point(106, 30);
            this.txtSecondName.Margin = new System.Windows.Forms.Padding(2);
            this.txtSecondName.Name = "txtSecondName";
            this.txtSecondName.Size = new System.Drawing.Size(137, 20);
            this.txtSecondName.TabIndex = 7;
            // 
            // panel1
            // 
            this.panel1.Controls.Add(this.radioButtonWoman);
            this.panel1.Controls.Add(this.radioButtonMan);
            this.panel1.Location = new System.Drawing.Point(104, 94);
            this.panel1.Margin = new System.Windows.Forms.Padding(2);
            this.panel1.Name = "panel1";
            this.panel1.Size = new System.Drawing.Size(145, 22);
            this.panel1.TabIndex = 8;
            // 
            // radioButtonWoman
            // 
            this.radioButtonWoman.AutoSize = true;
            this.radioButtonWoman.Location = new System.Drawing.Point(71, 2);
            this.radioButtonWoman.Margin = new System.Windows.Forms.Padding(2);
            this.radioButtonWoman.Name = "radioButtonWoman";
            this.radioButtonWoman.Size = new System.Drawing.Size(72, 17);
            this.radioButtonWoman.TabIndex = 1;
            this.radioButtonWoman.TabStop = true;
            this.radioButtonWoman.Text = "Женский";
            this.radioButtonWoman.UseVisualStyleBackColor = true;
            // 
            // radioButtonMan
            // 
            this.radioButtonMan.AutoSize = true;
            this.radioButtonMan.Location = new System.Drawing.Point(2, 2);
            this.radioButtonMan.Margin = new System.Windows.Forms.Padding(2);
            this.radioButtonMan.Name = "radioButtonMan";
            this.radioButtonMan.Size = new System.Drawing.Size(71, 17);
            this.radioButtonMan.TabIndex = 0;
            this.radioButtonMan.TabStop = true;
            this.radioButtonMan.Text = "Мужской";
            this.radioButtonMan.UseVisualStyleBackColor = true;
            // 
            // txtComment
            // 
            this.txtComment.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(224)))), ((int)(((byte)(224)))), ((int)(((byte)(224)))));
            this.txtComment.Location = new System.Drawing.Point(104, 123);
            this.txtComment.Margin = new System.Windows.Forms.Padding(2);
            this.txtComment.Multiline = true;
            this.txtComment.Name = "txtComment";
            this.txtComment.Size = new System.Drawing.Size(138, 81);
            this.txtComment.TabIndex = 9;
            // 
            // btnAdd
            // 
            this.btnAdd.Location = new System.Drawing.Point(314, 223);
            this.btnAdd.Margin = new System.Windows.Forms.Padding(2);
            this.btnAdd.Name = "btnAdd";
            this.btnAdd.Size = new System.Drawing.Size(92, 35);
            this.btnAdd.TabIndex = 10;
            this.btnAdd.Text = "Создать";
            this.btnAdd.UseVisualStyleBackColor = true;
            this.btnAdd.Click += new System.EventHandler(this.btnAdd_Click);
            // 
            // monthCalendar
            // 
            this.monthCalendar.Location = new System.Drawing.Point(267, 51);
            this.monthCalendar.Margin = new System.Windows.Forms.Padding(7);
            this.monthCalendar.Name = "monthCalendar";
            this.monthCalendar.TabIndex = 11;
            // 
            // FormAddPatient
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(102)))), ((int)(((byte)(205)))), ((int)(((byte)(102)))));
            this.ClientSize = new System.Drawing.Size(442, 268);
            this.Controls.Add(this.monthCalendar);
            this.Controls.Add(this.btnAdd);
            this.Controls.Add(this.txtComment);
            this.Controls.Add(this.panel1);
            this.Controls.Add(this.txtSecondName);
            this.Controls.Add(this.txtName);
            this.Controls.Add(this.label5);
            this.Controls.Add(this.label4);
            this.Controls.Add(this.label3);
            this.Controls.Add(this.label2);
            this.Controls.Add(this.lblName);
            this.Icon = ((System.Drawing.Icon)(resources.GetObject("$this.Icon")));
            this.Margin = new System.Windows.Forms.Padding(2);
            this.Name = "FormAddPatient";
            this.Text = "Новый пациент - EyesStudio";
            this.panel1.ResumeLayout(false);
            this.panel1.PerformLayout();
            this.ResumeLayout(false);
            this.PerformLayout();

        }

        #endregion

        private System.Windows.Forms.Label lblName;
        private System.Windows.Forms.Label label2;
        private System.Windows.Forms.Label label3;
        private System.Windows.Forms.Label label4;
        private System.Windows.Forms.Label label5;
        private System.Windows.Forms.TextBox txtName;
        private System.Windows.Forms.TextBox txtSecondName;
        private System.Windows.Forms.Panel panel1;
        private System.Windows.Forms.RadioButton radioButtonWoman;
        private System.Windows.Forms.RadioButton radioButtonMan;
        private System.Windows.Forms.TextBox txtComment;
        private System.Windows.Forms.Button btnAdd;
        private System.Windows.Forms.MonthCalendar monthCalendar;
    }
}namespace _SSU_EyesOffice.Forms
{
    partial class FormDetect
    {
        /// <summary>
        /// Required designer variable.
        /// </summary>
        private System.ComponentModel.IContainer components = null;

        /// <summary>
        /// Clean up any resources being used.
        /// </summary>
        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region Windows Form Designer generated code

        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            this.components = new System.ComponentModel.Container();
            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FormDetect));
            System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea1 = new System.Windows.Forms.DataVisualization.Charting.ChartArea();
            System.Windows.Forms.DataVisualization.Charting.Series series1 = new System.Windows.Forms.DataVisualization.Charting.Series();
            System.Windows.Forms.DataVisualization.Charting.Series series2 = new System.Windows.Forms.DataVisualization.Charting.Series();
            System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea2 = new System.Windows.Forms.DataVisualization.Charting.ChartArea();
            System.Windows.Forms.DataVisualization.Charting.Series series3 = new System.Windows.Forms.DataVisualization.Charting.Series();
            System.Windows.Forms.DataVisualization.Charting.Series series4 = new System.Windows.Forms.DataVisualization.Charting.Series();
            this.pnlStep1 = new System.Windows.Forms.Panel();
            this.btn_1_Gradient = new System.Windows.Forms.Button();
            this.btn_1_Binarization = new System.Windows.Forms.Button();
            this.pnlStep2 = new System.Windows.Forms.Panel();
            this.label4 = new System.Windows.Forms.Label();
            this.label3 = new System.Windows.Forms.Label();
            this.lblStep2Status = new System.Windows.Forms.Label();
            this.btnStartStop = new System.Windows.Forms.Button();
            this.textBox1 = new System.Windows.Forms.TextBox();
            this.toolStrip1 = new System.Windows.Forms.ToolStrip();
            this.btnLeft = new System.Windows.Forms.ToolStripButton();
            this.btnRight = new System.Windows.Forms.ToolStripButton();
            this.txtCalib = new System.Windows.Forms.ToolStripTextBox();
            this.toolStripLabel2 = new System.Windows.Forms.ToolStripLabel();
            this.btnCalib = new System.Windows.Forms.ToolStripButton();
            this.toolStripLabel1 = new System.Windows.Forms.ToolStripLabel();
            this.tbReduce = new System.Windows.Forms.TrackBar();
            this.pbxStep2 = new System.Windows.Forms.PictureBox();
            this.lblTbReduce = new System.Windows.Forms.Label();
            this.pnlStep3 = new System.Windows.Forms.Panel();
            this.chbxNormilize = new System.Windows.Forms.CheckBox();
            this.chbxSmooth = new System.Windows.Forms.CheckBox();
            this.lblTrackBarStep3 = new System.Windows.Forms.Label();
            this.btnAdvanced = new System.Windows.Forms.Button();
            this.tbStep3 = new System.Windows.Forms.TrackBar();
            this.pbxStep3Bin = new System.Windows.Forms.PictureBox();
            this.pbxStep3Gray = new System.Windows.Forms.PictureBox();
            this.pnlStep3Expand = new System.Windows.Forms.Panel();
            this.chbxNormilizeExpand = new System.Windows.Forms.CheckBox();
            this.chbxSmoothExpand = new System.Windows.Forms.CheckBox();
            this.btnHideExpand = new System.Windows.Forms.Button();
            this.chboxV = new System.Windows.Forms.CheckBox();
            this.chboxB = new System.Windows.Forms.CheckBox();
            this.chboxS = new System.Windows.Forms.CheckBox();
            this.chboxG = new System.Windows.Forms.CheckBox();
            this.chboxH = new System.Windows.Forms.CheckBox();
            this.chboxR = new System.Windows.Forms.CheckBox();
            this.textBox2 = new System.Windows.Forms.TextBox();
            this.label1 = new System.Windows.Forms.Label();
            this.pbxResult = new System.Windows.Forms.PictureBox();
            this.tbVMax = new System.Windows.Forms.TrackBar();
            this.tbSMax = new System.Windows.Forms.TrackBar();
            this.tbBMax = new System.Windows.Forms.TrackBar();
            this.tbHMax = new System.Windows.Forms.TrackBar();
            this.tbGMax = new System.Windows.Forms.TrackBar();
            this.tbVMin = new System.Windows.Forms.TrackBar();
            this.tbRMax = new System.Windows.Forms.TrackBar();
            this.tbSMin = new System.Windows.Forms.TrackBar();
            this.tbBMin = new System.Windows.Forms.TrackBar();
            this.tbHMin = new System.Windows.Forms.TrackBar();
            this.tbGMin = new System.Windows.Forms.TrackBar();
            this.pbxBinV = new System.Windows.Forms.PictureBox();
            this.tbRMin = new System.Windows.Forms.TrackBar();
            this.pbxGrayV = new System.Windows.Forms.PictureBox();
            this.pbxBinB = new System.Windows.Forms.PictureBox();
            this.pbxBinS = new System.Windows.Forms.PictureBox();
            this.pbxGrayB = new System.Windows.Forms.PictureBox();
            this.pbxGrayS = new System.Windows.Forms.PictureBox();
            this.pbxBinG = new System.Windows.Forms.PictureBox();
            this.pbxBinH = new System.Windows.Forms.PictureBox();
            this.pbxGrayG = new System.Windows.Forms.PictureBox();
            this.pbxGrayH = new System.Windows.Forms.PictureBox();
            this.pbxBinR = new System.Windows.Forms.PictureBox();
            this.pbxGrayR = new System.Windows.Forms.PictureBox();
            this.lblLevel = new System.Windows.Forms.Label();
            this.panel6 = new System.Windows.Forms.Panel();
            this.lblLevelIndex = new System.Windows.Forms.Label();
            this.btnNext = new System.Windows.Forms.Button();
            this.btnBack = new System.Windows.Forms.Button();
            this.panel1 = new System.Windows.Forms.Panel();
            this.panel3 = new System.Windows.Forms.Panel();
            this.pnlStep3Gradient = new System.Windows.Forms.Panel();
            this.radioV = new System.Windows.Forms.RadioButton();
            this.radioS = new System.Windows.Forms.RadioButton();
            this.radioH = new System.Windows.Forms.RadioButton();
            this.radioGray = new System.Windows.Forms.RadioButton();
            this.radioB = new System.Windows.Forms.RadioButton();
            this.radioG = new System.Windows.Forms.RadioButton();
            this.radioR = new System.Windows.Forms.RadioButton();
            this.chbxNormalizeGradient = new System.Windows.Forms.CheckBox();
            this.chbxSmoothGradient = new System.Windows.Forms.CheckBox();
            this.textBox4 = new System.Windows.Forms.TextBox();
            this.pbxGradientGray = new System.Windows.Forms.PictureBox();
            this.pbxGradientV = new System.Windows.Forms.PictureBox();
            this.pbxGradientS = new System.Windows.Forms.PictureBox();
            this.pbxGradientH = new System.Windows.Forms.PictureBox();
            this.pbxGradientB = new System.Windows.Forms.PictureBox();
            this.pbxGradientG = new System.Windows.Forms.PictureBox();
            this.pbxGradientR = new System.Windows.Forms.PictureBox();
            this.pnlStep4 = new System.Windows.Forms.Panel();
            this.panel5 = new System.Windows.Forms.Panel();
            this.chart1 = new System.Windows.Forms.DataVisualization.Charting.Chart();
            this.panel4 = new System.Windows.Forms.Panel();
            this.chbxGraphics = new System.Windows.Forms.CheckBox();
            this.chart2 = new System.Windows.Forms.DataVisualization.Charting.Chart();
            this.label5 = new System.Windows.Forms.Label();
            this.txtComments = new System.Windows.Forms.TextBox();
            this.progressBar1 = new System.Windows.Forms.ProgressBar();
            this.groupMeanMedian = new System.Windows.Forms.GroupBox();
            this.radioMediane = new System.Windows.Forms.RadioButton();
            this.radioMean = new System.Windows.Forms.RadioButton();
            this.btnPause = new System.Windows.Forms.Button();
            this.chbxHideImages = new System.Windows.Forms.CheckBox();
            this.lblminutestitle = new System.Windows.Forms.Label();
            this.pbxDetectColor = new System.Windows.Forms.PictureBox();
            this.txtTime = new System.Windows.Forms.TextBox();
            this.pbxDetectBin = new System.Windows.Forms.PictureBox();
            this.btnStartDetect = new System.Windows.Forms.Button();
            this.panel2 = new System.Windows.Forms.Panel();
            this.timer1 = new System.Windows.Forms.Timer(this.components);
            this.pnlStep1.SuspendLayout();
            this.pnlStep2.SuspendLayout();
            this.toolStrip1.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.tbReduce)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxStep2)).BeginInit();
            this.pnlStep3.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.tbStep3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxStep3Bin)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxStep3Gray)).BeginInit();
            this.pnlStep3Expand.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.pbxResult)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbVMax)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbSMax)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbBMax)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbHMax)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbGMax)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbVMin)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbRMax)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbSMin)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbBMin)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbHMin)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbGMin)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxBinV)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbRMin)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGrayV)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxBinB)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxBinS)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGrayB)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGrayS)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxBinG)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxBinH)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGrayG)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGrayH)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxBinR)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGrayR)).BeginInit();
            this.panel6.SuspendLayout();
            this.panel1.SuspendLayout();
            this.panel3.SuspendLayout();
            this.pnlStep3Gradient.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGradientGray)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGradientV)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGradientS)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGradientH)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGradientB)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGradientG)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGradientR)).BeginInit();
            this.pnlStep4.SuspendLayout();
            this.panel5.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).BeginInit();
            this.panel4.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.chart2)).BeginInit();
            this.groupMeanMedian.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.pbxDetectColor)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxDetectBin)).BeginInit();
            this.panel2.SuspendLayout();
            this.SuspendLayout();
            // 
            // pnlStep1
            // 
            this.pnlStep1.Controls.Add(this.btn_1_Gradient);
            this.pnlStep1.Controls.Add(this.btn_1_Binarization);
            this.pnlStep1.Location = new System.Drawing.Point(2, 11);
            this.pnlStep1.Margin = new System.Windows.Forms.Padding(2);
            this.pnlStep1.Name = "pnlStep1";
            this.pnlStep1.Size = new System.Drawing.Size(55, 50);
            this.pnlStep1.TabIndex = 0;
            this.pnlStep1.Visible = false;
            // 
            // btn_1_Gradient
            // 
            this.btn_1_Gradient.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(102)))), ((int)(((byte)(205)))), ((int)(((byte)(102)))));
            this.btn_1_Gradient.Font = new System.Drawing.Font("Microsoft Sans Serif", 10.2F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(204)));
            this.btn_1_Gradient.ForeColor = System.Drawing.Color.White;
            this.btn_1_Gradient.Location = new System.Drawing.Point(134, 12);
            this.btn_1_Gradient.Margin = new System.Windows.Forms.Padding(2);
            this.btn_1_Gradient.Name = "btn_1_Gradient";
            this.btn_1_Gradient.Size = new System.Drawing.Size(119, 58);
            this.btn_1_Gradient.TabIndex = 1;
            this.btn_1_Gradient.Text = "Градиент";
            this.btn_1_Gradient.UseVisualStyleBackColor = false;
            this.btn_1_Gradient.Visible = false;
            this.btn_1_Gradient.Click += new System.EventHandler(this.btn_1_Gradient_Click);
            // 
            // btn_1_Binarization
            // 
            this.btn_1_Binarization.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(102)))), ((int)(((byte)(205)))), ((int)(((byte)(102)))));
            this.btn_1_Binarization.Font = new System.Drawing.Font("Microsoft Sans Serif", 10.2F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(204)));
            this.btn_1_Binarization.ForeColor = System.Drawing.Color.White;
            this.btn_1_Binarization.Location = new System.Drawing.Point(10, 12);
            this.btn_1_Binarization.Margin = new System.Windows.Forms.Padding(2);
            this.btn_1_Binarization.Name = "btn_1_Binarization";
            this.btn_1_Binarization.Size = new System.Drawing.Size(119, 58);
            this.btn_1_Binarization.TabIndex = 0;
            this.btn_1_Binarization.Text = "Бинаризация";
            this.btn_1_Binarization.UseVisualStyleBackColor = false;
            this.btn_1_Binarization.Click += new System.EventHandler(this.btn_1_Binarization_Click);
            // 
            // pnlStep2
            // 
            this.pnlStep2.AutoScroll = true;
            this.pnlStep2.Controls.Add(this.label4);
            this.pnlStep2.Controls.Add(this.label3);
            this.pnlStep2.Controls.Add(this.lblStep2Status);
            this.pnlStep2.Controls.Add(this.btnStartStop);
            this.pnlStep2.Controls.Add(this.textBox1);
            this.pnlStep2.Controls.Add(this.toolStrip1);
            this.pnlStep2.Controls.Add(this.tbReduce);
            this.pnlStep2.Controls.Add(this.pbxStep2);
            this.pnlStep2.Controls.Add(this.lblTbReduce);
            this.pnlStep2.Location = new System.Drawing.Point(99, 120);
            this.pnlStep2.Margin = new System.Windows.Forms.Padding(2);
            this.pnlStep2.Name = "pnlStep2";
            this.pnlStep2.Size = new System.Drawing.Size(114, 74);
            this.pnlStep2.TabIndex = 1;
            this.pnlStep2.Visible = false;
            // 
            // label4
            // 
            this.label4.AutoSize = true;
            this.label4.Location = new System.Drawing.Point(579, 44);
            this.label4.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.label4.Name = "label4";
            this.label4.Size = new System.Drawing.Size(37, 13);
            this.label4.TabIndex = 6;
            this.label4.Text = "раз(а)";
            // 
            // label3
            // 
            this.label3.AutoSize = true;
            this.label3.Location = new System.Drawing.Point(374, 44);
            this.label3.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.label3.Name = "label3";
            this.label3.Size = new System.Drawing.Size(75, 13);
            this.label3.TabIndex = 5;
            this.label3.Text = "Уменьшить в";
            // 
            // lblStep2Status
            // 
            this.lblStep2Status.AutoSize = true;
            this.lblStep2Status.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(102)))), ((int)(((byte)(205)))), ((int)(((byte)(102)))));
            this.lblStep2Status.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(128)))));
            this.lblStep2Status.Location = new System.Drawing.Point(150, 80);
            this.lblStep2Status.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.lblStep2Status.Name = "lblStep2Status";
            this.lblStep2Status.Padding = new System.Windows.Forms.Padding(0, 4, 0, 4);
            this.lblStep2Status.Size = new System.Drawing.Size(0, 21);
            this.lblStep2Status.TabIndex = 4;
            // 
            // btnStartStop
            // 
            this.btnStartStop.Location = new System.Drawing.Point(19, 78);
            this.btnStartStop.Margin = new System.Windows.Forms.Padding(2);
            this.btnStartStop.Name = "btnStartStop";
            this.btnStartStop.Size = new System.Drawing.Size(106, 27);
            this.btnStartStop.TabIndex = 3;
            this.btnStartStop.Text = "Старт / Пауза";
            this.btnStartStop.UseVisualStyleBackColor = true;
            this.btnStartStop.Click += new System.EventHandler(this.btnStartPause_Click);
            // 
            // textBox1
            // 
            this.textBox1.Enabled = false;
            this.textBox1.Location = new System.Drawing.Point(19, 32);
            this.textBox1.Margin = new System.Windows.Forms.Padding(2);
            this.textBox1.Multiline = true;
            this.textBox1.Name = "textBox1";
            this.textBox1.Size = new System.Drawing.Size(341, 42);
            this.textBox1.TabIndex = 2;
            this.textBox1.Text = "Задайте области в которых будут детектироваться глаза. А так же калибровочный отр" +
    "езок";
            // 
            // toolStrip1
            // 
            this.toolStrip1.ImageScalingSize = new System.Drawing.Size(20, 20);
            this.toolStrip1.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.btnLeft,
            this.btnRight,
            this.txtCalib,
            this.toolStripLabel2,
            this.btnCalib,
            this.toolStripLabel1});
            this.toolStrip1.Location = new System.Drawing.Point(0, 0);
            this.toolStrip1.Name = "toolStrip1";
            this.toolStrip1.Size = new System.Drawing.Size(616, 25);
            this.toolStrip1.TabIndex = 1;
            this.toolStrip1.Text = "toolStrip1";
            // 
            // btnLeft
            // 
            this.btnLeft.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text;
            this.btnLeft.Image = ((System.Drawing.Image)(resources.GetObject("btnLeft.Image")));
            this.btnLeft.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnLeft.Name = "btnLeft";
            this.btnLeft.Size = new System.Drawing.Size(47, 22);
            this.btnLeft.Text = "Левый";
            this.btnLeft.Click += new System.EventHandler(this.btnLeft_Click);
            // 
            // btnRight
            // 
            this.btnRight.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text;
            this.btnRight.Image = ((System.Drawing.Image)(resources.GetObject("btnRight.Image")));
            this.btnRight.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnRight.Name = "btnRight";
            this.btnRight.Size = new System.Drawing.Size(55, 22);
            this.btnRight.Text = "Правый";
            this.btnRight.Click += new System.EventHandler(this.btnRight_Click);
            // 
            // txtCalib
            // 
            this.txtCalib.MaxLength = 2;
            this.txtCalib.Name = "txtCalib";
            this.txtCalib.Size = new System.Drawing.Size(24, 25);
            this.txtCalib.Text = "12";
            // 
            // toolStripLabel2
            // 
            this.toolStripLabel2.Name = "toolStripLabel2";
            this.toolStripLabel2.Size = new System.Drawing.Size(33, 22);
            this.toolStripLabel2.Text = "(мм)";
            // 
            // btnCalib
            // 
            this.btnCalib.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text;
            this.btnCalib.Image = ((System.Drawing.Image)(resources.GetObject("btnCalib.Image")));
            this.btnCalib.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.btnCalib.Name = "btnCalib";
            this.btnCalib.Size = new System.Drawing.Size(77, 22);
            this.btnCalib.Text = "Калибровка";
            this.btnCalib.Click += new System.EventHandler(this.btnCalib_Click);
            // 
            // toolStripLabel1
            // 
            this.toolStripLabel1.Name = "toolStripLabel1";
            this.toolStripLabel1.Size = new System.Drawing.Size(0, 22);
            // 
            // tbReduce
            // 
            this.tbReduce.Location = new System.Drawing.Point(473, 42);
            this.tbReduce.Margin = new System.Windows.Forms.Padding(2);
            this.tbReduce.Maximum = 9;
            this.tbReduce.Minimum = 1;
            this.tbReduce.Name = "tbReduce";
            this.tbReduce.Size = new System.Drawing.Size(104, 45);
            this.tbReduce.TabIndex = 1;
            this.tbReduce.Value = 1;
            this.tbReduce.Scroll += new System.EventHandler(this.tbReduce_Scroll_1);
            // 
            // pbxStep2
            // 
            this.pbxStep2.Location = new System.Drawing.Point(19, 110);
            this.pbxStep2.Margin = new System.Windows.Forms.Padding(2);
            this.pbxStep2.Name = "pbxStep2";
            this.pbxStep2.Size = new System.Drawing.Size(100, 50);
            this.pbxStep2.SizeMode = System.Windows.Forms.PictureBoxSizeMode.AutoSize;
            this.pbxStep2.TabIndex = 0;
            this.pbxStep2.TabStop = false;
            this.pbxStep2.MouseDown += new System.Windows.Forms.MouseEventHandler(this.pbxStep2_MouseDown);
            this.pbxStep2.MouseMove += new System.Windows.Forms.MouseEventHandler(this.pbxStep2_MouseMove);
            this.pbxStep2.MouseUp += new System.Windows.Forms.MouseEventHandler(this.pbxStep2_MouseUp);
            // 
            // lblTbReduce
            // 
            this.lblTbReduce.AutoSize = true;
            this.lblTbReduce.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(102)))), ((int)(((byte)(205)))), ((int)(((byte)(102)))));
            this.lblTbReduce.Font = new System.Drawing.Font("Microsoft Sans Serif", 10.2F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(204)));
            this.lblTbReduce.ForeColor = System.Drawing.Color.White;
            this.lblTbReduce.Location = new System.Drawing.Point(459, 44);
            this.lblTbReduce.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.lblTbReduce.Name = "lblTbReduce";
            this.lblTbReduce.Size = new System.Drawing.Size(16, 17);
            this.lblTbReduce.TabIndex = 3;
            this.lblTbReduce.Text = "1";
            // 
            // pnlStep3
            // 
            this.pnlStep3.Controls.Add(this.chbxNormilize);
            this.pnlStep3.Controls.Add(this.chbxSmooth);
            this.pnlStep3.Controls.Add(this.lblTrackBarStep3);
            this.pnlStep3.Controls.Add(this.btnAdvanced);
            this.pnlStep3.Controls.Add(this.tbStep3);
            this.pnlStep3.Controls.Add(this.pbxStep3Bin);
            this.pnlStep3.Controls.Add(this.pbxStep3Gray);
            this.pnlStep3.Location = new System.Drawing.Point(212, 10);
            this.pnlStep3.Margin = new System.Windows.Forms.Padding(2);
            this.pnlStep3.Name = "pnlStep3";
            this.pnlStep3.Size = new System.Drawing.Size(57, 48);
            this.pnlStep3.TabIndex = 2;
            this.pnlStep3.Visible = false;
            // 
            // chbxNormilize
            // 
            this.chbxNormilize.AutoSize = true;
            this.chbxNormilize.Location = new System.Drawing.Point(133, 356);
            this.chbxNormilize.Margin = new System.Windows.Forms.Padding(2);
            this.chbxNormilize.Name = "chbxNormilize";
            this.chbxNormilize.Size = new System.Drawing.Size(102, 17);
            this.chbxNormilize.TabIndex = 5;
            this.chbxNormilize.Text = "Нормализация";
            this.chbxNormilize.UseVisualStyleBackColor = true;
            // 
            // chbxSmooth
            // 
            this.chbxSmooth.AutoSize = true;
            this.chbxSmooth.Location = new System.Drawing.Point(16, 354);
            this.chbxSmooth.Margin = new System.Windows.Forms.Padding(2);
            this.chbxSmooth.Name = "chbxSmooth";
            this.chbxSmooth.Size = new System.Drawing.Size(94, 17);
            this.chbxSmooth.TabIndex = 4;
            this.chbxSmooth.Text = "Сглаживание";
            this.chbxSmooth.UseVisualStyleBackColor = true;
            // 
            // lblTrackBarStep3
            // 
            this.lblTrackBarStep3.AutoSize = true;
            this.lblTrackBarStep3.Location = new System.Drawing.Point(558, 16);
            this.lblTrackBarStep3.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.lblTrackBarStep3.Name = "lblTrackBarStep3";
            this.lblTrackBarStep3.Size = new System.Drawing.Size(13, 13);
            this.lblTrackBarStep3.TabIndex = 3;
            this.lblTrackBarStep3.Text = "0";
            // 
            // btnAdvanced
            // 
            this.btnAdvanced.Location = new System.Drawing.Point(16, 390);
            this.btnAdvanced.Margin = new System.Windows.Forms.Padding(2);
            this.btnAdvanced.Name = "btnAdvanced";
            this.btnAdvanced.Size = new System.Drawing.Size(158, 20);
            this.btnAdvanced.TabIndex = 2;
            this.btnAdvanced.Text = "Расширенные возможности";
            this.btnAdvanced.UseVisualStyleBackColor = true;
            this.btnAdvanced.Click += new System.EventHandler(this.btnAdvanced_Click);
            // 
            // tbStep3
            // 
            this.tbStep3.Location = new System.Drawing.Point(16, 11);
            this.tbStep3.Margin = new System.Windows.Forms.Padding(2);
            this.tbStep3.Maximum = 255;
            this.tbStep3.Name = "tbStep3";
            this.tbStep3.Size = new System.Drawing.Size(544, 45);
            this.tbStep3.TabIndex = 1;
            this.tbStep3.Scroll += new System.EventHandler(this.tbStep3_Scroll);
            // 
            // pbxStep3Bin
            // 
            this.pbxStep3Bin.Location = new System.Drawing.Point(294, 58);
            this.pbxStep3Bin.Margin = new System.Windows.Forms.Padding(2);
            this.pbxStep3Bin.Name = "pbxStep3Bin";
            this.pbxStep3Bin.Size = new System.Drawing.Size(266, 273);
            this.pbxStep3Bin.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxStep3Bin.TabIndex = 0;
            this.pbxStep3Bin.TabStop = false;
            // 
            // pbxStep3Gray
            // 
            this.pbxStep3Gray.Location = new System.Drawing.Point(16, 58);
            this.pbxStep3Gray.Margin = new System.Windows.Forms.Padding(2);
            this.pbxStep3Gray.Name = "pbxStep3Gray";
            this.pbxStep3Gray.Size = new System.Drawing.Size(266, 273);
            this.pbxStep3Gray.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxStep3Gray.TabIndex = 0;
            this.pbxStep3Gray.TabStop = false;
            // 
            // pnlStep3Expand
            // 
            this.pnlStep3Expand.AutoScroll = true;
            this.pnlStep3Expand.Controls.Add(this.chbxNormilizeExpand);
            this.pnlStep3Expand.Controls.Add(this.chbxSmoothExpand);
            this.pnlStep3Expand.Controls.Add(this.btnHideExpand);
            this.pnlStep3Expand.Controls.Add(this.chboxV);
            this.pnlStep3Expand.Controls.Add(this.chboxB);
            this.pnlStep3Expand.Controls.Add(this.chboxS);
            this.pnlStep3Expand.Controls.Add(this.chboxG);
            this.pnlStep3Expand.Controls.Add(this.chboxH);
            this.pnlStep3Expand.Controls.Add(this.chboxR);
            this.pnlStep3Expand.Controls.Add(this.textBox2);
            this.pnlStep3Expand.Controls.Add(this.label1);
            this.pnlStep3Expand.Controls.Add(this.pbxResult);
            this.pnlStep3Expand.Controls.Add(this.tbVMax);
            this.pnlStep3Expand.Controls.Add(this.tbSMax);
            this.pnlStep3Expand.Controls.Add(this.tbBMax);
            this.pnlStep3Expand.Controls.Add(this.tbHMax);
            this.pnlStep3Expand.Controls.Add(this.tbGMax);
            this.pnlStep3Expand.Controls.Add(this.tbVMin);
            this.pnlStep3Expand.Controls.Add(this.tbRMax);
            this.pnlStep3Expand.Controls.Add(this.tbSMin);
            this.pnlStep3Expand.Controls.Add(this.tbBMin);
            this.pnlStep3Expand.Controls.Add(this.tbHMin);
            this.pnlStep3Expand.Controls.Add(this.tbGMin);
            this.pnlStep3Expand.Controls.Add(this.pbxBinV);
            this.pnlStep3Expand.Controls.Add(this.tbRMin);
            this.pnlStep3Expand.Controls.Add(this.pbxGrayV);
            this.pnlStep3Expand.Controls.Add(this.pbxBinB);
            this.pnlStep3Expand.Controls.Add(this.pbxBinS);
            this.pnlStep3Expand.Controls.Add(this.pbxGrayB);
            this.pnlStep3Expand.Controls.Add(this.pbxGrayS);
            this.pnlStep3Expand.Controls.Add(this.pbxBinG);
            this.pnlStep3Expand.Controls.Add(this.pbxBinH);
            this.pnlStep3Expand.Controls.Add(this.pbxGrayG);
            this.pnlStep3Expand.Controls.Add(this.pbxGrayH);
            this.pnlStep3Expand.Controls.Add(this.pbxBinR);
            this.pnlStep3Expand.Controls.Add(this.pbxGrayR);
            this.pnlStep3Expand.Location = new System.Drawing.Point(292, 10);
            this.pnlStep3Expand.Margin = new System.Windows.Forms.Padding(2);
            this.pnlStep3Expand.Name = "pnlStep3Expand";
            this.pnlStep3Expand.Size = new System.Drawing.Size(64, 51);
            this.pnlStep3Expand.TabIndex = 4;
            this.pnlStep3Expand.Visible = false;
            this.pnlStep3Expand.Paint += new System.Windows.Forms.PaintEventHandler(this.pnlStep5_Paint);
            // 
            // chbxNormilizeExpand
            // 
            this.chbxNormilizeExpand.AutoSize = true;
            this.chbxNormilizeExpand.Location = new System.Drawing.Point(708, 318);
            this.chbxNormilizeExpand.Margin = new System.Windows.Forms.Padding(2);
            this.chbxNormilizeExpand.Name = "chbxNormilizeExpand";
            this.chbxNormilizeExpand.Size = new System.Drawing.Size(102, 17);
            this.chbxNormilizeExpand.TabIndex = 10;
            this.chbxNormilizeExpand.Text = "Нормализация";
            this.chbxNormilizeExpand.UseVisualStyleBackColor = true;
            // 
            // chbxSmoothExpand
            // 
            this.chbxSmoothExpand.AutoSize = true;
            this.chbxSmoothExpand.Location = new System.Drawing.Point(709, 297);
            this.chbxSmoothExpand.Margin = new System.Windows.Forms.Padding(2);
            this.chbxSmoothExpand.Name = "chbxSmoothExpand";
            this.chbxSmoothExpand.Size = new System.Drawing.Size(94, 17);
            this.chbxSmoothExpand.TabIndex = 9;
            this.chbxSmoothExpand.Text = "Сглаживание";
            this.chbxSmoothExpand.UseVisualStyleBackColor = true;
            // 
            // btnHideExpand
            // 
            this.btnHideExpand.Location = new System.Drawing.Point(708, 358);
            this.btnHideExpand.Margin = new System.Windows.Forms.Padding(2);
            this.btnHideExpand.Name = "btnHideExpand";
            this.btnHideExpand.Size = new System.Drawing.Size(165, 30);
            this.btnHideExpand.TabIndex = 8;
            this.btnHideExpand.Text = "Назад";
            this.btnHideExpand.UseVisualStyleBackColor = true;
            this.btnHideExpand.Click += new System.EventHandler(this.btnHideExpand_Click);
            // 
            // chboxV
            // 
            this.chboxV.AutoSize = true;
            this.chboxV.Location = new System.Drawing.Point(358, 517);
            this.chboxV.Margin = new System.Windows.Forms.Padding(2);
            this.chboxV.Name = "chboxV";
            this.chboxV.Size = new System.Drawing.Size(33, 17);
            this.chboxV.TabIndex = 7;
            this.chboxV.Text = "V";
            this.chboxV.UseVisualStyleBackColor = true;
            this.chboxV.CheckedChanged += new System.EventHandler(this.chboxV_CheckedChanged);
            // 
            // chboxB
            // 
            this.chboxB.AutoSize = true;
            this.chboxB.Location = new System.Drawing.Point(14, 517);
            this.chboxB.Margin = new System.Windows.Forms.Padding(2);
            this.chboxB.Name = "chboxB";
            this.chboxB.Size = new System.Drawing.Size(33, 17);
            this.chboxB.TabIndex = 7;
            this.chboxB.Text = "B";
            this.chboxB.UseVisualStyleBackColor = true;
            this.chboxB.CheckedChanged += new System.EventHandler(this.chboxB_CheckedChanged);
            // 
            // chboxS
            // 
            this.chboxS.AutoSize = true;
            this.chboxS.Location = new System.Drawing.Point(358, 266);
            this.chboxS.Margin = new System.Windows.Forms.Padding(2);
            this.chboxS.Name = "chboxS";
            this.chboxS.Size = new System.Drawing.Size(33, 17);
            this.chboxS.TabIndex = 7;
            this.chboxS.Text = "S";
            this.chboxS.UseVisualStyleBackColor = true;
            this.chboxS.CheckedChanged += new System.EventHandler(this.chboxS_CheckedChanged);
            // 
            // chboxG
            // 
            this.chboxG.AutoSize = true;
            this.chboxG.Location = new System.Drawing.Point(14, 266);
            this.chboxG.Margin = new System.Windows.Forms.Padding(2);
            this.chboxG.Name = "chboxG";
            this.chboxG.Size = new System.Drawing.Size(34, 17);
            this.chboxG.TabIndex = 7;
            this.chboxG.Text = "G";
            this.chboxG.UseVisualStyleBackColor = true;
            this.chboxG.CheckedChanged += new System.EventHandler(this.chboxG_CheckedChanged);
            // 
            // chboxH
            // 
            this.chboxH.AutoSize = true;
            this.chboxH.Location = new System.Drawing.Point(358, 12);
            this.chboxH.Margin = new System.Windows.Forms.Padding(2);
            this.chboxH.Name = "chboxH";
            this.chboxH.Size = new System.Drawing.Size(34, 17);
            this.chboxH.TabIndex = 7;
            this.chboxH.Text = "H";
            this.chboxH.UseVisualStyleBackColor = true;
            this.chboxH.CheckedChanged += new System.EventHandler(this.chboxH_CheckedChanged);
            // 
            // chboxR
            // 
            this.chboxR.AutoSize = true;
            this.chboxR.Location = new System.Drawing.Point(14, 12);
            this.chboxR.Margin = new System.Windows.Forms.Padding(2);
            this.chboxR.Name = "chboxR";
            this.chboxR.Size = new System.Drawing.Size(34, 17);
            this.chboxR.TabIndex = 7;
            this.chboxR.Text = "R";
            this.chboxR.UseVisualStyleBackColor = true;
            this.chboxR.CheckedChanged += new System.EventHandler(this.chboxR_CheckedChanged);
            // 
            // textBox2
            // 
            this.textBox2.Enabled = false;
            this.textBox2.Location = new System.Drawing.Point(710, 224);
            this.textBox2.Margin = new System.Windows.Forms.Padding(2);
            this.textBox2.Multiline = true;
            this.textBox2.Name = "textBox2";
            this.textBox2.Size = new System.Drawing.Size(166, 50);
            this.textBox2.TabIndex = 5;
            this.textBox2.Text = "Результатом является логическая операция И выбранных компонент";
            // 
            // label1
            // 
            this.label1.AutoSize = true;
            this.label1.Location = new System.Drawing.Point(710, 34);
            this.label1.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(62, 13);
            this.label1.TabIndex = 4;
            this.label1.Text = "Результат:";
            // 
            // pbxResult
            // 
            this.pbxResult.Location = new System.Drawing.Point(710, 53);
            this.pbxResult.Margin = new System.Windows.Forms.Padding(2);
            this.pbxResult.Name = "pbxResult";
            this.pbxResult.Size = new System.Drawing.Size(165, 151);
            this.pbxResult.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxResult.TabIndex = 3;
            this.pbxResult.TabStop = false;
            // 
            // tbVMax
            // 
            this.tbVMax.Location = new System.Drawing.Point(519, 711);
            this.tbVMax.Margin = new System.Windows.Forms.Padding(2);
            this.tbVMax.Maximum = 255;
            this.tbVMax.Name = "tbVMax";
            this.tbVMax.Size = new System.Drawing.Size(157, 45);
            this.tbVMax.TabIndex = 2;
            this.tbVMax.Value = 50;
            // 
            // tbSMax
            // 
            this.tbSMax.Location = new System.Drawing.Point(520, 463);
            this.tbSMax.Margin = new System.Windows.Forms.Padding(2);
            this.tbSMax.Maximum = 255;
            this.tbSMax.Name = "tbSMax";
            this.tbSMax.Size = new System.Drawing.Size(157, 45);
            this.tbSMax.TabIndex = 2;
            this.tbSMax.Value = 50;
            // 
            // tbBMax
            // 
            this.tbBMax.Location = new System.Drawing.Point(174, 713);
            this.tbBMax.Margin = new System.Windows.Forms.Padding(2);
            this.tbBMax.Maximum = 255;
            this.tbBMax.Name = "tbBMax";
            this.tbBMax.Size = new System.Drawing.Size(157, 45);
            this.tbBMax.TabIndex = 2;
            this.tbBMax.Value = 50;
            // 
            // tbHMax
            // 
            this.tbHMax.Location = new System.Drawing.Point(520, 210);
            this.tbHMax.Margin = new System.Windows.Forms.Padding(2);
            this.tbHMax.Maximum = 255;
            this.tbHMax.Name = "tbHMax";
            this.tbHMax.Size = new System.Drawing.Size(157, 45);
            this.tbHMax.TabIndex = 2;
            this.tbHMax.Value = 50;
            // 
            // tbGMax
            // 
            this.tbGMax.Location = new System.Drawing.Point(175, 465);
            this.tbGMax.Margin = new System.Windows.Forms.Padding(2);
            this.tbGMax.Maximum = 255;
            this.tbGMax.Name = "tbGMax";
            this.tbGMax.Size = new System.Drawing.Size(157, 45);
            this.tbGMax.TabIndex = 2;
            this.tbGMax.Value = 50;
            // 
            // tbVMin
            // 
            this.tbVMin.Location = new System.Drawing.Point(518, 505);
            this.tbVMin.Margin = new System.Windows.Forms.Padding(2);
            this.tbVMin.Maximum = 255;
            this.tbVMin.Name = "tbVMin";
            this.tbVMin.Size = new System.Drawing.Size(158, 45);
            this.tbVMin.TabIndex = 1;
            // 
            // tbRMax
            // 
            this.tbRMax.Location = new System.Drawing.Point(175, 211);
            this.tbRMax.Margin = new System.Windows.Forms.Padding(2);
            this.tbRMax.Maximum = 255;
            this.tbRMax.Name = "tbRMax";
            this.tbRMax.Size = new System.Drawing.Size(157, 45);
            this.tbRMax.TabIndex = 2;
            this.tbRMax.Value = 50;
            // 
            // tbSMin
            // 
            this.tbSMin.Location = new System.Drawing.Point(518, 257);
            this.tbSMin.Margin = new System.Windows.Forms.Padding(2);
            this.tbSMin.Maximum = 255;
            this.tbSMin.Name = "tbSMin";
            this.tbSMin.Size = new System.Drawing.Size(158, 45);
            this.tbSMin.TabIndex = 1;
            // 
            // tbBMin
            // 
            this.tbBMin.Location = new System.Drawing.Point(173, 506);
            this.tbBMin.Margin = new System.Windows.Forms.Padding(2);
            this.tbBMin.Maximum = 255;
            this.tbBMin.Name = "tbBMin";
            this.tbBMin.Size = new System.Drawing.Size(158, 45);
            this.tbBMin.TabIndex = 1;
            // 
            // tbHMin
            // 
            this.tbHMin.Location = new System.Drawing.Point(519, 6);
            this.tbHMin.Margin = new System.Windows.Forms.Padding(2);
            this.tbHMin.Maximum = 255;
            this.tbHMin.Name = "tbHMin";
            this.tbHMin.Size = new System.Drawing.Size(158, 45);
            this.tbHMin.TabIndex = 1;
            // 
            // tbGMin
            // 
            this.tbGMin.Location = new System.Drawing.Point(173, 258);
            this.tbGMin.Margin = new System.Windows.Forms.Padding(2);
            this.tbGMin.Maximum = 255;
            this.tbGMin.Name = "tbGMin";
            this.tbGMin.Size = new System.Drawing.Size(158, 45);
            this.tbGMin.TabIndex = 1;
            // 
            // pbxBinV
            // 
            this.pbxBinV.Location = new System.Drawing.Point(519, 552);
            this.pbxBinV.Margin = new System.Windows.Forms.Padding(2);
            this.pbxBinV.Name = "pbxBinV";
            this.pbxBinV.Size = new System.Drawing.Size(157, 153);
            this.pbxBinV.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxBinV.TabIndex = 0;
            this.pbxBinV.TabStop = false;
            // 
            // tbRMin
            // 
            this.tbRMin.Location = new System.Drawing.Point(174, 7);
            this.tbRMin.Margin = new System.Windows.Forms.Padding(2);
            this.tbRMin.Maximum = 255;
            this.tbRMin.Name = "tbRMin";
            this.tbRMin.Size = new System.Drawing.Size(158, 45);
            this.tbRMin.TabIndex = 1;
            // 
            // pbxGrayV
            // 
            this.pbxGrayV.Location = new System.Drawing.Point(358, 552);
            this.pbxGrayV.Margin = new System.Windows.Forms.Padding(2);
            this.pbxGrayV.Name = "pbxGrayV";
            this.pbxGrayV.Size = new System.Drawing.Size(157, 153);
            this.pbxGrayV.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxGrayV.TabIndex = 0;
            this.pbxGrayV.TabStop = false;
            // 
            // pbxBinB
            // 
            this.pbxBinB.Location = new System.Drawing.Point(174, 554);
            this.pbxBinB.Margin = new System.Windows.Forms.Padding(2);
            this.pbxBinB.Name = "pbxBinB";
            this.pbxBinB.Size = new System.Drawing.Size(157, 153);
            this.pbxBinB.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxBinB.TabIndex = 0;
            this.pbxBinB.TabStop = false;
            // 
            // pbxBinS
            // 
            this.pbxBinS.Location = new System.Drawing.Point(520, 305);
            this.pbxBinS.Margin = new System.Windows.Forms.Padding(2);
            this.pbxBinS.Name = "pbxBinS";
            this.pbxBinS.Size = new System.Drawing.Size(157, 153);
            this.pbxBinS.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxBinS.TabIndex = 0;
            this.pbxBinS.TabStop = false;
            // 
            // pbxGrayB
            // 
            this.pbxGrayB.Location = new System.Drawing.Point(13, 554);
            this.pbxGrayB.Margin = new System.Windows.Forms.Padding(2);
            this.pbxGrayB.Name = "pbxGrayB";
            this.pbxGrayB.Size = new System.Drawing.Size(157, 153);
            this.pbxGrayB.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxGrayB.TabIndex = 0;
            this.pbxGrayB.TabStop = false;
            // 
            // pbxGrayS
            // 
            this.pbxGrayS.Location = new System.Drawing.Point(358, 305);
            this.pbxGrayS.Margin = new System.Windows.Forms.Padding(2);
            this.pbxGrayS.Name = "pbxGrayS";
            this.pbxGrayS.Size = new System.Drawing.Size(157, 153);
            this.pbxGrayS.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxGrayS.TabIndex = 0;
            this.pbxGrayS.TabStop = false;
            // 
            // pbxBinG
            // 
            this.pbxBinG.Location = new System.Drawing.Point(175, 306);
            this.pbxBinG.Margin = new System.Windows.Forms.Padding(2);
            this.pbxBinG.Name = "pbxBinG";
            this.pbxBinG.Size = new System.Drawing.Size(157, 153);
            this.pbxBinG.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxBinG.TabIndex = 0;
            this.pbxBinG.TabStop = false;
            // 
            // pbxBinH
            // 
            this.pbxBinH.Location = new System.Drawing.Point(520, 51);
            this.pbxBinH.Margin = new System.Windows.Forms.Padding(2);
            this.pbxBinH.Name = "pbxBinH";
            this.pbxBinH.Size = new System.Drawing.Size(157, 153);
            this.pbxBinH.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxBinH.TabIndex = 0;
            this.pbxBinH.TabStop = false;
            // 
            // pbxGrayG
            // 
            this.pbxGrayG.Location = new System.Drawing.Point(14, 306);
            this.pbxGrayG.Margin = new System.Windows.Forms.Padding(2);
            this.pbxGrayG.Name = "pbxGrayG";
            this.pbxGrayG.Size = new System.Drawing.Size(157, 153);
            this.pbxGrayG.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxGrayG.TabIndex = 0;
            this.pbxGrayG.TabStop = false;
            // 
            // pbxGrayH
            // 
            this.pbxGrayH.Location = new System.Drawing.Point(358, 51);
            this.pbxGrayH.Margin = new System.Windows.Forms.Padding(2);
            this.pbxGrayH.Name = "pbxGrayH";
            this.pbxGrayH.Size = new System.Drawing.Size(157, 153);
            this.pbxGrayH.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxGrayH.TabIndex = 0;
            this.pbxGrayH.TabStop = false;
            // 
            // pbxBinR
            // 
            this.pbxBinR.Location = new System.Drawing.Point(175, 53);
            this.pbxBinR.Margin = new System.Windows.Forms.Padding(2);
            this.pbxBinR.Name = "pbxBinR";
            this.pbxBinR.Size = new System.Drawing.Size(157, 153);
            this.pbxBinR.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxBinR.TabIndex = 0;
            this.pbxBinR.TabStop = false;
            // 
            // pbxGrayR
            // 
            this.pbxGrayR.Location = new System.Drawing.Point(14, 53);
            this.pbxGrayR.Margin = new System.Windows.Forms.Padding(2);
            this.pbxGrayR.Name = "pbxGrayR";
            this.pbxGrayR.Size = new System.Drawing.Size(157, 153);
            this.pbxGrayR.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxGrayR.TabIndex = 0;
            this.pbxGrayR.TabStop = false;
            // 
            // lblLevel
            // 
            this.lblLevel.AutoSize = true;
            this.lblLevel.Font = new System.Drawing.Font("Microsoft Sans Serif", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(204)));
            this.lblLevel.ForeColor = System.Drawing.Color.White;
            this.lblLevel.Location = new System.Drawing.Point(37, 11);
            this.lblLevel.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.lblLevel.Name = "lblLevel";
            this.lblLevel.Size = new System.Drawing.Size(215, 20);
            this.lblLevel.TabIndex = 5;
            this.lblLevel.Text = "Алгоритм детектирования";
            // 
            // panel6
            // 
            this.panel6.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(102)))), ((int)(((byte)(205)))), ((int)(((byte)(102)))));
            this.panel6.Controls.Add(this.lblLevelIndex);
            this.panel6.Controls.Add(this.lblLevel);
            this.panel6.Dock = System.Windows.Forms.DockStyle.Top;
            this.panel6.Location = new System.Drawing.Point(0, 0);
            this.panel6.Margin = new System.Windows.Forms.Padding(2);
            this.panel6.Name = "panel6";
            this.panel6.Size = new System.Drawing.Size(807, 38);
            this.panel6.TabIndex = 6;
            // 
            // lblLevelIndex
            // 
            this.lblLevelIndex.AutoSize = true;
            this.lblLevelIndex.Font = new System.Drawing.Font("Microsoft Sans Serif", 16.2F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(204)));
            this.lblLevelIndex.ForeColor = System.Drawing.Color.White;
            this.lblLevelIndex.Location = new System.Drawing.Point(4, 6);
            this.lblLevelIndex.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.lblLevelIndex.Name = "lblLevelIndex";
            this.lblLevelIndex.Size = new System.Drawing.Size(30, 26);
            this.lblLevelIndex.TabIndex = 6;
            this.lblLevelIndex.Text = "1.";
            // 
            // btnNext
            // 
            this.btnNext.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(102)))), ((int)(((byte)(205)))), ((int)(((byte)(102)))));
            this.btnNext.ForeColor = System.Drawing.Color.White;
            this.btnNext.Location = new System.Drawing.Point(76, 6);
            this.btnNext.Margin = new System.Windows.Forms.Padding(2);
            this.btnNext.Name = "btnNext";
            this.btnNext.Size = new System.Drawing.Size(89, 35);
            this.btnNext.TabIndex = 0;
            this.btnNext.Text = "Далее";
            this.btnNext.UseVisualStyleBackColor = false;
            this.btnNext.Visible = false;
            this.btnNext.Click += new System.EventHandler(this.btnNext_Click);
            // 
            // btnBack
            // 
            this.btnBack.Location = new System.Drawing.Point(9, 11);
            this.btnBack.Margin = new System.Windows.Forms.Padding(2);
            this.btnBack.Name = "btnBack";
            this.btnBack.Size = new System.Drawing.Size(62, 24);
            this.btnBack.TabIndex = 1;
            this.btnBack.Text = "Назад";
            this.btnBack.UseVisualStyleBackColor = true;
            this.btnBack.Visible = false;
            this.btnBack.Click += new System.EventHandler(this.btnBack_Click);
            // 
            // panel1
            // 
            this.panel1.Controls.Add(this.panel3);
            this.panel1.Controls.Add(this.panel2);
            this.panel1.Dock = System.Windows.Forms.DockStyle.Fill;
            this.panel1.Location = new System.Drawing.Point(0, 38);
            this.panel1.Margin = new System.Windows.Forms.Padding(2);
            this.panel1.Name = "panel1";
            this.panel1.Size = new System.Drawing.Size(807, 485);
            this.panel1.TabIndex = 7;
            // 
            // panel3
            // 
            this.panel3.AutoScroll = true;
            this.panel3.Controls.Add(this.pnlStep3Gradient);
            this.panel3.Controls.Add(this.pnlStep4);
            this.panel3.Controls.Add(this.pnlStep2);
            this.panel3.Controls.Add(this.pnlStep1);
            this.panel3.Controls.Add(this.pnlStep3Expand);
            this.panel3.Controls.Add(this.pnlStep3);
            this.panel3.Dock = System.Windows.Forms.DockStyle.Fill;
            this.panel3.Location = new System.Drawing.Point(0, 47);
            this.panel3.Margin = new System.Windows.Forms.Padding(2);
            this.panel3.Name = "panel3";
            this.panel3.Size = new System.Drawing.Size(807, 438);
            this.panel3.TabIndex = 6;
            // 
            // pnlStep3Gradient
            // 
            this.pnlStep3Gradient.AutoScroll = true;
            this.pnlStep3Gradient.Controls.Add(this.radioV);
            this.pnlStep3Gradient.Controls.Add(this.radioS);
            this.pnlStep3Gradient.Controls.Add(this.radioH);
            this.pnlStep3Gradient.Controls.Add(this.radioGray);
            this.pnlStep3Gradient.Controls.Add(this.radioB);
            this.pnlStep3Gradient.Controls.Add(this.radioG);
            this.pnlStep3Gradient.Controls.Add(this.radioR);
            this.pnlStep3Gradient.Controls.Add(this.chbxNormalizeGradient);
            this.pnlStep3Gradient.Controls.Add(this.chbxSmoothGradient);
            this.pnlStep3Gradient.Controls.Add(this.textBox4);
            this.pnlStep3Gradient.Controls.Add(this.pbxGradientGray);
            this.pnlStep3Gradient.Controls.Add(this.pbxGradientV);
            this.pnlStep3Gradient.Controls.Add(this.pbxGradientS);
            this.pnlStep3Gradient.Controls.Add(this.pbxGradientH);
            this.pnlStep3Gradient.Controls.Add(this.pbxGradientB);
            this.pnlStep3Gradient.Controls.Add(this.pbxGradientG);
            this.pnlStep3Gradient.Controls.Add(this.pbxGradientR);
            this.pnlStep3Gradient.Location = new System.Drawing.Point(138, 10);
            this.pnlStep3Gradient.Margin = new System.Windows.Forms.Padding(2);
            this.pnlStep3Gradient.Name = "pnlStep3Gradient";
            this.pnlStep3Gradient.Size = new System.Drawing.Size(61, 47);
            this.pnlStep3Gradient.TabIndex = 5;
            this.pnlStep3Gradient.Visible = false;
            // 
            // radioV
            // 
            this.radioV.AutoSize = true;
            this.radioV.Location = new System.Drawing.Point(358, 369);
            this.radioV.Margin = new System.Windows.Forms.Padding(2);
            this.radioV.Name = "radioV";
            this.radioV.Size = new System.Drawing.Size(32, 17);
            this.radioV.TabIndex = 11;
            this.radioV.Text = "V";
            this.radioV.UseVisualStyleBackColor = true;
            // 
            // radioS
            // 
            this.radioS.AutoSize = true;
            this.radioS.Location = new System.Drawing.Point(186, 369);
            this.radioS.Margin = new System.Windows.Forms.Padding(2);
            this.radioS.Name = "radioS";
            this.radioS.Size = new System.Drawing.Size(32, 17);
            this.radioS.TabIndex = 11;
            this.radioS.Text = "S";
            this.radioS.UseVisualStyleBackColor = true;
            // 
            // radioH
            // 
            this.radioH.AutoSize = true;
            this.radioH.Location = new System.Drawing.Point(13, 369);
            this.radioH.Margin = new System.Windows.Forms.Padding(2);
            this.radioH.Name = "radioH";
            this.radioH.Size = new System.Drawing.Size(33, 17);
            this.radioH.TabIndex = 11;
            this.radioH.Text = "H";
            this.radioH.UseVisualStyleBackColor = true;
            // 
            // radioGray
            // 
            this.radioGray.AutoSize = true;
            this.radioGray.Checked = true;
            this.radioGray.Location = new System.Drawing.Point(530, 12);
            this.radioGray.Margin = new System.Windows.Forms.Padding(2);
            this.radioGray.Name = "radioGray";
            this.radioGray.Size = new System.Drawing.Size(56, 17);
            this.radioGray.TabIndex = 11;
            this.radioGray.TabStop = true;
            this.radioGray.Text = "Серое";
            this.radioGray.UseVisualStyleBackColor = true;
            // 
            // radioB
            // 
            this.radioB.AutoSize = true;
            this.radioB.Location = new System.Drawing.Point(358, 12);
            this.radioB.Margin = new System.Windows.Forms.Padding(2);
            this.radioB.Name = "radioB";
            this.radioB.Size = new System.Drawing.Size(32, 17);
            this.radioB.TabIndex = 11;
            this.radioB.Text = "B";
            this.radioB.UseVisualStyleBackColor = true;
            // 
            // radioG
            // 
            this.radioG.AutoSize = true;
            this.radioG.Location = new System.Drawing.Point(186, 12);
            this.radioG.Margin = new System.Windows.Forms.Padding(2);
            this.radioG.Name = "radioG";
            this.radioG.Size = new System.Drawing.Size(33, 17);
            this.radioG.TabIndex = 11;
            this.radioG.Text = "G";
            this.radioG.UseVisualStyleBackColor = true;
            // 
            // radioR
            // 
            this.radioR.AutoSize = true;
            this.radioR.Location = new System.Drawing.Point(14, 11);
            this.radioR.Margin = new System.Windows.Forms.Padding(2);
            this.radioR.Name = "radioR";
            this.radioR.Size = new System.Drawing.Size(33, 17);
            this.radioR.TabIndex = 11;
            this.radioR.Text = "R";
            this.radioR.UseVisualStyleBackColor = true;
            // 
            // chbxNormalizeGradient
            // 
            this.chbxNormalizeGradient.AutoSize = true;
            this.chbxNormalizeGradient.Location = new System.Drawing.Point(530, 230);
            this.chbxNormalizeGradient.Margin = new System.Windows.Forms.Padding(2);
            this.chbxNormalizeGradient.Name = "chbxNormalizeGradient";
            this.chbxNormalizeGradient.Size = new System.Drawing.Size(102, 17);
            this.chbxNormalizeGradient.TabIndex = 10;
            this.chbxNormalizeGradient.Text = "Нормализация";
            this.chbxNormalizeGradient.UseVisualStyleBackColor = true;
            // 
            // chbxSmoothGradient
            // 
            this.chbxSmoothGradient.AutoSize = true;
            this.chbxSmoothGradient.Location = new System.Drawing.Point(530, 208);
            this.chbxSmoothGradient.Margin = new System.Windows.Forms.Padding(2);
            this.chbxSmoothGradient.Name = "chbxSmoothGradient";
            this.chbxSmoothGradient.Size = new System.Drawing.Size(94, 17);
            this.chbxSmoothGradient.TabIndex = 9;
            this.chbxSmoothGradient.Text = "Сглаживание";
            this.chbxSmoothGradient.UseVisualStyleBackColor = true;
            // 
            // textBox4
            // 
            this.textBox4.Enabled = false;
            this.textBox4.Location = new System.Drawing.Point(530, 259);
            this.textBox4.Margin = new System.Windows.Forms.Padding(2);
            this.textBox4.Multiline = true;
            this.textBox4.Name = "textBox4";
            this.textBox4.Size = new System.Drawing.Size(166, 36);
            this.textBox4.TabIndex = 5;
            this.textBox4.Text = "Выберите изображение с наивысшым контрастом зрачков";
            // 
            // pbxGradientGray
            // 
            this.pbxGradientGray.Location = new System.Drawing.Point(530, 33);
            this.pbxGradientGray.Margin = new System.Windows.Forms.Padding(2);
            this.pbxGradientGray.Name = "pbxGradientGray";
            this.pbxGradientGray.Size = new System.Drawing.Size(165, 151);
            this.pbxGradientGray.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxGradientGray.TabIndex = 3;
            this.pbxGradientGray.TabStop = false;
            // 
            // pbxGradientV
            // 
            this.pbxGradientV.Location = new System.Drawing.Point(358, 211);
            this.pbxGradientV.Margin = new System.Windows.Forms.Padding(2);
            this.pbxGradientV.Name = "pbxGradientV";
            this.pbxGradientV.Size = new System.Drawing.Size(157, 153);
            this.pbxGradientV.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxGradientV.TabIndex = 0;
            this.pbxGradientV.TabStop = false;
            // 
            // pbxGradientS
            // 
            this.pbxGradientS.Location = new System.Drawing.Point(186, 211);
            this.pbxGradientS.Margin = new System.Windows.Forms.Padding(2);
            this.pbxGradientS.Name = "pbxGradientS";
            this.pbxGradientS.Size = new System.Drawing.Size(157, 153);
            this.pbxGradientS.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxGradientS.TabIndex = 0;
            this.pbxGradientS.TabStop = false;
            // 
            // pbxGradientH
            // 
            this.pbxGradientH.Location = new System.Drawing.Point(14, 211);
            this.pbxGradientH.Margin = new System.Windows.Forms.Padding(2);
            this.pbxGradientH.Name = "pbxGradientH";
            this.pbxGradientH.Size = new System.Drawing.Size(157, 153);
            this.pbxGradientH.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxGradientH.TabIndex = 0;
            this.pbxGradientH.TabStop = false;
            // 
            // pbxGradientB
            // 
            this.pbxGradientB.Location = new System.Drawing.Point(358, 33);
            this.pbxGradientB.Margin = new System.Windows.Forms.Padding(2);
            this.pbxGradientB.Name = "pbxGradientB";
            this.pbxGradientB.Size = new System.Drawing.Size(157, 153);
            this.pbxGradientB.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxGradientB.TabIndex = 0;
            this.pbxGradientB.TabStop = false;
            // 
            // pbxGradientG
            // 
            this.pbxGradientG.Location = new System.Drawing.Point(186, 33);
            this.pbxGradientG.Margin = new System.Windows.Forms.Padding(2);
            this.pbxGradientG.Name = "pbxGradientG";
            this.pbxGradientG.Size = new System.Drawing.Size(157, 153);
            this.pbxGradientG.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxGradientG.TabIndex = 0;
            this.pbxGradientG.TabStop = false;
            // 
            // pbxGradientR
            // 
            this.pbxGradientR.Location = new System.Drawing.Point(14, 33);
            this.pbxGradientR.Margin = new System.Windows.Forms.Padding(2);
            this.pbxGradientR.Name = "pbxGradientR";
            this.pbxGradientR.Size = new System.Drawing.Size(157, 153);
            this.pbxGradientR.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxGradientR.TabIndex = 0;
            this.pbxGradientR.TabStop = false;
            // 
            // pnlStep4
            // 
            this.pnlStep4.AutoScroll = true;
            this.pnlStep4.Controls.Add(this.panel5);
            this.pnlStep4.Controls.Add(this.panel4);
            this.pnlStep4.Location = new System.Drawing.Point(370, 8);
            this.pnlStep4.Margin = new System.Windows.Forms.Padding(2);
            this.pnlStep4.Name = "pnlStep4";
            this.pnlStep4.Size = new System.Drawing.Size(392, 354);
            this.pnlStep4.TabIndex = 3;
            this.pnlStep4.Visible = false;
            // 
            // panel5
            // 
            this.panel5.AutoScroll = true;
            this.panel5.Controls.Add(this.chart1);
            this.panel5.Dock = System.Windows.Forms.DockStyle.Bottom;
            this.panel5.Location = new System.Drawing.Point(0, 367);
            this.panel5.Margin = new System.Windows.Forms.Padding(2);
            this.panel5.Name = "panel5";
            this.panel5.Size = new System.Drawing.Size(950, 206);
            this.panel5.TabIndex = 10;
            // 
            // chart1
            // 
            chartArea1.Name = "ChartArea1";
            this.chart1.ChartAreas.Add(chartArea1);
            this.chart1.Location = new System.Drawing.Point(0, 0);
            this.chart1.Margin = new System.Windows.Forms.Padding(2);
            this.chart1.Name = "chart1";
            series1.ChartArea = "ChartArea1";
            series1.ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Spline;
            series1.Color = System.Drawing.Color.Red;
            series1.Name = "Series1";
            series2.ChartArea = "ChartArea1";
            series2.ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Spline;
            series2.Color = System.Drawing.Color.Blue;
            series2.Name = "Series2";
            this.chart1.Series.Add(series1);
            this.chart1.Series.Add(series2);
            this.chart1.Size = new System.Drawing.Size(929, 203);
            this.chart1.TabIndex = 0;
            this.chart1.Text = "chart1";
            // 
            // panel4
            // 
            this.panel4.AutoSize = true;
            this.panel4.Controls.Add(this.chbxGraphics);
            this.panel4.Controls.Add(this.chart2);
            this.panel4.Controls.Add(this.label5);
            this.panel4.Controls.Add(this.txtComments);
            this.panel4.Controls.Add(this.progressBar1);
            this.panel4.Controls.Add(this.groupMeanMedian);
            this.panel4.Controls.Add(this.btnPause);
            this.panel4.Controls.Add(this.chbxHideImages);
            this.panel4.Controls.Add(this.lblminutestitle);
            this.panel4.Controls.Add(this.pbxDetectColor);
            this.panel4.Controls.Add(this.txtTime);
            this.panel4.Controls.Add(this.pbxDetectBin);
            this.panel4.Controls.Add(this.btnStartDetect);
            this.panel4.Location = new System.Drawing.Point(0, 0);
            this.panel4.Margin = new System.Windows.Forms.Padding(2);
            this.panel4.Name = "panel4";
            this.panel4.Size = new System.Drawing.Size(950, 367);
            this.panel4.TabIndex = 9;
            // 
            // chbxGraphics
            // 
            this.chbxGraphics.AutoSize = true;
            this.chbxGraphics.Checked = true;
            this.chbxGraphics.CheckState = System.Windows.Forms.CheckState.Checked;
            this.chbxGraphics.Location = new System.Drawing.Point(566, 345);
            this.chbxGraphics.Margin = new System.Windows.Forms.Padding(2);
            this.chbxGraphics.Name = "chbxGraphics";
            this.chbxGraphics.Size = new System.Drawing.Size(135, 17);
            this.chbxGraphics.TabIndex = 16;
            this.chbxGraphics.Text = "Показывать графики";
            this.chbxGraphics.UseVisualStyleBackColor = true;
            this.chbxGraphics.CheckedChanged += new System.EventHandler(this.chbxGraphics_CheckedChanged);
            // 
            // chart2
            // 
            chartArea2.Name = "ChartArea1";
            this.chart2.ChartAreas.Add(chartArea2);
            this.chart2.Location = new System.Drawing.Point(566, 58);
            this.chart2.Margin = new System.Windows.Forms.Padding(2);
            this.chart2.Name = "chart2";
            series3.ChartArea = "ChartArea1";
            series3.ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Line;
            series3.Color = System.Drawing.Color.Red;
            series3.Name = "Series1";
            series4.ChartArea = "ChartArea1";
            series4.ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Line;
            series4.Color = System.Drawing.Color.Blue;
            series4.Name = "Series2";
            this.chart2.Series.Add(series3);
            this.chart2.Series.Add(series4);
            this.chart2.Size = new System.Drawing.Size(382, 273);
            this.chart2.TabIndex = 15;
            this.chart2.Text = "chart2";
            // 
            // label5
            // 
            this.label5.AutoSize = true;
            this.label5.Location = new System.Drawing.Point(14, 13);
            this.label5.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(80, 13);
            this.label5.TabIndex = 14;
            this.label5.Text = "Комментарии:";
            // 
            // txtComments
            // 
            this.txtComments.Location = new System.Drawing.Point(98, 13);
            this.txtComments.Margin = new System.Windows.Forms.Padding(2);
            this.txtComments.MaxLength = 250;
            this.txtComments.Multiline = true;
            this.txtComments.Name = "txtComments";
            this.txtComments.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;
            this.txtComments.Size = new System.Drawing.Size(192, 38);
            this.txtComments.TabIndex = 13;
            // 
            // progressBar1
            // 
            this.progressBar1.Location = new System.Drawing.Point(160, 346);
            this.progressBar1.Margin = new System.Windows.Forms.Padding(2);
            this.progressBar1.Name = "progressBar1";
            this.progressBar1.Size = new System.Drawing.Size(401, 19);
            this.progressBar1.TabIndex = 12;
            // 
            // groupMeanMedian
            // 
            this.groupMeanMedian.Controls.Add(this.radioMediane);
            this.groupMeanMedian.Controls.Add(this.radioMean);
            this.groupMeanMedian.Location = new System.Drawing.Point(566, 13);
            this.groupMeanMedian.Margin = new System.Windows.Forms.Padding(2);
            this.groupMeanMedian.Name = "groupMeanMedian";
            this.groupMeanMedian.Padding = new System.Windows.Forms.Padding(2);
            this.groupMeanMedian.Size = new System.Drawing.Size(144, 37);
            this.groupMeanMedian.TabIndex = 11;
            this.groupMeanMedian.TabStop = false;
            this.groupMeanMedian.Text = "Способ";
            this.groupMeanMedian.Visible = false;
            // 
            // radioMediane
            // 
            this.radioMediane.AutoSize = true;
            this.radioMediane.Checked = true;
            this.radioMediane.Location = new System.Drawing.Point(4, 17);
            this.radioMediane.Margin = new System.Windows.Forms.Padding(2);
            this.radioMediane.Name = "radioMediane";
            this.radioMediane.Size = new System.Drawing.Size(70, 17);
            this.radioMediane.TabIndex = 1;
            this.radioMediane.TabStop = true;
            this.radioMediane.Text = "Медиана";
            this.radioMediane.UseVisualStyleBackColor = true;
            // 
            // radioMean
            // 
            this.radioMean.AutoSize = true;
            this.radioMean.Location = new System.Drawing.Point(75, 17);
            this.radioMean.Margin = new System.Windows.Forms.Padding(2);
            this.radioMean.Name = "radioMean";
            this.radioMean.Size = new System.Drawing.Size(68, 17);
            this.radioMean.TabIndex = 0;
            this.radioMean.Text = "Среднее";
            this.radioMean.UseVisualStyleBackColor = true;
            // 
            // btnPause
            // 
            this.btnPause.Location = new System.Drawing.Point(476, 15);
            this.btnPause.Margin = new System.Windows.Forms.Padding(2);
            this.btnPause.Name = "btnPause";
            this.btnPause.Size = new System.Drawing.Size(86, 37);
            this.btnPause.TabIndex = 10;
            this.btnPause.Text = "Пауза";
            this.btnPause.UseVisualStyleBackColor = true;
            this.btnPause.Click += new System.EventHandler(this.btnPause_Click);
            // 
            // chbxHideImages
            // 
            this.chbxHideImages.AutoSize = true;
            this.chbxHideImages.Location = new System.Drawing.Point(16, 345);
            this.chbxHideImages.Margin = new System.Windows.Forms.Padding(2);
            this.chbxHideImages.Name = "chbxHideImages";
            this.chbxHideImages.Size = new System.Drawing.Size(135, 17);
            this.chbxHideImages.TabIndex = 9;
            this.chbxHideImages.Text = "Скрыть изображения";
            this.chbxHideImages.UseVisualStyleBackColor = true;
            this.chbxHideImages.CheckedChanged += new System.EventHandler(this.chbxHideImages_CheckedChanged);
            // 
            // lblminutestitle
            // 
            this.lblminutestitle.AutoSize = true;
            this.lblminutestitle.Location = new System.Drawing.Point(349, 24);
            this.lblminutestitle.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.lblminutestitle.Name = "lblminutestitle";
            this.lblminutestitle.Size = new System.Drawing.Size(27, 13);
            this.lblminutestitle.TabIndex = 8;
            this.lblminutestitle.Text = "мин";
            this.lblminutestitle.Visible = false;
            // 
            // pbxDetectColor
            // 
            this.pbxDetectColor.Location = new System.Drawing.Point(16, 58);
            this.pbxDetectColor.Margin = new System.Windows.Forms.Padding(2);
            this.pbxDetectColor.Name = "pbxDetectColor";
            this.pbxDetectColor.Size = new System.Drawing.Size(266, 273);
            this.pbxDetectColor.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxDetectColor.TabIndex = 0;
            this.pbxDetectColor.TabStop = false;
            // 
            // txtTime
            // 
            this.txtTime.Location = new System.Drawing.Point(295, 23);
            this.txtTime.Margin = new System.Windows.Forms.Padding(2);
            this.txtTime.MaxLength = 2;
            this.txtTime.Name = "txtTime";
            this.txtTime.Size = new System.Drawing.Size(49, 20);
            this.txtTime.TabIndex = 7;
            this.txtTime.Visible = false;
            // 
            // pbxDetectBin
            // 
            this.pbxDetectBin.Location = new System.Drawing.Point(295, 58);
            this.pbxDetectBin.Margin = new System.Windows.Forms.Padding(2);
            this.pbxDetectBin.Name = "pbxDetectBin";
            this.pbxDetectBin.Size = new System.Drawing.Size(266, 273);
            this.pbxDetectBin.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
            this.pbxDetectBin.TabIndex = 0;
            this.pbxDetectBin.TabStop = false;
            // 
            // btnStartDetect
            // 
            this.btnStartDetect.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(102)))), ((int)(((byte)(205)))), ((int)(((byte)(102)))));
            this.btnStartDetect.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(128)))));
            this.btnStartDetect.Location = new System.Drawing.Point(383, 15);
            this.btnStartDetect.Margin = new System.Windows.Forms.Padding(2);
            this.btnStartDetect.Name = "btnStartDetect";
            this.btnStartDetect.Size = new System.Drawing.Size(85, 37);
            this.btnStartDetect.TabIndex = 6;
            this.btnStartDetect.Text = "Начать";
            this.btnStartDetect.UseVisualStyleBackColor = false;
            this.btnStartDetect.Click += new System.EventHandler(this.btnStartDetect_Click);
            // 
            // panel2
            // 
            this.panel2.Controls.Add(this.btnNext);
            this.panel2.Controls.Add(this.btnBack);
            this.panel2.Dock = System.Windows.Forms.DockStyle.Top;
            this.panel2.Location = new System.Drawing.Point(0, 0);
            this.panel2.Margin = new System.Windows.Forms.Padding(2);
            this.panel2.Name = "panel2";
            this.panel2.Size = new System.Drawing.Size(807, 47);
            this.panel2.TabIndex = 5;
            // 
            // timer1
            // 
            this.timer1.Tick += new System.EventHandler(this.timer1_Tick);
            // 
            // FormDetect
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.ClientSize = new System.Drawing.Size(807, 523);
            this.Controls.Add(this.panel1);
            this.Controls.Add(this.panel6);
            this.Icon = ((System.Drawing.Icon)(resources.GetObject("$this.Icon")));
            this.Margin = new System.Windows.Forms.Padding(2);
            this.Name = "FormDetect";
            this.Text = "Детектирование - EyesStudio";
            this.WindowState = System.Windows.Forms.FormWindowState.Maximized;
            this.FormClosing += new System.Windows.Forms.FormClosingEventHandler(this.FormDetect_FormClosing);
            this.Load += new System.EventHandler(this.FormDetect_Load);
            this.pnlStep1.ResumeLayout(false);
            this.pnlStep2.ResumeLayout(false);
            this.pnlStep2.PerformLayout();
            this.toolStrip1.ResumeLayout(false);
            this.toolStrip1.PerformLayout();
            ((System.ComponentModel.ISupportInitialize)(this.tbReduce)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxStep2)).EndInit();
            this.pnlStep3.ResumeLayout(false);
            this.pnlStep3.PerformLayout();
            ((System.ComponentModel.ISupportInitialize)(this.tbStep3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxStep3Bin)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxStep3Gray)).EndInit();
            this.pnlStep3Expand.ResumeLayout(false);
            this.pnlStep3Expand.PerformLayout();
            ((System.ComponentModel.ISupportInitialize)(this.pbxResult)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbVMax)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbSMax)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbBMax)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbHMax)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbGMax)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbVMin)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbRMax)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbSMin)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbBMin)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbHMin)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbGMin)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxBinV)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.tbRMin)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGrayV)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxBinB)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxBinS)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGrayB)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGrayS)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxBinG)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxBinH)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGrayG)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGrayH)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxBinR)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGrayR)).EndInit();
            this.panel6.ResumeLayout(false);
            this.panel6.PerformLayout();
            this.panel1.ResumeLayout(false);
            this.panel3.ResumeLayout(false);
            this.pnlStep3Gradient.ResumeLayout(false);
            this.pnlStep3Gradient.PerformLayout();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGradientGray)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGradientV)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGradientS)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGradientH)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGradientB)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGradientG)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxGradientR)).EndInit();
            this.pnlStep4.ResumeLayout(false);
            this.pnlStep4.PerformLayout();
            this.panel5.ResumeLayout(false);
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).EndInit();
            this.panel4.ResumeLayout(false);
            this.panel4.PerformLayout();
            ((System.ComponentModel.ISupportInitialize)(this.chart2)).EndInit();
            this.groupMeanMedian.ResumeLayout(false);
            this.groupMeanMedian.PerformLayout();
            ((System.ComponentModel.ISupportInitialize)(this.pbxDetectColor)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.pbxDetectBin)).EndInit();
            this.panel2.ResumeLayout(false);
            this.ResumeLayout(false);

        }

        #endregion

        private System.Windows.Forms.Panel pnlStep1;
        private System.Windows.Forms.Button btn_1_Gradient;
        private System.Windows.Forms.Button btn_1_Binarization;
        private System.Windows.Forms.Panel pnlStep2;
        private System.Windows.Forms.Panel pnlStep3;
        private System.Windows.Forms.Panel pnlStep3Expand;
        private System.Windows.Forms.Label lblLevel;
        private System.Windows.Forms.Panel panel6;
        private System.Windows.Forms.Label lblLevelIndex;
        private System.Windows.Forms.Button btnNext;
        private System.Windows.Forms.Button btnBack;
        private System.Windows.Forms.Panel panel1;
        private System.Windows.Forms.Panel panel2;
        private System.Windows.Forms.Panel panel3;
        private System.Windows.Forms.Button btnStartStop;
        private System.Windows.Forms.TextBox textBox1;
        private System.Windows.Forms.ToolStrip toolStrip1;
        private System.Windows.Forms.ToolStripButton btnLeft;
        private System.Windows.Forms.ToolStripButton btnRight;
        private System.Windows.Forms.ToolStripTextBox txtCalib;
        private System.Windows.Forms.ToolStripLabel toolStripLabel2;
        private System.Windows.Forms.ToolStripButton btnCalib;
        private System.Windows.Forms.ToolStripLabel toolStripLabel1;
        private System.Windows.Forms.PictureBox pbxStep2;
        private System.Windows.Forms.Label lblStep2Status;
        private System.Windows.Forms.Timer timer1;
        private System.Windows.Forms.CheckBox chboxV;
        private System.Windows.Forms.CheckBox chboxB;
        private System.Windows.Forms.CheckBox chboxS;
        private System.Windows.Forms.CheckBox chboxG;
        private System.Windows.Forms.CheckBox chboxH;
        private System.Windows.Forms.CheckBox chboxR;
        private System.Windows.Forms.TextBox textBox2;
        private System.Windows.Forms.Label label1;
        private System.Windows.Forms.PictureBox pbxResult;
        private System.Windows.Forms.TrackBar tbVMax;
        private System.Windows.Forms.TrackBar tbSMax;
        private System.Windows.Forms.TrackBar tbBMax;
        private System.Windows.Forms.TrackBar tbHMax;
        private System.Windows.Forms.TrackBar tbGMax;
        private System.Windows.Forms.TrackBar tbVMin;
        private System.Windows.Forms.TrackBar tbRMax;
        private System.Windows.Forms.TrackBar tbSMin;
        private System.Windows.Forms.TrackBar tbBMin;
        private System.Windows.Forms.TrackBar tbHMin;
        private System.Windows.Forms.TrackBar tbGMin;
        private System.Windows.Forms.PictureBox pbxBinV;
        private System.Windows.Forms.TrackBar tbRMin;
        private System.Windows.Forms.PictureBox pbxGrayV;
        private System.Windows.Forms.PictureBox pbxBinB;
        private System.Windows.Forms.PictureBox pbxBinS;
        private System.Windows.Forms.PictureBox pbxGrayB;
        private System.Windows.Forms.PictureBox pbxGrayS;
        private System.Windows.Forms.PictureBox pbxBinG;
        private System.Windows.Forms.PictureBox pbxBinH;
        private System.Windows.Forms.PictureBox pbxGrayG;
        private System.Windows.Forms.PictureBox pbxGrayH;
        private System.Windows.Forms.PictureBox pbxBinR;
        private System.Windows.Forms.PictureBox pbxGrayR;
        private System.Windows.Forms.TrackBar tbStep3;
        private System.Windows.Forms.PictureBox pbxStep3Bin;
        private System.Windows.Forms.PictureBox pbxStep3Gray;
        private System.Windows.Forms.Button btnHideExpand;
        private System.Windows.Forms.Button btnAdvanced;
        private System.Windows.Forms.Label lblTrackBarStep3;
        private System.Windows.Forms.CheckBox chbxNormilize;
        private System.Windows.Forms.CheckBox chbxSmooth;
        private System.Windows.Forms.CheckBox chbxNormilizeExpand;
        private System.Windows.Forms.CheckBox chbxSmoothExpand;
        private System.Windows.Forms.Panel pnlStep4;
        private System.Windows.Forms.Panel panel5;
        private System.Windows.Forms.Panel panel4;
        private System.Windows.Forms.CheckBox chbxHideImages;
        private System.Windows.Forms.TrackBar tbReduce;
        private System.Windows.Forms.Label lblminutestitle;
        private System.Windows.Forms.PictureBox pbxDetectColor;
        private System.Windows.Forms.TextBox txtTime;
        private System.Windows.Forms.PictureBox pbxDetectBin;
        private System.Windows.Forms.Button btnStartDetect;
        private System.Windows.Forms.Label lblTbReduce;
        private System.Windows.Forms.Button btnPause;
        private System.Windows.Forms.GroupBox groupMeanMedian;
        private System.Windows.Forms.RadioButton radioMediane;
        private System.Windows.Forms.RadioButton radioMean;
        private System.Windows.Forms.ProgressBar progressBar1;
        private System.Windows.Forms.Panel pnlStep3Gradient;
        private System.Windows.Forms.RadioButton radioR;
        private System.Windows.Forms.CheckBox chbxNormalizeGradient;
        private System.Windows.Forms.CheckBox chbxSmoothGradient;
        private System.Windows.Forms.TextBox textBox4;
        private System.Windows.Forms.PictureBox pbxGradientGray;
        private System.Windows.Forms.PictureBox pbxGradientV;
        private System.Windows.Forms.PictureBox pbxGradientS;
        private System.Windows.Forms.PictureBox pbxGradientH;
        private System.Windows.Forms.PictureBox pbxGradientB;
        private System.Windows.Forms.PictureBox pbxGradientG;
        private System.Windows.Forms.PictureBox pbxGradientR;
        private System.Windows.Forms.RadioButton radioV;
        private System.Windows.Forms.RadioButton radioS;
        private System.Windows.Forms.RadioButton radioH;
        private System.Windows.Forms.RadioButton radioGray;
        private System.Windows.Forms.RadioButton radioB;
        private System.Windows.Forms.RadioButton radioG;
        private System.Windows.Forms.Label label3;
        private System.Windows.Forms.Label label4;
        private System.Windows.Forms.Label label5;
        private System.Windows.Forms.TextBox txtComments;
        private System.Windows.Forms.DataVisualization.Charting.Chart chart1;
        private System.Windows.Forms.DataVisualization.Charting.Chart chart2;
        private System.Windows.Forms.CheckBox chbxGraphics;
    }
}namespace _SSU_EyesOffice.Forms
{
    partial class FormEditPatient
    {
        /// <summary>
        /// Required designer variable.
        /// </summary>
        private System.ComponentModel.IContainer components = null;

        /// <summary>
        /// Clean up any resources being used.
        /// </summary>
        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region Windows Form Designer generated code

        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FormEditPatient));
            this.monthCalendar = new System.Windows.Forms.MonthCalendar();
            this.btnAdd = new System.Windows.Forms.Button();
            this.txtComment = new System.Windows.Forms.TextBox();
            this.panel1 = new System.Windows.Forms.Panel();
            this.radioButtonWoman = new System.Windows.Forms.RadioButton();
            this.radioButtonMan = new System.Windows.Forms.RadioButton();
            this.txtSecondName = new System.Windows.Forms.TextBox();
            this.txtName = new System.Windows.Forms.TextBox();
            this.label5 = new System.Windows.Forms.Label();
            this.label4 = new System.Windows.Forms.Label();
            this.label3 = new System.Windows.Forms.Label();
            this.label2 = new System.Windows.Forms.Label();
            this.lblName = new System.Windows.Forms.Label();
            this.panel1.SuspendLayout();
            this.SuspendLayout();
            // 
            // monthCalendar
            // 
            this.monthCalendar.Location = new System.Drawing.Point(278, 50);
            this.monthCalendar.Margin = new System.Windows.Forms.Padding(7);
            this.monthCalendar.Name = "monthCalendar";
            this.monthCalendar.TabIndex = 22;
            // 
            // btnAdd
            // 
            this.btnAdd.Location = new System.Drawing.Point(325, 223);
            this.btnAdd.Margin = new System.Windows.Forms.Padding(2);
            this.btnAdd.Name = "btnAdd";
            this.btnAdd.Size = new System.Drawing.Size(92, 35);
            this.btnAdd.TabIndex = 21;
            this.btnAdd.Text = "Сохранить";
            this.btnAdd.UseVisualStyleBackColor = true;
            this.btnAdd.Click += new System.EventHandler(this.btnAdd_Click);
            // 
            // txtComment
            // 
            this.txtComment.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(224)))), ((int)(((byte)(224)))), ((int)(((byte)(224)))));
            this.txtComment.Location = new System.Drawing.Point(116, 122);
            this.txtComment.Margin = new System.Windows.Forms.Padding(2);
            this.txtComment.Multiline = true;
            this.txtComment.Name = "txtComment";
            this.txtComment.Size = new System.Drawing.Size(138, 81);
            this.txtComment.TabIndex = 20;
            // 
            // panel1
            // 
            this.panel1.Controls.Add(this.radioButtonWoman);
            this.panel1.Controls.Add(this.radioButtonMan);
            this.panel1.Location = new System.Drawing.Point(116, 93);
            this.panel1.Margin = new System.Windows.Forms.Padding(2);
            this.panel1.Name = "panel1";
            this.panel1.Size = new System.Drawing.Size(145, 22);
            this.panel1.TabIndex = 19;
            // 
            // radioButtonWoman
            // 
            this.radioButtonWoman.AutoSize = true;
            this.radioButtonWoman.Location = new System.Drawing.Point(71, 2);
            this.radioButtonWoman.Margin = new System.Windows.Forms.Padding(2);
            this.radioButtonWoman.Name = "radioButtonWoman";
            this.radioButtonWoman.Size = new System.Drawing.Size(72, 17);
            this.radioButtonWoman.TabIndex = 1;
            this.radioButtonWoman.TabStop = true;
            this.radioButtonWoman.Text = "Женский";
            this.radioButtonWoman.UseVisualStyleBackColor = true;
            // 
            // radioButtonMan
            // 
            this.radioButtonMan.AutoSize = true;
            this.radioButtonMan.Location = new System.Drawing.Point(2, 2);
            this.radioButtonMan.Margin = new System.Windows.Forms.Padding(2);
            this.radioButtonMan.Name = "radioButtonMan";
            this.radioButtonMan.Size = new System.Drawing.Size(71, 17);
            this.radioButtonMan.TabIndex = 0;
            this.radioButtonMan.TabStop = true;
            this.radioButtonMan.Text = "Мужской";
            this.radioButtonMan.UseVisualStyleBackColor = true;
            // 
            // txtSecondName
            // 
            this.txtSecondName.Location = new System.Drawing.Point(117, 29);
            this.txtSecondName.Margin = new System.Windows.Forms.Padding(2);
            this.txtSecondName.Name = "txtSecondName";
            this.txtSecondName.Size = new System.Drawing.Size(137, 20);
            this.txtSecondName.TabIndex = 18;
            // 
            // txtName
            // 
            this.txtName.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(224)))), ((int)(((byte)(224)))), ((int)(((byte)(224)))));
            this.txtName.Location = new System.Drawing.Point(117, 57);
            this.txtName.Margin = new System.Windows.Forms.Padding(2);
            this.txtName.Name = "txtName";
            this.txtName.Size = new System.Drawing.Size(137, 20);
            this.txtName.TabIndex = 17;
            // 
            // label5
            // 
            this.label5.AutoSize = true;
            this.label5.Location = new System.Drawing.Point(21, 122);
            this.label5.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(71, 13);
            this.label5.TabIndex = 16;
            this.label5.Text = "Комметарии";
            // 
            // label4
            // 
            this.label4.AutoSize = true;
            this.label4.Location = new System.Drawing.Point(21, 96);
            this.label4.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.label4.Name = "label4";
            this.label4.Size = new System.Drawing.Size(27, 13);
            this.label4.TabIndex = 15;
            this.label4.Text = "Пол";
            // 
            // label3
            // 
            this.label3.AutoSize = true;
            this.label3.Location = new System.Drawing.Point(276, 29);
            this.label3.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.label3.Name = "label3";
            this.label3.Size = new System.Drawing.Size(88, 13);
            this.label3.TabIndex = 14;
            this.label3.Text = "День Рождения";
            // 
            // label2
            // 
            this.label2.AutoSize = true;
            this.label2.Location = new System.Drawing.Point(21, 58);
            this.label2.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.label2.Name = "label2";
            this.label2.Size = new System.Drawing.Size(29, 13);
            this.label2.TabIndex = 13;
            this.label2.Text = "Имя";
            // 
            // lblName
            // 
            this.lblName.AutoSize = true;
            this.lblName.Location = new System.Drawing.Point(20, 31);
            this.lblName.Margin = new System.Windows.Forms.Padding(2, 0, 2, 0);
            this.lblName.Name = "lblName";
            this.lblName.Size = new System.Drawing.Size(56, 13);
            this.lblName.TabIndex = 12;
            this.lblName.Text = "Фамилия";
            // 
            // FormEditPatient
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(102)))), ((int)(((byte)(205)))), ((int)(((byte)(102)))));
            this.ClientSize = new System.Drawing.Size(466, 287);
            this.Controls.Add(this.monthCalendar);
            this.Controls.Add(this.btnAdd);
            this.Controls.Add(this.txtComment);
            this.Controls.Add(this.panel1);
            this.Controls.Add(this.txtSecondName);
            this.Controls.Add(this.txtName);
            this.Controls.Add(this.label5);
            this.Controls.Add(this.label4);
            this.Controls.Add(this.label3);
            this.Controls.Add(this.label2);
            this.Controls.Add(this.lblName);
            this.Icon = ((System.Drawing.Icon)(resources.GetObject("$this.Icon")));
            this.Margin = new System.Windows.Forms.Padding(2);
            this.Name = "FormEditPatient";
            this.Text = "Редактирование пациента - EyesStudio";
            this.panel1.ResumeLayout(false);
            this.panel1.PerformLayout();
            this.ResumeLayout(false);
            this.PerformLayout();

        }

        #endregion

        private System.Windows.Forms.MonthCalendar monthCalendar;
        private System.Windows.Forms.Button btnAdd;
        private System.Windows.Forms.TextBox txtComment;
        private System.Windows.Forms.Panel panel1;
        private System.Windows.Forms.RadioButton radioButtonWoman;
        private System.Windows.Forms.RadioButton radioButtonMan;
        private System.Windows.Forms.TextBox txtSecondName;
        private System.Windows.Forms.TextBox txtName;
        private System.Windows.Forms.Label label5;
        private System.Windows.Forms.Label label4;
        private System.Windows.Forms.Label label3;
        private System.Windows.Forms.Label label2;
        private System.Windows.Forms.Label lblName;
    }
}namespace _SSU_EyesOffice.Forms
{
    partial class PlotXY
    {
        /// <summary>
        /// Required designer variable.
        /// </summary>
        private System.ComponentModel.IContainer components = null;

        /// <summary>
        /// Clean up any resources being used.
        /// </summary>
        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region Windows Form Designer generated code

        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea1 = new System.Windows.Forms.DataVisualization.Charting.ChartArea();
            System.Windows.Forms.DataVisualization.Charting.Series series1 = new System.Windows.Forms.DataVisualization.Charting.Series();
            System.Windows.Forms.DataVisualization.Charting.Series series2 = new System.Windows.Forms.DataVisualization.Charting.Series();
            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(PlotXY));
            this.chart1 = new System.Windows.Forms.DataVisualization.Charting.Chart();
            this.button1 = new System.Windows.Forms.Button();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).BeginInit();
            this.SuspendLayout();
            // 
            // chart1
            // 
            chartArea1.Name = "ChartArea1";
            this.chart1.ChartAreas.Add(chartArea1);
            this.chart1.Dock = System.Windows.Forms.DockStyle.Fill;
            this.chart1.Location = new System.Drawing.Point(0, 0);
            this.chart1.Margin = new System.Windows.Forms.Padding(2);
            this.chart1.Name = "chart1";
            series1.ChartArea = "ChartArea1";
            series1.ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Line;
            series1.Color = System.Drawing.Color.Red;
            series1.Name = "Series1";
            series2.ChartArea = "ChartArea1";
            series2.ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Line;
            series2.Color = System.Drawing.Color.Blue;
            series2.Name = "Series2";
            this.chart1.Series.Add(series1);
            this.chart1.Series.Add(series2);
            this.chart1.Size = new System.Drawing.Size(500, 375);
            this.chart1.TabIndex = 0;
            this.chart1.Text = "chart1";
            // 
            // button1
            // 
            this.button1.Image = ((System.Drawing.Image)(resources.GetObject("button1.Image")));
            this.button1.Location = new System.Drawing.Point(0, 0);
            this.button1.Name = "button1";
            this.button1.Size = new System.Drawing.Size(30, 27);
            this.button1.TabIndex = 1;
            this.button1.UseVisualStyleBackColor = true;
            this.button1.Click += new System.EventHandler(this.button1_Click);
            // 
            // PlotXY
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.ClientSize = new System.Drawing.Size(500, 375);
            this.Controls.Add(this.button1);
            this.Controls.Add(this.chart1);
            this.Icon = ((System.Drawing.Icon)(resources.GetObject("$this.Icon")));
            this.Margin = new System.Windows.Forms.Padding(2);
            this.Name = "PlotXY";
            this.Text = "PlotXY - EyesOffice";
            this.Load += new System.EventHandler(this.PlotXY_Load);
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).EndInit();
            this.ResumeLayout(false);

        }

        #endregion

        private System.Windows.Forms.DataVisualization.Charting.Chart chart1;
        private System.Windows.Forms.Button button1;
    }
}